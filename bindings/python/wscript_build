#! /usr/bin/env python
# encoding: utf-8
import os
import glob

bld(
    features="cxx cxxshlib pyext",
    source=bld.path.ant_glob("src/abacus_python/**/*.cpp"),
    target="abacus",
    name="abacus-python",
    use=["abacus", "pybind11_includes"],
    **({"install_path": "${PREFIX}/lib"} if bld.is_toplevel() else {}),
)


def _pytest(bld):

    with bld.create_virtualenv() as venv:

        if not os.path.isfile("bindings/python/tests/requirements.txt"):
            venv.run("python -m pip install pip-tools")
            venv.run("pip-compile bindings/python/tests/requirements.in")

        venv.run("python -m pip install -r bindings/python/tests/requirements.txt")

        abacus_python_lib = glob.glob(
            os.path.join(bld.out_dir, "bindings", "python", "abacus.*")
        )[0]

        venv_site_packages = os.path.join(venv.path, bld.env["PYTHONARCHDIR"][1:])

        venv.run(f"cp -a {abacus_python_lib} {venv_site_packages}")

        testdir = os.path.abspath("bindings/python/tests")

        # venv.run(f"gdb -args python -B -m pytest {testdir}")
        venv.run(f"python -B -m pytest {testdir}")


if bld.has_tool_option("run_tests"):
    bld.add_post_fun(_pytest)
