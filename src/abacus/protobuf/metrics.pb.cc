// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: abacus/protobuf/metrics.proto

#include "abacus/protobuf/metrics.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace abacus {
namespace protobuf {
        template <typename>
PROTOBUF_CONSTEXPR Metric::Metric(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.description_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_offset_)*/ 0u,
      /*decltype(_impl_.valid_offset_)*/ 0u,
      /*decltype(_impl_.type_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricDefaultTypeInternal() {}
  union {
    Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricDefaultTypeInternal _Metric_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UInt64Type::UInt64Type(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.unit_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.min_)*/ ::uint64_t{0u},
      /*decltype(_impl_.max_)*/ ::uint64_t{0u},
      /*decltype(_impl_.kind_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UInt64TypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UInt64TypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UInt64TypeDefaultTypeInternal() {}
  union {
    UInt64Type _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UInt64TypeDefaultTypeInternal _UInt64Type_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Int64Type::Int64Type(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.unit_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.min_)*/ ::int64_t{0},
      /*decltype(_impl_.max_)*/ ::int64_t{0},
      /*decltype(_impl_.kind_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct Int64TypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64TypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64TypeDefaultTypeInternal() {}
  union {
    Int64Type _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64TypeDefaultTypeInternal _Int64Type_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UInt32Type::UInt32Type(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.unit_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.kind_)*/ 0,
      /*decltype(_impl_.min_)*/ 0u,
      /*decltype(_impl_.max_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UInt32TypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UInt32TypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UInt32TypeDefaultTypeInternal() {}
  union {
    UInt32Type _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UInt32TypeDefaultTypeInternal _UInt32Type_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Int32Type::Int32Type(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.unit_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.kind_)*/ 0,
      /*decltype(_impl_.min_)*/ 0,
      /*decltype(_impl_.max_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct Int32TypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int32TypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int32TypeDefaultTypeInternal() {}
  union {
    Int32Type _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int32TypeDefaultTypeInternal _Int32Type_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Float64Type::Float64Type(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.unit_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.min_)*/ 0,
      /*decltype(_impl_.max_)*/ 0,
      /*decltype(_impl_.kind_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct Float64TypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Float64TypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Float64TypeDefaultTypeInternal() {}
  union {
    Float64Type _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Float64TypeDefaultTypeInternal _Float64Type_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Float32Type::Float32Type(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.unit_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.kind_)*/ 0,
      /*decltype(_impl_.min_)*/ 0,
      /*decltype(_impl_.max_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct Float32TypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Float32TypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Float32TypeDefaultTypeInternal() {}
  union {
    Float32Type _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Float32TypeDefaultTypeInternal _Float32Type_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BoolType::BoolType(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.unit_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.kind_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BoolTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoolTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoolTypeDefaultTypeInternal() {}
  union {
    BoolType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoolTypeDefaultTypeInternal _BoolType_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EnumInfo::EnumInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.description_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.severity_)*/ 0u,
    } {}
struct EnumInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnumInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnumInfoDefaultTypeInternal() {}
  union {
    EnumInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnumInfoDefaultTypeInternal _EnumInfo_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR EnumType_EnumMapEntry_DoNotUse::EnumType_EnumMapEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct EnumType_EnumMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnumType_EnumMapEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnumType_EnumMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EnumType_EnumMapEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnumType_EnumMapEntry_DoNotUseDefaultTypeInternal _EnumType_EnumMapEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EnumType::EnumType(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.enum_map_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct EnumTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnumTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnumTypeDefaultTypeInternal() {}
  union {
    EnumType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnumTypeDefaultTypeInternal _EnumType_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR MetricsMetadata_MetricsEntry_DoNotUse::MetricsMetadata_MetricsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct MetricsMetadata_MetricsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricsMetadata_MetricsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricsMetadata_MetricsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MetricsMetadata_MetricsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricsMetadata_MetricsEntry_DoNotUseDefaultTypeInternal _MetricsMetadata_MetricsEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MetricsMetadata::MetricsMetadata(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.metrics_) */ {},
      /*decltype(_impl_.protocol_version_)*/ 0u,
      /*decltype(_impl_.endianness_)*/ 0,
      /*decltype(_impl_.sync_value_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MetricsMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricsMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricsMetadataDefaultTypeInternal() {}
  union {
    MetricsMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricsMetadataDefaultTypeInternal _MetricsMetadata_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MetricValue::MetricValue(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.valid_)*/ false,
      /*decltype(_impl_.value_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct MetricValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricValueDefaultTypeInternal() {}
  union {
    MetricValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricValueDefaultTypeInternal _MetricValue_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MetricValues::MetricValues(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.values_)*/ {},
      /*decltype(_impl_.sync_value_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MetricValuesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricValuesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricValuesDefaultTypeInternal() {}
  union {
    MetricValues _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricValuesDefaultTypeInternal _MetricValues_default_instance_;
}  // namespace protobuf
}  // namespace abacus
static ::_pb::Metadata file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[15];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_abacus_2fprotobuf_2fmetrics_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_abacus_2fprotobuf_2fmetrics_2eproto = nullptr;
const ::uint32_t TableStruct_abacus_2fprotobuf_2fmetrics_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Metric, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Metric, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Metric, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Metric, _impl_.value_offset_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Metric, _impl_.valid_offset_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Metric, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Type, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Type, _impl_.unit_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Type, _impl_.kind_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Type, _impl_.min_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Type, _impl_.max_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Type, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Type, _impl_.unit_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Type, _impl_.kind_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Type, _impl_.min_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Type, _impl_.max_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Type, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Type, _impl_.unit_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Type, _impl_.kind_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Type, _impl_.min_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Type, _impl_.max_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Type, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Type, _impl_.unit_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Type, _impl_.kind_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Type, _impl_.min_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Type, _impl_.max_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Type, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Type, _impl_.unit_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Type, _impl_.kind_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Type, _impl_.min_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Type, _impl_.max_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Type, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Type, _impl_.unit_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Type, _impl_.kind_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Type, _impl_.min_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Type, _impl_.max_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::BoolType, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::BoolType, _impl_.unit_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::BoolType, _impl_.kind_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumInfo, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumInfo, _impl_.severity_),
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumType_EnumMapEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumType_EnumMapEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumType_EnumMapEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumType_EnumMapEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumType, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::EnumType, _impl_.enum_map_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata_MetricsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata_MetricsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata_MetricsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata_MetricsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata, _impl_.protocol_version_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata, _impl_.endianness_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata, _impl_.sync_value_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata, _impl_.metrics_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricValue, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricValue, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricValue, _impl_.valid_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricValue, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricValues, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricValues, _impl_.sync_value_),
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricValues, _impl_.values_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::abacus::protobuf::Metric)},
        {20, -1, -1, sizeof(::abacus::protobuf::UInt64Type)},
        {32, -1, -1, sizeof(::abacus::protobuf::Int64Type)},
        {44, -1, -1, sizeof(::abacus::protobuf::UInt32Type)},
        {56, -1, -1, sizeof(::abacus::protobuf::Int32Type)},
        {68, -1, -1, sizeof(::abacus::protobuf::Float64Type)},
        {80, -1, -1, sizeof(::abacus::protobuf::Float32Type)},
        {92, -1, -1, sizeof(::abacus::protobuf::BoolType)},
        {102, 113, -1, sizeof(::abacus::protobuf::EnumInfo)},
        {116, 126, -1, sizeof(::abacus::protobuf::EnumType_EnumMapEntry_DoNotUse)},
        {128, -1, -1, sizeof(::abacus::protobuf::EnumType)},
        {137, 147, -1, sizeof(::abacus::protobuf::MetricsMetadata_MetricsEntry_DoNotUse)},
        {149, -1, -1, sizeof(::abacus::protobuf::MetricsMetadata)},
        {161, -1, -1, sizeof(::abacus::protobuf::MetricValue)},
        {179, -1, -1, sizeof(::abacus::protobuf::MetricValues)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::abacus::protobuf::_Metric_default_instance_._instance,
    &::abacus::protobuf::_UInt64Type_default_instance_._instance,
    &::abacus::protobuf::_Int64Type_default_instance_._instance,
    &::abacus::protobuf::_UInt32Type_default_instance_._instance,
    &::abacus::protobuf::_Int32Type_default_instance_._instance,
    &::abacus::protobuf::_Float64Type_default_instance_._instance,
    &::abacus::protobuf::_Float32Type_default_instance_._instance,
    &::abacus::protobuf::_BoolType_default_instance_._instance,
    &::abacus::protobuf::_EnumInfo_default_instance_._instance,
    &::abacus::protobuf::_EnumType_EnumMapEntry_DoNotUse_default_instance_._instance,
    &::abacus::protobuf::_EnumType_default_instance_._instance,
    &::abacus::protobuf::_MetricsMetadata_MetricsEntry_DoNotUse_default_instance_._instance,
    &::abacus::protobuf::_MetricsMetadata_default_instance_._instance,
    &::abacus::protobuf::_MetricValue_default_instance_._instance,
    &::abacus::protobuf::_MetricValues_default_instance_._instance,
};
const char descriptor_table_protodef_abacus_2fprotobuf_2fmetrics_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\035abacus/protobuf/metrics.proto\022\017abacus."
    "protobuf\"\351\003\n\006Metric\022\023\n\013description\030\001 \001(\t"
    "\022\024\n\014value_offset\030\002 \001(\r\022\024\n\014valid_offset\030\003"
    " \001(\r\0222\n\013uint64_type\030\004 \001(\0132\033.abacus.proto"
    "buf.UInt64TypeH\000\0220\n\nint64_type\030\005 \001(\0132\032.a"
    "bacus.protobuf.Int64TypeH\000\0222\n\013uint32_typ"
    "e\030\006 \001(\0132\033.abacus.protobuf.UInt32TypeH\000\0220"
    "\n\nint32_type\030\007 \001(\0132\032.abacus.protobuf.Int"
    "32TypeH\000\0224\n\014float64_type\030\010 \001(\0132\034.abacus."
    "protobuf.Float64TypeH\000\0224\n\014float32_type\030\t"
    " \001(\0132\034.abacus.protobuf.Float32TypeH\000\022.\n\t"
    "bool_type\030\n \001(\0132\031.abacus.protobuf.BoolTy"
    "peH\000\022.\n\tenum_type\030\013 \001(\0132\031.abacus.protobu"
    "f.EnumTypeH\000B\006\n\004type\"Y\n\nUInt64Type\022\014\n\004un"
    "it\030\001 \001(\t\022#\n\004kind\030\002 \001(\0162\025.abacus.protobuf"
    ".Kind\022\013\n\003min\030\003 \001(\004\022\013\n\003max\030\004 \001(\004\"X\n\tInt64"
    "Type\022\014\n\004unit\030\001 \001(\t\022#\n\004kind\030\002 \001(\0162\025.abacu"
    "s.protobuf.Kind\022\013\n\003min\030\003 \001(\003\022\013\n\003max\030\004 \001("
    "\003\"Y\n\nUInt32Type\022\014\n\004unit\030\001 \001(\t\022#\n\004kind\030\002 "
    "\001(\0162\025.abacus.protobuf.Kind\022\013\n\003min\030\003 \001(\r\022"
    "\013\n\003max\030\004 \001(\r\"X\n\tInt32Type\022\014\n\004unit\030\001 \001(\t\022"
    "#\n\004kind\030\002 \001(\0162\025.abacus.protobuf.Kind\022\013\n\003"
    "min\030\003 \001(\005\022\013\n\003max\030\004 \001(\005\"Z\n\013Float64Type\022\014\n"
    "\004unit\030\001 \001(\t\022#\n\004kind\030\002 \001(\0162\025.abacus.proto"
    "buf.Kind\022\013\n\003min\030\003 \001(\001\022\013\n\003max\030\004 \001(\001\"Z\n\013Fl"
    "oat32Type\022\014\n\004unit\030\001 \001(\t\022#\n\004kind\030\002 \001(\0162\025."
    "abacus.protobuf.Kind\022\013\n\003min\030\003 \001(\002\022\013\n\003max"
    "\030\004 \001(\002\"=\n\010BoolType\022\014\n\004unit\030\001 \001(\t\022#\n\004kind"
    "\030\002 \001(\0162\025.abacus.protobuf.Kind\"f\n\010EnumInf"
    "o\022\014\n\004name\030\001 \001(\t\022\030\n\013description\030\002 \001(\tH\000\210\001"
    "\001\022\025\n\010severity\030\003 \001(\rH\001\210\001\001B\016\n\014_description"
    "B\013\n\t_severity\"\217\001\n\010EnumType\0228\n\010enum_map\030\001"
    " \003(\0132&.abacus.protobuf.EnumType.EnumMapE"
    "ntry\032I\n\014EnumMapEntry\022\013\n\003key\030\001 \001(\r\022(\n\005val"
    "ue\030\002 \001(\0132\031.abacus.protobuf.EnumInfo:\0028\001\""
    "\371\001\n\017MetricsMetadata\022\030\n\020protocol_version\030"
    "\001 \001(\r\022/\n\nendianness\030\002 \001(\0162\033.abacus.proto"
    "buf.Endianness\022\022\n\nsync_value\030\003 \001(\r\022>\n\007me"
    "trics\030\004 \003(\0132-.abacus.protobuf.MetricsMet"
    "adata.MetricsEntry\032G\n\014MetricsEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022&\n\005value\030\002 \001(\0132\027.abacus.protobuf"
    ".Metric:\0028\001\"\341\001\n\013MetricValue\022\r\n\005valid\030\001 \001"
    "(\010\022\026\n\014uint64_value\030\002 \001(\004H\000\022\025\n\013int64_valu"
    "e\030\003 \001(\003H\000\022\026\n\014uint32_value\030\004 \001(\rH\000\022\025\n\013int"
    "32_value\030\005 \001(\005H\000\022\027\n\rfloat32_value\030\006 \001(\002H"
    "\000\022\027\n\rfloat64_value\030\007 \001(\001H\000\022\024\n\nbool_value"
    "\030\010 \001(\010H\000\022\024\n\nenum_value\030\t \001(\rH\000B\007\n\005value\""
    "P\n\014MetricValues\022\022\n\nsync_value\030\001 \001(\r\022,\n\006v"
    "alues\030\002 \003(\0132\034.abacus.protobuf.MetricValu"
    "e*,\n\004Kind\022\013\n\007COUNTER\020\000\022\014\n\010CONSTANT\020\001\022\t\n\005"
    "GAUGE\020\002*!\n\nEndianness\022\n\n\006LITTLE\020\000\022\007\n\003BIG"
    "\020\001B\021Z\017abacus/protobufb\006proto3"
};
static ::absl::once_flag descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto = {
    false,
    false,
    2069,
    descriptor_table_protodef_abacus_2fprotobuf_2fmetrics_2eproto,
    "abacus/protobuf/metrics.proto",
    &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
    nullptr,
    0,
    15,
    schemas,
    file_default_instances,
    TableStruct_abacus_2fprotobuf_2fmetrics_2eproto::offsets,
    file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto,
    file_level_enum_descriptors_abacus_2fprotobuf_2fmetrics_2eproto,
    file_level_service_descriptors_abacus_2fprotobuf_2fmetrics_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter() {
  return &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_abacus_2fprotobuf_2fmetrics_2eproto(&descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto);
namespace abacus {
namespace protobuf {
const ::google::protobuf::EnumDescriptor* Kind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto);
  return file_level_enum_descriptors_abacus_2fprotobuf_2fmetrics_2eproto[0];
}
bool Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* Endianness_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto);
  return file_level_enum_descriptors_abacus_2fprotobuf_2fmetrics_2eproto[1];
}
bool Endianness_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class Metric::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Metric, _impl_._oneof_case_);
  static const ::abacus::protobuf::UInt64Type& uint64_type(const Metric* msg);
  static const ::abacus::protobuf::Int64Type& int64_type(const Metric* msg);
  static const ::abacus::protobuf::UInt32Type& uint32_type(const Metric* msg);
  static const ::abacus::protobuf::Int32Type& int32_type(const Metric* msg);
  static const ::abacus::protobuf::Float64Type& float64_type(const Metric* msg);
  static const ::abacus::protobuf::Float32Type& float32_type(const Metric* msg);
  static const ::abacus::protobuf::BoolType& bool_type(const Metric* msg);
  static const ::abacus::protobuf::EnumType& enum_type(const Metric* msg);
};

const ::abacus::protobuf::UInt64Type& Metric::_Internal::uint64_type(const Metric* msg) {
  return *msg->_impl_.type_.uint64_type_;
}
const ::abacus::protobuf::Int64Type& Metric::_Internal::int64_type(const Metric* msg) {
  return *msg->_impl_.type_.int64_type_;
}
const ::abacus::protobuf::UInt32Type& Metric::_Internal::uint32_type(const Metric* msg) {
  return *msg->_impl_.type_.uint32_type_;
}
const ::abacus::protobuf::Int32Type& Metric::_Internal::int32_type(const Metric* msg) {
  return *msg->_impl_.type_.int32_type_;
}
const ::abacus::protobuf::Float64Type& Metric::_Internal::float64_type(const Metric* msg) {
  return *msg->_impl_.type_.float64_type_;
}
const ::abacus::protobuf::Float32Type& Metric::_Internal::float32_type(const Metric* msg) {
  return *msg->_impl_.type_.float32_type_;
}
const ::abacus::protobuf::BoolType& Metric::_Internal::bool_type(const Metric* msg) {
  return *msg->_impl_.type_.bool_type_;
}
const ::abacus::protobuf::EnumType& Metric::_Internal::enum_type(const Metric* msg) {
  return *msg->_impl_.type_.enum_type_;
}
void Metric::set_allocated_uint64_type(::abacus::protobuf::UInt64Type* uint64_type) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (uint64_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(uint64_type);
    if (message_arena != submessage_arena) {
      uint64_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uint64_type, submessage_arena);
    }
    set_has_uint64_type();
    _impl_.type_.uint64_type_ = uint64_type;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.uint64_type)
}
void Metric::set_allocated_int64_type(::abacus::protobuf::Int64Type* int64_type) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (int64_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(int64_type);
    if (message_arena != submessage_arena) {
      int64_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, int64_type, submessage_arena);
    }
    set_has_int64_type();
    _impl_.type_.int64_type_ = int64_type;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.int64_type)
}
void Metric::set_allocated_uint32_type(::abacus::protobuf::UInt32Type* uint32_type) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (uint32_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(uint32_type);
    if (message_arena != submessage_arena) {
      uint32_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uint32_type, submessage_arena);
    }
    set_has_uint32_type();
    _impl_.type_.uint32_type_ = uint32_type;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.uint32_type)
}
void Metric::set_allocated_int32_type(::abacus::protobuf::Int32Type* int32_type) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (int32_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(int32_type);
    if (message_arena != submessage_arena) {
      int32_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, int32_type, submessage_arena);
    }
    set_has_int32_type();
    _impl_.type_.int32_type_ = int32_type;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.int32_type)
}
void Metric::set_allocated_float64_type(::abacus::protobuf::Float64Type* float64_type) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (float64_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(float64_type);
    if (message_arena != submessage_arena) {
      float64_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, float64_type, submessage_arena);
    }
    set_has_float64_type();
    _impl_.type_.float64_type_ = float64_type;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.float64_type)
}
void Metric::set_allocated_float32_type(::abacus::protobuf::Float32Type* float32_type) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (float32_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(float32_type);
    if (message_arena != submessage_arena) {
      float32_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, float32_type, submessage_arena);
    }
    set_has_float32_type();
    _impl_.type_.float32_type_ = float32_type;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.float32_type)
}
void Metric::set_allocated_bool_type(::abacus::protobuf::BoolType* bool_type) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (bool_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(bool_type);
    if (message_arena != submessage_arena) {
      bool_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bool_type, submessage_arena);
    }
    set_has_bool_type();
    _impl_.type_.bool_type_ = bool_type;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.bool_type)
}
void Metric::set_allocated_enum_type(::abacus::protobuf::EnumType* enum_type) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (enum_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(enum_type);
    if (message_arena != submessage_arena) {
      enum_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enum_type, submessage_arena);
    }
    set_has_enum_type();
    _impl_.type_.enum_type_ = enum_type;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.enum_type)
}
Metric::Metric(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Metric)
}
Metric::Metric(const Metric& from) : ::google::protobuf::Message() {
  Metric* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.description_){},
      decltype(_impl_.value_offset_){},
      decltype(_impl_.valid_offset_){},
      decltype(_impl_.type_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.value_offset_, &from._impl_.value_offset_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.valid_offset_) -
    reinterpret_cast<char*>(&_impl_.value_offset_)) + sizeof(_impl_.valid_offset_));
  clear_has_type();
  switch (from.type_case()) {
    case kUint64Type: {
      _this->_internal_mutable_uint64_type()->::abacus::protobuf::UInt64Type::MergeFrom(
          from._internal_uint64_type());
      break;
    }
    case kInt64Type: {
      _this->_internal_mutable_int64_type()->::abacus::protobuf::Int64Type::MergeFrom(
          from._internal_int64_type());
      break;
    }
    case kUint32Type: {
      _this->_internal_mutable_uint32_type()->::abacus::protobuf::UInt32Type::MergeFrom(
          from._internal_uint32_type());
      break;
    }
    case kInt32Type: {
      _this->_internal_mutable_int32_type()->::abacus::protobuf::Int32Type::MergeFrom(
          from._internal_int32_type());
      break;
    }
    case kFloat64Type: {
      _this->_internal_mutable_float64_type()->::abacus::protobuf::Float64Type::MergeFrom(
          from._internal_float64_type());
      break;
    }
    case kFloat32Type: {
      _this->_internal_mutable_float32_type()->::abacus::protobuf::Float32Type::MergeFrom(
          from._internal_float32_type());
      break;
    }
    case kBoolType: {
      _this->_internal_mutable_bool_type()->::abacus::protobuf::BoolType::MergeFrom(
          from._internal_bool_type());
      break;
    }
    case kEnumType: {
      _this->_internal_mutable_enum_type()->::abacus::protobuf::EnumType::MergeFrom(
          from._internal_enum_type());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Metric)
}
inline void Metric::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.description_){},
      decltype(_impl_.value_offset_){0u},
      decltype(_impl_.valid_offset_){0u},
      decltype(_impl_.type_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_type();
}
Metric::~Metric() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Metric)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Metric::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.description_.Destroy();
  if (has_type()) {
    clear_type();
  }
}
void Metric::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Metric::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:abacus.protobuf.Metric)
  switch (type_case()) {
    case kUint64Type: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.type_.uint64_type_;
      }
      break;
    }
    case kInt64Type: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.type_.int64_type_;
      }
      break;
    }
    case kUint32Type: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.type_.uint32_type_;
      }
      break;
    }
    case kInt32Type: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.type_.int32_type_;
      }
      break;
    }
    case kFloat64Type: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.type_.float64_type_;
      }
      break;
    }
    case kFloat32Type: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.type_.float32_type_;
      }
      break;
    }
    case kBoolType: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.type_.bool_type_;
      }
      break;
    }
    case kEnumType: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.type_.enum_type_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


PROTOBUF_NOINLINE void Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Metric)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.value_offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.valid_offset_) -
      reinterpret_cast<char*>(&_impl_.value_offset_)) + sizeof(_impl_.valid_offset_));
  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Metric::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 11, 8, 50, 2> Metric::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Metric_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string description = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Metric, _impl_.description_)}},
    // uint32 value_offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Metric, _impl_.value_offset_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Metric, _impl_.value_offset_)}},
    // uint32 valid_offset = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Metric, _impl_.valid_offset_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Metric, _impl_.valid_offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string description = 1;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 value_offset = 2;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.value_offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 valid_offset = 3;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.valid_offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .abacus.protobuf.UInt64Type uint64_type = 4;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.uint64_type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.Int64Type int64_type = 5;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.int64_type_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.UInt32Type uint32_type = 6;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.uint32_type_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.Int32Type int32_type = 7;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.int32_type_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.Float64Type float64_type = 8;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.float64_type_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.Float32Type float32_type = 9;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.float32_type_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.BoolType bool_type = 10;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.bool_type_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.EnumType enum_type = 11;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.enum_type_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::abacus::protobuf::UInt64Type>()},
    {::_pbi::TcParser::GetTable<::abacus::protobuf::Int64Type>()},
    {::_pbi::TcParser::GetTable<::abacus::protobuf::UInt32Type>()},
    {::_pbi::TcParser::GetTable<::abacus::protobuf::Int32Type>()},
    {::_pbi::TcParser::GetTable<::abacus::protobuf::Float64Type>()},
    {::_pbi::TcParser::GetTable<::abacus::protobuf::Float32Type>()},
    {::_pbi::TcParser::GetTable<::abacus::protobuf::BoolType>()},
    {::_pbi::TcParser::GetTable<::abacus::protobuf::EnumType>()},
  }}, {{
    "\26\13\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "abacus.protobuf.Metric"
    "description"
  }},
};

::uint8_t* Metric::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string description = 1;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Metric.description");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 value_offset = 2;
  if (this->_internal_value_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_value_offset(), target);
  }

  // uint32 valid_offset = 3;
  if (this->_internal_valid_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_valid_offset(), target);
  }

  switch (type_case()) {
    case kUint64Type: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, _Internal::uint64_type(this),
          _Internal::uint64_type(this).GetCachedSize(), target, stream);
      break;
    }
    case kInt64Type: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, _Internal::int64_type(this),
          _Internal::int64_type(this).GetCachedSize(), target, stream);
      break;
    }
    case kUint32Type: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, _Internal::uint32_type(this),
          _Internal::uint32_type(this).GetCachedSize(), target, stream);
      break;
    }
    case kInt32Type: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, _Internal::int32_type(this),
          _Internal::int32_type(this).GetCachedSize(), target, stream);
      break;
    }
    case kFloat64Type: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, _Internal::float64_type(this),
          _Internal::float64_type(this).GetCachedSize(), target, stream);
      break;
    }
    case kFloat32Type: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, _Internal::float32_type(this),
          _Internal::float32_type(this).GetCachedSize(), target, stream);
      break;
    }
    case kBoolType: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, _Internal::bool_type(this),
          _Internal::bool_type(this).GetCachedSize(), target, stream);
      break;
    }
    case kEnumType: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, _Internal::enum_type(this),
          _Internal::enum_type(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Metric)
  return target;
}

::size_t Metric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 1;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // uint32 value_offset = 2;
  if (this->_internal_value_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_value_offset());
  }

  // uint32 valid_offset = 3;
  if (this->_internal_valid_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_valid_offset());
  }

  switch (type_case()) {
    // .abacus.protobuf.UInt64Type uint64_type = 4;
    case kUint64Type: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.type_.uint64_type_);
      break;
    }
    // .abacus.protobuf.Int64Type int64_type = 5;
    case kInt64Type: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.type_.int64_type_);
      break;
    }
    // .abacus.protobuf.UInt32Type uint32_type = 6;
    case kUint32Type: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.type_.uint32_type_);
      break;
    }
    // .abacus.protobuf.Int32Type int32_type = 7;
    case kInt32Type: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.type_.int32_type_);
      break;
    }
    // .abacus.protobuf.Float64Type float64_type = 8;
    case kFloat64Type: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.type_.float64_type_);
      break;
    }
    // .abacus.protobuf.Float32Type float32_type = 9;
    case kFloat32Type: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.type_.float32_type_);
      break;
    }
    // .abacus.protobuf.BoolType bool_type = 10;
    case kBoolType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.type_.bool_type_);
      break;
    }
    // .abacus.protobuf.EnumType enum_type = 11;
    case kEnumType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.type_.enum_type_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Metric::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Metric::MergeImpl
};
const ::google::protobuf::Message::ClassData*Metric::GetClassData() const { return &_class_data_; }


void Metric::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Metric*>(&to_msg);
  auto& from = static_cast<const Metric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_value_offset() != 0) {
    _this->_internal_set_value_offset(from._internal_value_offset());
  }
  if (from._internal_valid_offset() != 0) {
    _this->_internal_set_valid_offset(from._internal_valid_offset());
  }
  switch (from.type_case()) {
    case kUint64Type: {
      _this->_internal_mutable_uint64_type()->::abacus::protobuf::UInt64Type::MergeFrom(
          from._internal_uint64_type());
      break;
    }
    case kInt64Type: {
      _this->_internal_mutable_int64_type()->::abacus::protobuf::Int64Type::MergeFrom(
          from._internal_int64_type());
      break;
    }
    case kUint32Type: {
      _this->_internal_mutable_uint32_type()->::abacus::protobuf::UInt32Type::MergeFrom(
          from._internal_uint32_type());
      break;
    }
    case kInt32Type: {
      _this->_internal_mutable_int32_type()->::abacus::protobuf::Int32Type::MergeFrom(
          from._internal_int32_type());
      break;
    }
    case kFloat64Type: {
      _this->_internal_mutable_float64_type()->::abacus::protobuf::Float64Type::MergeFrom(
          from._internal_float64_type());
      break;
    }
    case kFloat32Type: {
      _this->_internal_mutable_float32_type()->::abacus::protobuf::Float32Type::MergeFrom(
          from._internal_float32_type());
      break;
    }
    case kBoolType: {
      _this->_internal_mutable_bool_type()->::abacus::protobuf::BoolType::MergeFrom(
          from._internal_bool_type());
      break;
    }
    case kEnumType: {
      _this->_internal_mutable_enum_type()->::abacus::protobuf::EnumType::MergeFrom(
          from._internal_enum_type());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Metric::CopyFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Metric::IsInitialized() const {
  return true;
}

void Metric::InternalSwap(Metric* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, lhs_arena,
                                       &other->_impl_.description_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Metric, _impl_.valid_offset_)
      + sizeof(Metric::_impl_.valid_offset_)
      - PROTOBUF_FIELD_OFFSET(Metric, _impl_.value_offset_)>(
          reinterpret_cast<char*>(&_impl_.value_offset_),
          reinterpret_cast<char*>(&other->_impl_.value_offset_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Metric::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[0]);
}
// ===================================================================

class UInt64Type::_Internal {
 public:
};

UInt64Type::UInt64Type(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.UInt64Type)
}
UInt64Type::UInt64Type(const UInt64Type& from) : ::google::protobuf::Message() {
  UInt64Type* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.min_){},
      decltype(_impl_.max_){},
      decltype(_impl_.kind_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.min_, &from._impl_.min_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.kind_) -
    reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.kind_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.UInt64Type)
}
inline void UInt64Type::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.min_){::uint64_t{0u}},
      decltype(_impl_.max_){::uint64_t{0u}},
      decltype(_impl_.kind_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UInt64Type::~UInt64Type() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.UInt64Type)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UInt64Type::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unit_.Destroy();
}
void UInt64Type::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UInt64Type::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.UInt64Type)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unit_.ClearToEmpty();
  ::memset(&_impl_.min_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.kind_) -
      reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.kind_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UInt64Type::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 39, 2> UInt64Type::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UInt64Type_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 max = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UInt64Type, _impl_.max_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UInt64Type, _impl_.max_)}},
    // string unit = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UInt64Type, _impl_.unit_)}},
    // .abacus.protobuf.Kind kind = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt64Type, _impl_.kind_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UInt64Type, _impl_.kind_)}},
    // uint64 min = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UInt64Type, _impl_.min_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UInt64Type, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string unit = 1;
    {PROTOBUF_FIELD_OFFSET(UInt64Type, _impl_.unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 2;
    {PROTOBUF_FIELD_OFFSET(UInt64Type, _impl_.kind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 min = 3;
    {PROTOBUF_FIELD_OFFSET(UInt64Type, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 max = 4;
    {PROTOBUF_FIELD_OFFSET(UInt64Type, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\32\4\0\0\0\0\0\0"
    "abacus.protobuf.UInt64Type"
    "unit"
  }},
};

::uint8_t* UInt64Type::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.UInt64Type)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    const std::string& _s = this->_internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.UInt64Type.unit");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_kind(), target);
  }

  // uint64 min = 3;
  if (this->_internal_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_min(), target);
  }

  // uint64 max = 4;
  if (this->_internal_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.UInt64Type)
  return target;
}

::size_t UInt64Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.UInt64Type)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_unit());
  }

  // uint64 min = 3;
  if (this->_internal_min() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_min());
  }

  // uint64 max = 4;
  if (this->_internal_max() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_max());
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_kind());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UInt64Type::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UInt64Type::MergeImpl
};
const ::google::protobuf::Message::ClassData*UInt64Type::GetClassData() const { return &_class_data_; }


void UInt64Type::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UInt64Type*>(&to_msg);
  auto& from = static_cast<const UInt64Type&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.UInt64Type)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (from._internal_min() != 0) {
    _this->_internal_set_min(from._internal_min());
  }
  if (from._internal_max() != 0) {
    _this->_internal_set_max(from._internal_max());
  }
  if (from._internal_kind() != 0) {
    _this->_internal_set_kind(from._internal_kind());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UInt64Type::CopyFrom(const UInt64Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.UInt64Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UInt64Type::IsInitialized() const {
  return true;
}

void UInt64Type::InternalSwap(UInt64Type* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, lhs_arena,
                                       &other->_impl_.unit_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UInt64Type, _impl_.kind_)
      + sizeof(UInt64Type::_impl_.kind_)
      - PROTOBUF_FIELD_OFFSET(UInt64Type, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf::Metadata UInt64Type::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[1]);
}
// ===================================================================

class Int64Type::_Internal {
 public:
};

Int64Type::Int64Type(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Int64Type)
}
Int64Type::Int64Type(const Int64Type& from) : ::google::protobuf::Message() {
  Int64Type* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.min_){},
      decltype(_impl_.max_){},
      decltype(_impl_.kind_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.min_, &from._impl_.min_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.kind_) -
    reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.kind_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Int64Type)
}
inline void Int64Type::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.min_){::int64_t{0}},
      decltype(_impl_.max_){::int64_t{0}},
      decltype(_impl_.kind_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Int64Type::~Int64Type() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Int64Type)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Int64Type::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unit_.Destroy();
}
void Int64Type::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Int64Type::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Int64Type)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unit_.ClearToEmpty();
  ::memset(&_impl_.min_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.kind_) -
      reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.kind_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Int64Type::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 38, 2> Int64Type::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Int64Type_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 max = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64Type, _impl_.max_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Int64Type, _impl_.max_)}},
    // string unit = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Int64Type, _impl_.unit_)}},
    // .abacus.protobuf.Kind kind = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int64Type, _impl_.kind_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Int64Type, _impl_.kind_)}},
    // int64 min = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64Type, _impl_.min_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Int64Type, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string unit = 1;
    {PROTOBUF_FIELD_OFFSET(Int64Type, _impl_.unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 2;
    {PROTOBUF_FIELD_OFFSET(Int64Type, _impl_.kind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 min = 3;
    {PROTOBUF_FIELD_OFFSET(Int64Type, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 max = 4;
    {PROTOBUF_FIELD_OFFSET(Int64Type, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\31\4\0\0\0\0\0\0"
    "abacus.protobuf.Int64Type"
    "unit"
  }},
};

::uint8_t* Int64Type::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Int64Type)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    const std::string& _s = this->_internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Int64Type.unit");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_kind(), target);
  }

  // int64 min = 3;
  if (this->_internal_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_min(), target);
  }

  // int64 max = 4;
  if (this->_internal_max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Int64Type)
  return target;
}

::size_t Int64Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Int64Type)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_unit());
  }

  // int64 min = 3;
  if (this->_internal_min() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_min());
  }

  // int64 max = 4;
  if (this->_internal_max() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_max());
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_kind());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Int64Type::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Int64Type::MergeImpl
};
const ::google::protobuf::Message::ClassData*Int64Type::GetClassData() const { return &_class_data_; }


void Int64Type::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Int64Type*>(&to_msg);
  auto& from = static_cast<const Int64Type&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Int64Type)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (from._internal_min() != 0) {
    _this->_internal_set_min(from._internal_min());
  }
  if (from._internal_max() != 0) {
    _this->_internal_set_max(from._internal_max());
  }
  if (from._internal_kind() != 0) {
    _this->_internal_set_kind(from._internal_kind());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64Type::CopyFrom(const Int64Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Int64Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Int64Type::IsInitialized() const {
  return true;
}

void Int64Type::InternalSwap(Int64Type* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, lhs_arena,
                                       &other->_impl_.unit_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int64Type, _impl_.kind_)
      + sizeof(Int64Type::_impl_.kind_)
      - PROTOBUF_FIELD_OFFSET(Int64Type, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf::Metadata Int64Type::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[2]);
}
// ===================================================================

class UInt32Type::_Internal {
 public:
};

UInt32Type::UInt32Type(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.UInt32Type)
}
UInt32Type::UInt32Type(const UInt32Type& from) : ::google::protobuf::Message() {
  UInt32Type* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.kind_){},
      decltype(_impl_.min_){},
      decltype(_impl_.max_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.kind_, &from._impl_.kind_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.max_) -
    reinterpret_cast<char*>(&_impl_.kind_)) + sizeof(_impl_.max_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.UInt32Type)
}
inline void UInt32Type::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.kind_){0},
      decltype(_impl_.min_){0u},
      decltype(_impl_.max_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UInt32Type::~UInt32Type() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.UInt32Type)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UInt32Type::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unit_.Destroy();
}
void UInt32Type::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UInt32Type::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.UInt32Type)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unit_.ClearToEmpty();
  ::memset(&_impl_.kind_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_) -
      reinterpret_cast<char*>(&_impl_.kind_)) + sizeof(_impl_.max_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UInt32Type::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 39, 2> UInt32Type::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UInt32Type_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 max = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt32Type, _impl_.max_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UInt32Type, _impl_.max_)}},
    // string unit = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UInt32Type, _impl_.unit_)}},
    // .abacus.protobuf.Kind kind = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt32Type, _impl_.kind_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UInt32Type, _impl_.kind_)}},
    // uint32 min = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt32Type, _impl_.min_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UInt32Type, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string unit = 1;
    {PROTOBUF_FIELD_OFFSET(UInt32Type, _impl_.unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 2;
    {PROTOBUF_FIELD_OFFSET(UInt32Type, _impl_.kind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 min = 3;
    {PROTOBUF_FIELD_OFFSET(UInt32Type, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max = 4;
    {PROTOBUF_FIELD_OFFSET(UInt32Type, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\32\4\0\0\0\0\0\0"
    "abacus.protobuf.UInt32Type"
    "unit"
  }},
};

::uint8_t* UInt32Type::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.UInt32Type)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    const std::string& _s = this->_internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.UInt32Type.unit");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_kind(), target);
  }

  // uint32 min = 3;
  if (this->_internal_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_min(), target);
  }

  // uint32 max = 4;
  if (this->_internal_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.UInt32Type)
  return target;
}

::size_t UInt32Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.UInt32Type)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_unit());
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_kind());
  }

  // uint32 min = 3;
  if (this->_internal_min() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_min());
  }

  // uint32 max = 4;
  if (this->_internal_max() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_max());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UInt32Type::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UInt32Type::MergeImpl
};
const ::google::protobuf::Message::ClassData*UInt32Type::GetClassData() const { return &_class_data_; }


void UInt32Type::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UInt32Type*>(&to_msg);
  auto& from = static_cast<const UInt32Type&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.UInt32Type)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (from._internal_kind() != 0) {
    _this->_internal_set_kind(from._internal_kind());
  }
  if (from._internal_min() != 0) {
    _this->_internal_set_min(from._internal_min());
  }
  if (from._internal_max() != 0) {
    _this->_internal_set_max(from._internal_max());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UInt32Type::CopyFrom(const UInt32Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.UInt32Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UInt32Type::IsInitialized() const {
  return true;
}

void UInt32Type::InternalSwap(UInt32Type* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, lhs_arena,
                                       &other->_impl_.unit_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UInt32Type, _impl_.max_)
      + sizeof(UInt32Type::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(UInt32Type, _impl_.kind_)>(
          reinterpret_cast<char*>(&_impl_.kind_),
          reinterpret_cast<char*>(&other->_impl_.kind_));
}

::google::protobuf::Metadata UInt32Type::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[3]);
}
// ===================================================================

class Int32Type::_Internal {
 public:
};

Int32Type::Int32Type(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Int32Type)
}
Int32Type::Int32Type(const Int32Type& from) : ::google::protobuf::Message() {
  Int32Type* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.kind_){},
      decltype(_impl_.min_){},
      decltype(_impl_.max_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.kind_, &from._impl_.kind_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.max_) -
    reinterpret_cast<char*>(&_impl_.kind_)) + sizeof(_impl_.max_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Int32Type)
}
inline void Int32Type::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.kind_){0},
      decltype(_impl_.min_){0},
      decltype(_impl_.max_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Int32Type::~Int32Type() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Int32Type)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Int32Type::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unit_.Destroy();
}
void Int32Type::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Int32Type::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Int32Type)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unit_.ClearToEmpty();
  ::memset(&_impl_.kind_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_) -
      reinterpret_cast<char*>(&_impl_.kind_)) + sizeof(_impl_.max_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Int32Type::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 38, 2> Int32Type::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Int32Type_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 max = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int32Type, _impl_.max_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Int32Type, _impl_.max_)}},
    // string unit = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Int32Type, _impl_.unit_)}},
    // .abacus.protobuf.Kind kind = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int32Type, _impl_.kind_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Int32Type, _impl_.kind_)}},
    // int32 min = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int32Type, _impl_.min_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Int32Type, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string unit = 1;
    {PROTOBUF_FIELD_OFFSET(Int32Type, _impl_.unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 2;
    {PROTOBUF_FIELD_OFFSET(Int32Type, _impl_.kind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 min = 3;
    {PROTOBUF_FIELD_OFFSET(Int32Type, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 max = 4;
    {PROTOBUF_FIELD_OFFSET(Int32Type, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\31\4\0\0\0\0\0\0"
    "abacus.protobuf.Int32Type"
    "unit"
  }},
};

::uint8_t* Int32Type::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Int32Type)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    const std::string& _s = this->_internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Int32Type.unit");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_kind(), target);
  }

  // int32 min = 3;
  if (this->_internal_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_min(), target);
  }

  // int32 max = 4;
  if (this->_internal_max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Int32Type)
  return target;
}

::size_t Int32Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Int32Type)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_unit());
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_kind());
  }

  // int32 min = 3;
  if (this->_internal_min() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_min());
  }

  // int32 max = 4;
  if (this->_internal_max() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_max());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Int32Type::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Int32Type::MergeImpl
};
const ::google::protobuf::Message::ClassData*Int32Type::GetClassData() const { return &_class_data_; }


void Int32Type::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Int32Type*>(&to_msg);
  auto& from = static_cast<const Int32Type&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Int32Type)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (from._internal_kind() != 0) {
    _this->_internal_set_kind(from._internal_kind());
  }
  if (from._internal_min() != 0) {
    _this->_internal_set_min(from._internal_min());
  }
  if (from._internal_max() != 0) {
    _this->_internal_set_max(from._internal_max());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int32Type::CopyFrom(const Int32Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Int32Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Int32Type::IsInitialized() const {
  return true;
}

void Int32Type::InternalSwap(Int32Type* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, lhs_arena,
                                       &other->_impl_.unit_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int32Type, _impl_.max_)
      + sizeof(Int32Type::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Int32Type, _impl_.kind_)>(
          reinterpret_cast<char*>(&_impl_.kind_),
          reinterpret_cast<char*>(&other->_impl_.kind_));
}

::google::protobuf::Metadata Int32Type::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[4]);
}
// ===================================================================

class Float64Type::_Internal {
 public:
};

Float64Type::Float64Type(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Float64Type)
}
Float64Type::Float64Type(const Float64Type& from) : ::google::protobuf::Message() {
  Float64Type* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.min_){},
      decltype(_impl_.max_){},
      decltype(_impl_.kind_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.min_, &from._impl_.min_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.kind_) -
    reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.kind_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Float64Type)
}
inline void Float64Type::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.min_){0},
      decltype(_impl_.max_){0},
      decltype(_impl_.kind_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Float64Type::~Float64Type() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Float64Type)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Float64Type::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unit_.Destroy();
}
void Float64Type::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Float64Type::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Float64Type)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unit_.ClearToEmpty();
  ::memset(&_impl_.min_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.kind_) -
      reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.kind_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Float64Type::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 40, 2> Float64Type::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Float64Type_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double max = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Float64Type, _impl_.max_)}},
    // string unit = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Float64Type, _impl_.unit_)}},
    // .abacus.protobuf.Kind kind = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Float64Type, _impl_.kind_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Float64Type, _impl_.kind_)}},
    // double min = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Float64Type, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string unit = 1;
    {PROTOBUF_FIELD_OFFSET(Float64Type, _impl_.unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 2;
    {PROTOBUF_FIELD_OFFSET(Float64Type, _impl_.kind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double min = 3;
    {PROTOBUF_FIELD_OFFSET(Float64Type, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double max = 4;
    {PROTOBUF_FIELD_OFFSET(Float64Type, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\33\4\0\0\0\0\0\0"
    "abacus.protobuf.Float64Type"
    "unit"
  }},
};

::uint8_t* Float64Type::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Float64Type)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    const std::string& _s = this->_internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Float64Type.unit");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_kind(), target);
  }

  // double min = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_min = this->_internal_min();
  ::uint64_t raw_min;
  memcpy(&raw_min, &tmp_min, sizeof(tmp_min));
  if (raw_min != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_min(), target);
  }

  // double max = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max = this->_internal_max();
  ::uint64_t raw_max;
  memcpy(&raw_max, &tmp_max, sizeof(tmp_max));
  if (raw_max != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Float64Type)
  return target;
}

::size_t Float64Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Float64Type)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_unit());
  }

  // double min = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_min = this->_internal_min();
  ::uint64_t raw_min;
  memcpy(&raw_min, &tmp_min, sizeof(tmp_min));
  if (raw_min != 0) {
    total_size += 9;
  }

  // double max = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max = this->_internal_max();
  ::uint64_t raw_max;
  memcpy(&raw_max, &tmp_max, sizeof(tmp_max));
  if (raw_max != 0) {
    total_size += 9;
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_kind());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Float64Type::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Float64Type::MergeImpl
};
const ::google::protobuf::Message::ClassData*Float64Type::GetClassData() const { return &_class_data_; }


void Float64Type::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Float64Type*>(&to_msg);
  auto& from = static_cast<const Float64Type&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Float64Type)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_min = from._internal_min();
  ::uint64_t raw_min;
  memcpy(&raw_min, &tmp_min, sizeof(tmp_min));
  if (raw_min != 0) {
    _this->_internal_set_min(from._internal_min());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max = from._internal_max();
  ::uint64_t raw_max;
  memcpy(&raw_max, &tmp_max, sizeof(tmp_max));
  if (raw_max != 0) {
    _this->_internal_set_max(from._internal_max());
  }
  if (from._internal_kind() != 0) {
    _this->_internal_set_kind(from._internal_kind());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Float64Type::CopyFrom(const Float64Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Float64Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Float64Type::IsInitialized() const {
  return true;
}

void Float64Type::InternalSwap(Float64Type* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, lhs_arena,
                                       &other->_impl_.unit_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Float64Type, _impl_.kind_)
      + sizeof(Float64Type::_impl_.kind_)
      - PROTOBUF_FIELD_OFFSET(Float64Type, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf::Metadata Float64Type::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[5]);
}
// ===================================================================

class Float32Type::_Internal {
 public:
};

Float32Type::Float32Type(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Float32Type)
}
Float32Type::Float32Type(const Float32Type& from) : ::google::protobuf::Message() {
  Float32Type* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.kind_){},
      decltype(_impl_.min_){},
      decltype(_impl_.max_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.kind_, &from._impl_.kind_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.max_) -
    reinterpret_cast<char*>(&_impl_.kind_)) + sizeof(_impl_.max_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Float32Type)
}
inline void Float32Type::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.kind_){0},
      decltype(_impl_.min_){0},
      decltype(_impl_.max_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Float32Type::~Float32Type() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Float32Type)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Float32Type::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unit_.Destroy();
}
void Float32Type::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Float32Type::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Float32Type)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unit_.ClearToEmpty();
  ::memset(&_impl_.kind_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_) -
      reinterpret_cast<char*>(&_impl_.kind_)) + sizeof(_impl_.max_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Float32Type::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 40, 2> Float32Type::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Float32Type_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float max = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Float32Type, _impl_.max_)}},
    // string unit = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Float32Type, _impl_.unit_)}},
    // .abacus.protobuf.Kind kind = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Float32Type, _impl_.kind_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Float32Type, _impl_.kind_)}},
    // float min = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Float32Type, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string unit = 1;
    {PROTOBUF_FIELD_OFFSET(Float32Type, _impl_.unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 2;
    {PROTOBUF_FIELD_OFFSET(Float32Type, _impl_.kind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // float min = 3;
    {PROTOBUF_FIELD_OFFSET(Float32Type, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float max = 4;
    {PROTOBUF_FIELD_OFFSET(Float32Type, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\33\4\0\0\0\0\0\0"
    "abacus.protobuf.Float32Type"
    "unit"
  }},
};

::uint8_t* Float32Type::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Float32Type)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    const std::string& _s = this->_internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Float32Type.unit");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_kind(), target);
  }

  // float min = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_min = this->_internal_min();
  ::uint32_t raw_min;
  memcpy(&raw_min, &tmp_min, sizeof(tmp_min));
  if (raw_min != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_min(), target);
  }

  // float max = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_max = this->_internal_max();
  ::uint32_t raw_max;
  memcpy(&raw_max, &tmp_max, sizeof(tmp_max));
  if (raw_max != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Float32Type)
  return target;
}

::size_t Float32Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Float32Type)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_unit());
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_kind());
  }

  // float min = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_min = this->_internal_min();
  ::uint32_t raw_min;
  memcpy(&raw_min, &tmp_min, sizeof(tmp_min));
  if (raw_min != 0) {
    total_size += 5;
  }

  // float max = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_max = this->_internal_max();
  ::uint32_t raw_max;
  memcpy(&raw_max, &tmp_max, sizeof(tmp_max));
  if (raw_max != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Float32Type::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Float32Type::MergeImpl
};
const ::google::protobuf::Message::ClassData*Float32Type::GetClassData() const { return &_class_data_; }


void Float32Type::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Float32Type*>(&to_msg);
  auto& from = static_cast<const Float32Type&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Float32Type)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (from._internal_kind() != 0) {
    _this->_internal_set_kind(from._internal_kind());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_min = from._internal_min();
  ::uint32_t raw_min;
  memcpy(&raw_min, &tmp_min, sizeof(tmp_min));
  if (raw_min != 0) {
    _this->_internal_set_min(from._internal_min());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_max = from._internal_max();
  ::uint32_t raw_max;
  memcpy(&raw_max, &tmp_max, sizeof(tmp_max));
  if (raw_max != 0) {
    _this->_internal_set_max(from._internal_max());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Float32Type::CopyFrom(const Float32Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Float32Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Float32Type::IsInitialized() const {
  return true;
}

void Float32Type::InternalSwap(Float32Type* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, lhs_arena,
                                       &other->_impl_.unit_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Float32Type, _impl_.max_)
      + sizeof(Float32Type::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Float32Type, _impl_.kind_)>(
          reinterpret_cast<char*>(&_impl_.kind_),
          reinterpret_cast<char*>(&other->_impl_.kind_));
}

::google::protobuf::Metadata Float32Type::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[6]);
}
// ===================================================================

class BoolType::_Internal {
 public:
};

BoolType::BoolType(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.BoolType)
}
BoolType::BoolType(const BoolType& from) : ::google::protobuf::Message() {
  BoolType* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.kind_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), _this->GetArenaForAllocation());
  }
  _this->_impl_.kind_ = from._impl_.kind_;

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.BoolType)
}
inline void BoolType::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.unit_){},
      decltype(_impl_.kind_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
BoolType::~BoolType() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.BoolType)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BoolType::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unit_.Destroy();
}
void BoolType::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BoolType::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.BoolType)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unit_.ClearToEmpty();
  _impl_.kind_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BoolType::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> BoolType::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BoolType_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .abacus.protobuf.Kind kind = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BoolType, _impl_.kind_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BoolType, _impl_.kind_)}},
    // string unit = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BoolType, _impl_.unit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string unit = 1;
    {PROTOBUF_FIELD_OFFSET(BoolType, _impl_.unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 2;
    {PROTOBUF_FIELD_OFFSET(BoolType, _impl_.kind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\30\4\0\0\0\0\0\0"
    "abacus.protobuf.BoolType"
    "unit"
  }},
};

::uint8_t* BoolType::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.BoolType)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    const std::string& _s = this->_internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.BoolType.unit");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_kind(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.BoolType)
  return target;
}

::size_t BoolType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.BoolType)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unit = 1;
  if (!this->_internal_unit().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_unit());
  }

  // .abacus.protobuf.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_kind());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BoolType::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BoolType::MergeImpl
};
const ::google::protobuf::Message::ClassData*BoolType::GetClassData() const { return &_class_data_; }


void BoolType::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BoolType*>(&to_msg);
  auto& from = static_cast<const BoolType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.BoolType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (from._internal_kind() != 0) {
    _this->_internal_set_kind(from._internal_kind());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BoolType::CopyFrom(const BoolType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.BoolType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BoolType::IsInitialized() const {
  return true;
}

void BoolType::InternalSwap(BoolType* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, lhs_arena,
                                       &other->_impl_.unit_, rhs_arena);
  swap(_impl_.kind_, other->_impl_.kind_);
}

::google::protobuf::Metadata BoolType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[7]);
}
// ===================================================================

class EnumInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<EnumInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EnumInfo, _impl_._has_bits_);
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_severity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

EnumInfo::EnumInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.EnumInfo)
}
EnumInfo::EnumInfo(const EnumInfo& from) : ::google::protobuf::Message() {
  EnumInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.description_){},
      decltype(_impl_.severity_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.description_.Set(from._internal_description(), _this->GetArenaForAllocation());
  }
  _this->_impl_.severity_ = from._impl_.severity_;

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.EnumInfo)
}
inline void EnumInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.description_){},
      decltype(_impl_.severity_){0u},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
EnumInfo::~EnumInfo() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.EnumInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EnumInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
}
void EnumInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EnumInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.EnumInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.description_.ClearNonDefaultToEmpty();
  }
  _impl_.severity_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EnumInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 48, 2> EnumInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EnumInfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EnumInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EnumInfo, _impl_.name_)}},
    // optional string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EnumInfo, _impl_.description_)}},
    // optional uint32 severity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EnumInfo, _impl_.severity_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(EnumInfo, _impl_.severity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(EnumInfo, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string description = 2;
    {PROTOBUF_FIELD_OFFSET(EnumInfo, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional uint32 severity = 3;
    {PROTOBUF_FIELD_OFFSET(EnumInfo, _impl_.severity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\30\4\13\0\0\0\0\0"
    "abacus.protobuf.EnumInfo"
    "name"
    "description"
  }},
};

::uint8_t* EnumInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.EnumInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.EnumInfo.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string description = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.EnumInfo.description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional uint32 severity = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_severity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.EnumInfo)
  return target;
}

::size_t EnumInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.EnumInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string description = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_description());
    }

    // optional uint32 severity = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_severity());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EnumInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EnumInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*EnumInfo::GetClassData() const { return &_class_data_; }


void EnumInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EnumInfo*>(&to_msg);
  auto& from = static_cast<const EnumInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.EnumInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.severity_ = from._impl_.severity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EnumInfo::CopyFrom(const EnumInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.EnumInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EnumInfo::IsInitialized() const {
  return true;
}

void EnumInfo::InternalSwap(EnumInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, lhs_arena,
                                       &other->_impl_.description_, rhs_arena);
        swap(_impl_.severity_, other->_impl_.severity_);
}

::google::protobuf::Metadata EnumInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[8]);
}
// ===================================================================

EnumType_EnumMapEntry_DoNotUse::EnumType_EnumMapEntry_DoNotUse() {}
EnumType_EnumMapEntry_DoNotUse::EnumType_EnumMapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void EnumType_EnumMapEntry_DoNotUse::MergeFrom(const EnumType_EnumMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata EnumType_EnumMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[9]);
}
// ===================================================================

class EnumType::_Internal {
 public:
};

EnumType::EnumType(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.EnumType)
}
EnumType::EnumType(const EnumType& from) : ::google::protobuf::Message() {
  EnumType* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.enum_map_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.enum_map_.MergeFrom(from._impl_.enum_map_);

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.EnumType)
}
inline void EnumType::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.enum_map_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
EnumType::~EnumType() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.EnumType)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EnumType::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.enum_map_.~MapField();
}
void EnumType::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EnumType::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.EnumType)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enum_map_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EnumType::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 2, 0, 2> EnumType::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EnumType_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<uint32, .abacus.protobuf.EnumInfo> enum_map = 1;
    {PROTOBUF_FIELD_OFFSET(EnumType, _impl_.enum_map_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(EnumType()._impl_.enum_map_)>(1, 0, 0)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::abacus::protobuf::EnumInfo>},
  }}, {{
  }},
};

::uint8_t* EnumType::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.EnumType)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<uint32, .abacus.protobuf.EnumInfo> enum_map = 1;
  if (!_internal_enum_map().empty()) {
    using MapType = ::google::protobuf::Map<::uint32_t, ::abacus::protobuf::EnumInfo>;
    using WireHelper = EnumType_EnumMapEntry_DoNotUse::Funcs;
    const auto& field = _internal_enum_map();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.EnumType)
  return target;
}

::size_t EnumType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.EnumType)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .abacus.protobuf.EnumInfo> enum_map = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_enum_map_size());
  for (const auto& entry : _internal_enum_map()) {
    total_size += EnumType_EnumMapEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EnumType::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EnumType::MergeImpl
};
const ::google::protobuf::Message::ClassData*EnumType::GetClassData() const { return &_class_data_; }


void EnumType::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EnumType*>(&to_msg);
  auto& from = static_cast<const EnumType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.EnumType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.enum_map_.MergeFrom(from._impl_.enum_map_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EnumType::CopyFrom(const EnumType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.EnumType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EnumType::IsInitialized() const {
  return true;
}

void EnumType::InternalSwap(EnumType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.enum_map_.InternalSwap(&other->_impl_.enum_map_);
}

::google::protobuf::Metadata EnumType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[10]);
}
// ===================================================================

MetricsMetadata_MetricsEntry_DoNotUse::MetricsMetadata_MetricsEntry_DoNotUse() {}
MetricsMetadata_MetricsEntry_DoNotUse::MetricsMetadata_MetricsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void MetricsMetadata_MetricsEntry_DoNotUse::MergeFrom(const MetricsMetadata_MetricsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MetricsMetadata_MetricsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[11]);
}
// ===================================================================

class MetricsMetadata::_Internal {
 public:
};

MetricsMetadata::MetricsMetadata(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.MetricsMetadata)
}
MetricsMetadata::MetricsMetadata(const MetricsMetadata& from) : ::google::protobuf::Message() {
  MetricsMetadata* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.metrics_) */ {},
      decltype(_impl_.protocol_version_){},
      decltype(_impl_.endianness_){},
      decltype(_impl_.sync_value_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.metrics_.MergeFrom(from._impl_.metrics_);
  ::memcpy(&_impl_.protocol_version_, &from._impl_.protocol_version_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.sync_value_) -
    reinterpret_cast<char*>(&_impl_.protocol_version_)) + sizeof(_impl_.sync_value_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.MetricsMetadata)
}
inline void MetricsMetadata::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.metrics_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      decltype(_impl_.protocol_version_){0u},
      decltype(_impl_.endianness_){0},
      decltype(_impl_.sync_value_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MetricsMetadata::~MetricsMetadata() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.MetricsMetadata)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MetricsMetadata::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.metrics_.~MapField();
}
void MetricsMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MetricsMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.MetricsMetadata)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metrics_.Clear();
  ::memset(&_impl_.protocol_version_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sync_value_) -
      reinterpret_cast<char*>(&_impl_.protocol_version_)) + sizeof(_impl_.sync_value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MetricsMetadata::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 47, 2> MetricsMetadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MetricsMetadata_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 protocol_version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MetricsMetadata, _impl_.protocol_version_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.protocol_version_)}},
    // .abacus.protobuf.Endianness endianness = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MetricsMetadata, _impl_.endianness_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.endianness_)}},
    // uint32 sync_value = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MetricsMetadata, _impl_.sync_value_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.sync_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 protocol_version = 1;
    {PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.protocol_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .abacus.protobuf.Endianness endianness = 2;
    {PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.endianness_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 sync_value = 3;
    {PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.sync_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // map<string, .abacus.protobuf.Metric> metrics = 4;
    {PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.metrics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(MetricsMetadata()._impl_.metrics_)>(1, 0, 0)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::abacus::protobuf::Metric>},
  }}, {{
    "\37\0\0\0\7\0\0\0"
    "abacus.protobuf.MetricsMetadata"
    "metrics"
  }},
};

::uint8_t* MetricsMetadata::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.MetricsMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 protocol_version = 1;
  if (this->_internal_protocol_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_protocol_version(), target);
  }

  // .abacus.protobuf.Endianness endianness = 2;
  if (this->_internal_endianness() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_endianness(), target);
  }

  // uint32 sync_value = 3;
  if (this->_internal_sync_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_sync_value(), target);
  }

  // map<string, .abacus.protobuf.Metric> metrics = 4;
  if (!_internal_metrics().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::abacus::protobuf::Metric>;
    using WireHelper = MetricsMetadata_MetricsEntry_DoNotUse::Funcs;
    const auto& field = _internal_metrics();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.MetricsMetadata.metrics");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.MetricsMetadata.metrics");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.MetricsMetadata)
  return target;
}

::size_t MetricsMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.MetricsMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .abacus.protobuf.Metric> metrics = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_metrics_size());
  for (const auto& entry : _internal_metrics()) {
    total_size += MetricsMetadata_MetricsEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // uint32 protocol_version = 1;
  if (this->_internal_protocol_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_protocol_version());
  }

  // .abacus.protobuf.Endianness endianness = 2;
  if (this->_internal_endianness() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_endianness());
  }

  // uint32 sync_value = 3;
  if (this->_internal_sync_value() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_sync_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MetricsMetadata::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MetricsMetadata::MergeImpl
};
const ::google::protobuf::Message::ClassData*MetricsMetadata::GetClassData() const { return &_class_data_; }


void MetricsMetadata::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MetricsMetadata*>(&to_msg);
  auto& from = static_cast<const MetricsMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.MetricsMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metrics_.MergeFrom(from._impl_.metrics_);
  if (from._internal_protocol_version() != 0) {
    _this->_internal_set_protocol_version(from._internal_protocol_version());
  }
  if (from._internal_endianness() != 0) {
    _this->_internal_set_endianness(from._internal_endianness());
  }
  if (from._internal_sync_value() != 0) {
    _this->_internal_set_sync_value(from._internal_sync_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetricsMetadata::CopyFrom(const MetricsMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.MetricsMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MetricsMetadata::IsInitialized() const {
  return true;
}

void MetricsMetadata::InternalSwap(MetricsMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metrics_.InternalSwap(&other->_impl_.metrics_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.sync_value_)
      + sizeof(MetricsMetadata::_impl_.sync_value_)
      - PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.protocol_version_)>(
          reinterpret_cast<char*>(&_impl_.protocol_version_),
          reinterpret_cast<char*>(&other->_impl_.protocol_version_));
}

::google::protobuf::Metadata MetricsMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[12]);
}
// ===================================================================

class MetricValue::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricValue, _impl_._oneof_case_);
};

MetricValue::MetricValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.MetricValue)
}
MetricValue::MetricValue(const MetricValue& from) : ::google::protobuf::Message() {
  MetricValue* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.valid_){},
      decltype(_impl_.value_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.valid_ = from._impl_.valid_;
  clear_has_value();
  switch (from.value_case()) {
    case kUint64Value: {
      _this->_internal_set_uint64_value(from._internal_uint64_value());
      break;
    }
    case kInt64Value: {
      _this->_internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kUint32Value: {
      _this->_internal_set_uint32_value(from._internal_uint32_value());
      break;
    }
    case kInt32Value: {
      _this->_internal_set_int32_value(from._internal_int32_value());
      break;
    }
    case kFloat32Value: {
      _this->_internal_set_float32_value(from._internal_float32_value());
      break;
    }
    case kFloat64Value: {
      _this->_internal_set_float64_value(from._internal_float64_value());
      break;
    }
    case kBoolValue: {
      _this->_internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kEnumValue: {
      _this->_internal_set_enum_value(from._internal_enum_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.MetricValue)
}
inline void MetricValue::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.valid_){false},
      decltype(_impl_.value_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  clear_has_value();
}
MetricValue::~MetricValue() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.MetricValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MetricValue::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_value()) {
    clear_value();
  }
}
void MetricValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MetricValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:abacus.protobuf.MetricValue)
  switch (value_case()) {
    case kUint64Value: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kUint32Value: {
      // No need to clear
      break;
    }
    case kInt32Value: {
      // No need to clear
      break;
    }
    case kFloat32Value: {
      // No need to clear
      break;
    }
    case kFloat64Value: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kEnumValue: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


PROTOBUF_NOINLINE void MetricValue::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.MetricValue)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.valid_ = false;
  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MetricValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 9, 0, 0, 2> MetricValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MetricValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool valid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MetricValue, _impl_.valid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MetricValue, _impl_.valid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool valid = 1;
    {PROTOBUF_FIELD_OFFSET(MetricValue, _impl_.valid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 uint64_value = 2;
    {PROTOBUF_FIELD_OFFSET(MetricValue, _impl_.value_.uint64_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // int64 int64_value = 3;
    {PROTOBUF_FIELD_OFFSET(MetricValue, _impl_.value_.int64_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // uint32 uint32_value = 4;
    {PROTOBUF_FIELD_OFFSET(MetricValue, _impl_.value_.uint32_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // int32 int32_value = 5;
    {PROTOBUF_FIELD_OFFSET(MetricValue, _impl_.value_.int32_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // float float32_value = 6;
    {PROTOBUF_FIELD_OFFSET(MetricValue, _impl_.value_.float32_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // double float64_value = 7;
    {PROTOBUF_FIELD_OFFSET(MetricValue, _impl_.value_.float64_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // bool bool_value = 8;
    {PROTOBUF_FIELD_OFFSET(MetricValue, _impl_.value_.bool_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // uint32 enum_value = 9;
    {PROTOBUF_FIELD_OFFSET(MetricValue, _impl_.value_.enum_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MetricValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.MetricValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool valid = 1;
  if (this->_internal_valid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_valid(), target);
  }

  switch (value_case()) {
    case kUint64Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this->_internal_uint64_value(), target);
      break;
    }
    case kInt64Value: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt64ToArrayWithField<3>(
              stream, this->_internal_int64_value(), target);
      break;
    }
    case kUint32Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this->_internal_uint32_value(), target);
      break;
    }
    case kInt32Value: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt32ToArrayWithField<5>(
              stream, this->_internal_int32_value(), target);
      break;
    }
    case kFloat32Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          6, this->_internal_float32_value(), target);
      break;
    }
    case kFloat64Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          7, this->_internal_float64_value(), target);
      break;
    }
    case kBoolValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this->_internal_bool_value(), target);
      break;
    }
    case kEnumValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          9, this->_internal_enum_value(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.MetricValue)
  return target;
}

::size_t MetricValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.MetricValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->_internal_valid() != 0) {
    total_size += 2;
  }

  switch (value_case()) {
    // uint64 uint64_value = 2;
    case kUint64Value: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_uint64_value());
      break;
    }
    // int64 int64_value = 3;
    case kInt64Value: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_int64_value());
      break;
    }
    // uint32 uint32_value = 4;
    case kUint32Value: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_uint32_value());
      break;
    }
    // int32 int32_value = 5;
    case kInt32Value: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_int32_value());
      break;
    }
    // float float32_value = 6;
    case kFloat32Value: {
      total_size += 5;
      break;
    }
    // double float64_value = 7;
    case kFloat64Value: {
      total_size += 9;
      break;
    }
    // bool bool_value = 8;
    case kBoolValue: {
      total_size += 2;
      break;
    }
    // uint32 enum_value = 9;
    case kEnumValue: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_enum_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MetricValue::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MetricValue::MergeImpl
};
const ::google::protobuf::Message::ClassData*MetricValue::GetClassData() const { return &_class_data_; }


void MetricValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MetricValue*>(&to_msg);
  auto& from = static_cast<const MetricValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.MetricValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_valid() != 0) {
    _this->_internal_set_valid(from._internal_valid());
  }
  switch (from.value_case()) {
    case kUint64Value: {
      _this->_internal_set_uint64_value(from._internal_uint64_value());
      break;
    }
    case kInt64Value: {
      _this->_internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kUint32Value: {
      _this->_internal_set_uint32_value(from._internal_uint32_value());
      break;
    }
    case kInt32Value: {
      _this->_internal_set_int32_value(from._internal_int32_value());
      break;
    }
    case kFloat32Value: {
      _this->_internal_set_float32_value(from._internal_float32_value());
      break;
    }
    case kFloat64Value: {
      _this->_internal_set_float64_value(from._internal_float64_value());
      break;
    }
    case kBoolValue: {
      _this->_internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kEnumValue: {
      _this->_internal_set_enum_value(from._internal_enum_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetricValue::CopyFrom(const MetricValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.MetricValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MetricValue::IsInitialized() const {
  return true;
}

void MetricValue::InternalSwap(MetricValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.valid_, other->_impl_.valid_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MetricValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[13]);
}
// ===================================================================

class MetricValues::_Internal {
 public:
};

MetricValues::MetricValues(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.MetricValues)
}
MetricValues::MetricValues(const MetricValues& from) : ::google::protobuf::Message() {
  MetricValues* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.values_){from._impl_.values_},
      decltype(_impl_.sync_value_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.sync_value_ = from._impl_.sync_value_;

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.MetricValues)
}
inline void MetricValues::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.values_){arena},
      decltype(_impl_.sync_value_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MetricValues::~MetricValues() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.MetricValues)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MetricValues::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_.~RepeatedPtrField();
}
void MetricValues::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MetricValues::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.MetricValues)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_values()->Clear();
  _impl_.sync_value_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MetricValues::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> MetricValues::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MetricValues_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .abacus.protobuf.MetricValue values = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MetricValues, _impl_.values_)}},
    // uint32 sync_value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MetricValues, _impl_.sync_value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MetricValues, _impl_.sync_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 sync_value = 1;
    {PROTOBUF_FIELD_OFFSET(MetricValues, _impl_.sync_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .abacus.protobuf.MetricValue values = 2;
    {PROTOBUF_FIELD_OFFSET(MetricValues, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::abacus::protobuf::MetricValue>()},
  }}, {{
  }},
};

::uint8_t* MetricValues::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.MetricValues)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 sync_value = 1;
  if (this->_internal_sync_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_sync_value(), target);
  }

  // repeated .abacus.protobuf.MetricValue values = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_values_size()); i < n; i++) {
    const auto& repfield = this->_internal_values().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.MetricValues)
  return target;
}

::size_t MetricValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.MetricValues)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .abacus.protobuf.MetricValue values = 2;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->_internal_values()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // uint32 sync_value = 1;
  if (this->_internal_sync_value() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_sync_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MetricValues::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MetricValues::MergeImpl
};
const ::google::protobuf::Message::ClassData*MetricValues::GetClassData() const { return &_class_data_; }


void MetricValues::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MetricValues*>(&to_msg);
  auto& from = static_cast<const MetricValues&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.MetricValues)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  if (from._internal_sync_value() != 0) {
    _this->_internal_set_sync_value(from._internal_sync_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetricValues::CopyFrom(const MetricValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.MetricValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MetricValues::IsInitialized() const {
  return true;
}

void MetricValues::InternalSwap(MetricValues* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
        swap(_impl_.sync_value_, other->_impl_.sync_value_);
}

::google::protobuf::Metadata MetricValues::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_getter, &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
      file_level_metadata_abacus_2fprotobuf_2fmetrics_2eproto[14]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace abacus
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
