// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: abacus/protobuf/metrics.proto
// Protobuf C++ Version: 6.31.0

#include "abacus/protobuf/metrics.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace abacus {
namespace protobuf {

inline constexpr UInt64Metric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        kind_{static_cast< ::abacus::protobuf::Kind >(0)},
        min_{::uint64_t{0u}},
        max_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR UInt64Metric::UInt64Metric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UInt64Metric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UInt64MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UInt64MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UInt64MetricDefaultTypeInternal() {}
  union {
    UInt64Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UInt64MetricDefaultTypeInternal _UInt64Metric_default_instance_;

inline constexpr UInt32Metric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        kind_{static_cast< ::abacus::protobuf::Kind >(0)},
        min_{0u},
        max_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR UInt32Metric::UInt32Metric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UInt32Metric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UInt32MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UInt32MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UInt32MetricDefaultTypeInternal() {}
  union {
    UInt32Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UInt32MetricDefaultTypeInternal _UInt32Metric_default_instance_;

inline constexpr Int64Metric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        kind_{static_cast< ::abacus::protobuf::Kind >(0)},
        min_{::int64_t{0}},
        max_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Int64Metric::Int64Metric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int64Metric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int64MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64MetricDefaultTypeInternal() {}
  union {
    Int64Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64MetricDefaultTypeInternal _Int64Metric_default_instance_;

inline constexpr Int32Metric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        kind_{static_cast< ::abacus::protobuf::Kind >(0)},
        min_{0},
        max_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Int32Metric::Int32Metric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int32Metric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int32MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int32MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int32MetricDefaultTypeInternal() {}
  union {
    Int32Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int32MetricDefaultTypeInternal _Int32Metric_default_instance_;

inline constexpr Float64Metric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        kind_{static_cast< ::abacus::protobuf::Kind >(0)},
        min_{0},
        max_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Float64Metric::Float64Metric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Float64Metric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Float64MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Float64MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Float64MetricDefaultTypeInternal() {}
  union {
    Float64Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Float64MetricDefaultTypeInternal _Float64Metric_default_instance_;

inline constexpr Float32Metric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        kind_{static_cast< ::abacus::protobuf::Kind >(0)},
        min_{0},
        max_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Float32Metric::Float32Metric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Float32Metric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Float32MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Float32MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Float32MetricDefaultTypeInternal() {}
  union {
    Float32Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Float32MetricDefaultTypeInternal _Float32Metric_default_instance_;

inline constexpr Enum8Metric_EnumValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Enum8Metric_EnumValue::Enum8Metric_EnumValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Enum8Metric_EnumValue_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Enum8Metric_EnumValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Enum8Metric_EnumValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Enum8Metric_EnumValueDefaultTypeInternal() {}
  union {
    Enum8Metric_EnumValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Enum8Metric_EnumValueDefaultTypeInternal _Enum8Metric_EnumValue_default_instance_;

inline constexpr Constant::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Constant::Constant(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Constant_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConstantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConstantDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConstantDefaultTypeInternal() {}
  union {
    Constant _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConstantDefaultTypeInternal _Constant_default_instance_;

inline constexpr BoolMetric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR BoolMetric::BoolMetric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BoolMetric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BoolMetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoolMetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoolMetricDefaultTypeInternal() {}
  union {
    BoolMetric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoolMetricDefaultTypeInternal _BoolMetric_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Enum8Metric_ValuesEntry_DoNotUse::Enum8Metric_ValuesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Enum8Metric_ValuesEntry_DoNotUse::MapEntry(Enum8Metric_ValuesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Enum8Metric_ValuesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Enum8Metric_ValuesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Enum8Metric_ValuesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Enum8Metric_ValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Enum8Metric_ValuesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Enum8Metric_ValuesEntry_DoNotUseDefaultTypeInternal _Enum8Metric_ValuesEntry_DoNotUse_default_instance_;

inline constexpr Enum8Metric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        values_{},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Enum8Metric::Enum8Metric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Enum8Metric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Enum8MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Enum8MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Enum8MetricDefaultTypeInternal() {}
  union {
    Enum8Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Enum8MetricDefaultTypeInternal _Enum8Metric_default_instance_;

inline constexpr Metric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Metric::Metric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Metric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricDefaultTypeInternal() {}
  union {
    Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricDefaultTypeInternal _Metric_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MetricsMetadata_MetricsEntry_DoNotUse::MetricsMetadata_MetricsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : MetricsMetadata_MetricsEntry_DoNotUse::MapEntry(MetricsMetadata_MetricsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : MetricsMetadata_MetricsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct MetricsMetadata_MetricsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricsMetadata_MetricsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricsMetadata_MetricsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MetricsMetadata_MetricsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricsMetadata_MetricsEntry_DoNotUseDefaultTypeInternal _MetricsMetadata_MetricsEntry_DoNotUse_default_instance_;

inline constexpr MetricsMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        metrics_{},
        protocol_version_{0u},
        endianness_{static_cast< ::abacus::protobuf::Endianness >(0)},
        sync_value_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR MetricsMetadata::MetricsMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MetricsMetadata_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetricsMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricsMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricsMetadataDefaultTypeInternal() {}
  union {
    MetricsMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricsMetadataDefaultTypeInternal _MetricsMetadata_default_instance_;
}  // namespace protobuf
}  // namespace abacus
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_abacus_2fprotobuf_2fmetrics_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_abacus_2fprotobuf_2fmetrics_2eproto = nullptr;
const ::uint32_t
    TableStruct_abacus_2fprotobuf_2fmetrics_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Metric, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Metric, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Metric, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Metric, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Metric, _impl_.unit_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Metric, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt64Metric, _impl_.max_),
        2,
        0,
        3,
        1,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Metric, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Metric, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Metric, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Metric, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Metric, _impl_.unit_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Metric, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int64Metric, _impl_.max_),
        2,
        0,
        3,
        1,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Metric, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Metric, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Metric, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Metric, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Metric, _impl_.unit_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Metric, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::UInt32Metric, _impl_.max_),
        2,
        0,
        3,
        1,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Metric, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Metric, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Metric, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Metric, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Metric, _impl_.unit_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Metric, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Int32Metric, _impl_.max_),
        2,
        0,
        3,
        1,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Metric, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Metric, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Metric, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Metric, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Metric, _impl_.unit_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Metric, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float64Metric, _impl_.max_),
        2,
        0,
        3,
        1,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Metric, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Metric, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Metric, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Metric, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Metric, _impl_.unit_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Metric, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Float32Metric, _impl_.max_),
        2,
        0,
        3,
        1,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::BoolMetric, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::BoolMetric, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::BoolMetric, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::BoolMetric, _impl_.unit_),
        2,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric_EnumValue, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric_EnumValue, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric_EnumValue, _impl_.description_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric_ValuesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric_ValuesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric_ValuesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Enum8Metric, _impl_.unit_),
        2,
        0,
        ~0u,
        1,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Constant, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Constant, _impl_._oneof_case_[0]),
        12, // hasbit index offset
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Constant, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Constant, _impl_.unit_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Constant, _impl_.value_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Metric, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Metric, _impl_.type_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata_MetricsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata_MetricsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata_MetricsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata, _impl_.protocol_version_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata, _impl_.endianness_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata, _impl_.sync_value_),
        PROTOBUF_FIELD_OFFSET(::abacus::protobuf::MetricsMetadata, _impl_.metrics_),
        0,
        1,
        2,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::abacus::protobuf::UInt64Metric)},
        {15, sizeof(::abacus::protobuf::Int64Metric)},
        {30, sizeof(::abacus::protobuf::UInt32Metric)},
        {45, sizeof(::abacus::protobuf::Int32Metric)},
        {60, sizeof(::abacus::protobuf::Float64Metric)},
        {75, sizeof(::abacus::protobuf::Float32Metric)},
        {90, sizeof(::abacus::protobuf::BoolMetric)},
        {99, sizeof(::abacus::protobuf::Enum8Metric_EnumValue)},
        {106, sizeof(::abacus::protobuf::Enum8Metric_ValuesEntry_DoNotUse)},
        {113, sizeof(::abacus::protobuf::Enum8Metric)},
        {124, sizeof(::abacus::protobuf::Constant)},
        {143, sizeof(::abacus::protobuf::Metric)},
        {155, sizeof(::abacus::protobuf::MetricsMetadata_MetricsEntry_DoNotUse)},
        {162, sizeof(::abacus::protobuf::MetricsMetadata)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::abacus::protobuf::_UInt64Metric_default_instance_._instance,
    &::abacus::protobuf::_Int64Metric_default_instance_._instance,
    &::abacus::protobuf::_UInt32Metric_default_instance_._instance,
    &::abacus::protobuf::_Int32Metric_default_instance_._instance,
    &::abacus::protobuf::_Float64Metric_default_instance_._instance,
    &::abacus::protobuf::_Float32Metric_default_instance_._instance,
    &::abacus::protobuf::_BoolMetric_default_instance_._instance,
    &::abacus::protobuf::_Enum8Metric_EnumValue_default_instance_._instance,
    &::abacus::protobuf::_Enum8Metric_ValuesEntry_DoNotUse_default_instance_._instance,
    &::abacus::protobuf::_Enum8Metric_default_instance_._instance,
    &::abacus::protobuf::_Constant_default_instance_._instance,
    &::abacus::protobuf::_Metric_default_instance_._instance,
    &::abacus::protobuf::_MetricsMetadata_MetricsEntry_DoNotUse_default_instance_._instance,
    &::abacus::protobuf::_MetricsMetadata_default_instance_._instance,
};
const char descriptor_table_protodef_abacus_2fprotobuf_2fmetrics_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035abacus/protobuf/metrics.proto\022\017abacus."
    "protobuf\"\250\001\n\014UInt64Metric\022\016\n\006offset\030\001 \001("
    "\r\022\023\n\013description\030\002 \001(\t\022#\n\004kind\030\003 \001(\0162\025.a"
    "bacus.protobuf.Kind\022\021\n\004unit\030\004 \001(\tH\000\210\001\001\022\020"
    "\n\003min\030\005 \001(\004H\001\210\001\001\022\020\n\003max\030\006 \001(\004H\002\210\001\001B\007\n\005_u"
    "nitB\006\n\004_minB\006\n\004_max\"\247\001\n\013Int64Metric\022\016\n\006o"
    "ffset\030\001 \001(\r\022\023\n\013description\030\002 \001(\t\022#\n\004kind"
    "\030\003 \001(\0162\025.abacus.protobuf.Kind\022\021\n\004unit\030\004 "
    "\001(\tH\000\210\001\001\022\020\n\003min\030\005 \001(\003H\001\210\001\001\022\020\n\003max\030\006 \001(\003H"
    "\002\210\001\001B\007\n\005_unitB\006\n\004_minB\006\n\004_max\"\250\001\n\014UInt32"
    "Metric\022\016\n\006offset\030\001 \001(\r\022\023\n\013description\030\002 "
    "\001(\t\022#\n\004kind\030\003 \001(\0162\025.abacus.protobuf.Kind"
    "\022\021\n\004unit\030\004 \001(\tH\000\210\001\001\022\020\n\003min\030\005 \001(\rH\001\210\001\001\022\020\n"
    "\003max\030\006 \001(\rH\002\210\001\001B\007\n\005_unitB\006\n\004_minB\006\n\004_max"
    "\"\247\001\n\013Int32Metric\022\016\n\006offset\030\001 \001(\r\022\023\n\013desc"
    "ription\030\002 \001(\t\022#\n\004kind\030\003 \001(\0162\025.abacus.pro"
    "tobuf.Kind\022\021\n\004unit\030\004 \001(\tH\000\210\001\001\022\020\n\003min\030\005 \001"
    "(\005H\001\210\001\001\022\020\n\003max\030\006 \001(\005H\002\210\001\001B\007\n\005_unitB\006\n\004_m"
    "inB\006\n\004_max\"\251\001\n\rFloat64Metric\022\016\n\006offset\030\001"
    " \001(\r\022\023\n\013description\030\002 \001(\t\022#\n\004kind\030\003 \001(\0162"
    "\025.abacus.protobuf.Kind\022\021\n\004unit\030\004 \001(\tH\000\210\001"
    "\001\022\020\n\003min\030\005 \001(\001H\001\210\001\001\022\020\n\003max\030\006 \001(\001H\002\210\001\001B\007\n"
    "\005_unitB\006\n\004_minB\006\n\004_max\"\251\001\n\rFloat32Metric"
    "\022\016\n\006offset\030\001 \001(\r\022\023\n\013description\030\002 \001(\t\022#\n"
    "\004kind\030\003 \001(\0162\025.abacus.protobuf.Kind\022\021\n\004un"
    "it\030\004 \001(\tH\000\210\001\001\022\020\n\003min\030\005 \001(\002H\001\210\001\001\022\020\n\003max\030\006"
    " \001(\002H\002\210\001\001B\007\n\005_unitB\006\n\004_minB\006\n\004_max\"M\n\nBo"
    "olMetric\022\016\n\006offset\030\001 \001(\r\022\023\n\013description\030"
    "\002 \001(\t\022\021\n\004unit\030\003 \001(\tH\000\210\001\001B\007\n\005_unit\"\244\002\n\013En"
    "um8Metric\022\016\n\006offset\030\001 \001(\r\022\023\n\013description"
    "\030\002 \001(\t\0228\n\006values\030\003 \003(\0132(.abacus.protobuf"
    ".Enum8Metric.ValuesEntry\022\021\n\004unit\030\004 \001(\tH\000"
    "\210\001\001\032C\n\tEnumValue\022\014\n\004name\030\001 \001(\t\022\030\n\013descri"
    "ption\030\002 \001(\tH\000\210\001\001B\016\n\014_description\032U\n\013Valu"
    "esEntry\022\013\n\003key\030\001 \001(\r\0225\n\005value\030\002 \001(\0132&.ab"
    "acus.protobuf.Enum8Metric.EnumValue:\0028\001B"
    "\007\n\005_unit\"\237\001\n\010Constant\022\020\n\006uint64\030\001 \001(\004H\000\022"
    "\017\n\005int64\030\002 \001(\003H\000\022\021\n\007float64\030\003 \001(\001H\000\022\021\n\007b"
    "oolean\030\004 \001(\010H\000\022\020\n\006string\030\005 \001(\tH\000\022\023\n\013desc"
    "ription\030\006 \001(\t\022\021\n\004unit\030\007 \001(\tH\001\210\001\001B\007\n\005valu"
    "eB\007\n\005_unit\"\304\003\n\006Metric\022-\n\010constant\030\001 \001(\0132"
    "\031.abacus.protobuf.ConstantH\000\022/\n\006uint64\030\002"
    " \001(\0132\035.abacus.protobuf.UInt64MetricH\000\022-\n"
    "\005int64\030\003 \001(\0132\034.abacus.protobuf.Int64Metr"
    "icH\000\022/\n\006uint32\030\004 \001(\0132\035.abacus.protobuf.U"
    "Int32MetricH\000\022-\n\005int32\030\005 \001(\0132\034.abacus.pr"
    "otobuf.Int32MetricH\000\0221\n\007float64\030\006 \001(\0132\036."
    "abacus.protobuf.Float64MetricH\000\0221\n\007float"
    "32\030\007 \001(\0132\036.abacus.protobuf.Float32Metric"
    "H\000\022.\n\007boolean\030\010 \001(\0132\033.abacus.protobuf.Bo"
    "olMetricH\000\022-\n\005enum8\030\t \001(\0132\034.abacus.proto"
    "buf.Enum8MetricH\000B\006\n\004type\"\371\001\n\017MetricsMet"
    "adata\022\030\n\020protocol_version\030\001 \001(\r\022/\n\nendia"
    "nness\030\002 \001(\0162\033.abacus.protobuf.Endianness"
    "\022\022\n\nsync_value\030\003 \001(\007\022>\n\007metrics\030\004 \003(\0132-."
    "abacus.protobuf.MetricsMetadata.MetricsE"
    "ntry\032G\n\014MetricsEntry\022\013\n\003key\030\001 \001(\t\022&\n\005val"
    "ue\030\002 \001(\0132\027.abacus.protobuf.Metric:\0028\001*!\n"
    "\nEndianness\022\n\n\006LITTLE\020\000\022\007\n\003BIG\020\001*\036\n\004Kind"
    "\022\t\n\005GAUGE\020\000\022\013\n\007COUNTER\020\001B\021Z\017abacus/proto"
    "bufb\006proto3"
};
static ::absl::once_flag descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto = {
    false,
    false,
    2411,
    descriptor_table_protodef_abacus_2fprotobuf_2fmetrics_2eproto,
    "abacus/protobuf/metrics.proto",
    &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto_once,
    nullptr,
    0,
    14,
    schemas,
    file_default_instances,
    TableStruct_abacus_2fprotobuf_2fmetrics_2eproto::offsets,
    file_level_enum_descriptors_abacus_2fprotobuf_2fmetrics_2eproto,
    file_level_service_descriptors_abacus_2fprotobuf_2fmetrics_2eproto,
};
namespace abacus {
namespace protobuf {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Endianness_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto);
  return file_level_enum_descriptors_abacus_2fprotobuf_2fmetrics_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Endianness_internal_data_[] = {
    131072u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Kind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto);
  return file_level_enum_descriptors_abacus_2fprotobuf_2fmetrics_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Kind_internal_data_[] = {
    131072u, 0u, };
// ===================================================================

class UInt64Metric::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UInt64Metric>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_._has_bits_);
};

UInt64Metric::UInt64Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UInt64Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.UInt64Metric)
}
PROTOBUF_NDEBUG_INLINE UInt64Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::UInt64Metric& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_),
        unit_(arena, from.unit_) {}

UInt64Metric::UInt64Metric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UInt64Metric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UInt64Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UInt64Metric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.UInt64Metric)
}
PROTOBUF_NDEBUG_INLINE UInt64Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        description_(arena),
        unit_(arena) {}

inline void UInt64Metric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));
}
UInt64Metric::~UInt64Metric() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.UInt64Metric)
  SharedDtor(*this);
}
inline void UInt64Metric::SharedDtor(MessageLite& self) {
  UInt64Metric& this_ = static_cast<UInt64Metric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.unit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UInt64Metric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UInt64Metric(arena);
}
constexpr auto UInt64Metric::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UInt64Metric),
                                            alignof(UInt64Metric));
}
constexpr auto UInt64Metric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UInt64Metric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UInt64Metric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UInt64Metric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UInt64Metric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UInt64Metric>(), &UInt64Metric::ByteSizeLong,
              &UInt64Metric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_._cached_size_),
          false,
      },
      &UInt64Metric::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UInt64Metric_class_data_ =
        UInt64Metric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UInt64Metric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UInt64Metric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UInt64Metric_class_data_.tc_table);
  return UInt64Metric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 52, 2>
UInt64Metric::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UInt64Metric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::UInt64Metric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt64Metric, _impl_.offset_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.offset_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.description_)}},
    // .abacus.protobuf.Kind kind = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt64Metric, _impl_.kind_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.kind_)}},
    // optional string unit = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.unit_)}},
    // optional uint64 min = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UInt64Metric, _impl_.min_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.min_)}},
    // optional uint64 max = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UInt64Metric, _impl_.max_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.max_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 3;
    {PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.kind_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string unit = 4;
    {PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.unit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional uint64 min = 5;
    {PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.min_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 max = 6;
    {PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.max_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\34\0\13\0\4\0\0\0"
    "abacus.protobuf.UInt64Metric"
    "description"
    "unit"
  }},
};
PROTOBUF_NOINLINE void UInt64Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.UInt64Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.unit_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UInt64Metric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UInt64Metric& this_ = static_cast<const UInt64Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UInt64Metric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UInt64Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.UInt64Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 offset = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_offset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_offset(), target);
    }
  }

  // string description = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.UInt64Metric.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .abacus.protobuf.Kind kind = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_kind() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_kind(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string unit = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.UInt64Metric.unit");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional uint64 min = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this_._internal_min(), target);
  }

  // optional uint64 max = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this_._internal_max(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.UInt64Metric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UInt64Metric::ByteSizeLong(const MessageLite& base) {
  const UInt64Metric& this_ = static_cast<const UInt64Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UInt64Metric::ByteSizeLong() const {
  const UInt64Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.UInt64Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string description = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // optional string unit = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_unit());
    }
    // uint32 offset = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_offset() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_offset());
      }
    }
    // .abacus.protobuf.Kind kind = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_kind() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_kind());
      }
    }
    // optional uint64 min = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_min());
    }
    // optional uint64 max = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_max());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UInt64Metric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UInt64Metric*>(&to_msg);
  auto& from = static_cast<const UInt64Metric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.UInt64Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_unit(from._internal_unit());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_offset() != 0) {
        _this->_impl_.offset_ = from._impl_.offset_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_kind() != 0) {
        _this->_impl_.kind_ = from._impl_.kind_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.min_ = from._impl_.min_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.max_ = from._impl_.max_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UInt64Metric::CopyFrom(const UInt64Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.UInt64Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UInt64Metric::InternalSwap(UInt64Metric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.max_)
      + sizeof(UInt64Metric::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(UInt64Metric, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata UInt64Metric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int64Metric::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Int64Metric>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_._has_bits_);
};

Int64Metric::Int64Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Int64Metric)
}
PROTOBUF_NDEBUG_INLINE Int64Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::Int64Metric& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_),
        unit_(arena, from.unit_) {}

Int64Metric::Int64Metric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Int64Metric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Int64Metric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Int64Metric)
}
PROTOBUF_NDEBUG_INLINE Int64Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        description_(arena),
        unit_(arena) {}

inline void Int64Metric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));
}
Int64Metric::~Int64Metric() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Int64Metric)
  SharedDtor(*this);
}
inline void Int64Metric::SharedDtor(MessageLite& self) {
  Int64Metric& this_ = static_cast<Int64Metric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.unit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Int64Metric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int64Metric(arena);
}
constexpr auto Int64Metric::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Int64Metric),
                                            alignof(Int64Metric));
}
constexpr auto Int64Metric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int64Metric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int64Metric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int64Metric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int64Metric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int64Metric>(), &Int64Metric::ByteSizeLong,
              &Int64Metric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_._cached_size_),
          false,
      },
      &Int64Metric::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int64Metric_class_data_ =
        Int64Metric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int64Metric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int64Metric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int64Metric_class_data_.tc_table);
  return Int64Metric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 51, 2>
Int64Metric::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Int64Metric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::Int64Metric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int64Metric, _impl_.offset_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.offset_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.description_)}},
    // .abacus.protobuf.Kind kind = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int64Metric, _impl_.kind_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.kind_)}},
    // optional string unit = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.unit_)}},
    // optional int64 min = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64Metric, _impl_.min_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.min_)}},
    // optional int64 max = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64Metric, _impl_.max_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.max_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 3;
    {PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.kind_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string unit = 4;
    {PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.unit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int64 min = 5;
    {PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.min_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 max = 6;
    {PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.max_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\33\0\13\0\4\0\0\0"
    "abacus.protobuf.Int64Metric"
    "description"
    "unit"
  }},
};
PROTOBUF_NOINLINE void Int64Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Int64Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.unit_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int64Metric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int64Metric& this_ = static_cast<const Int64Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int64Metric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int64Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Int64Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 offset = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_offset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_offset(), target);
    }
  }

  // string description = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Int64Metric.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .abacus.protobuf.Kind kind = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_kind() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_kind(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string unit = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Int64Metric.unit");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional int64 min = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
            stream, this_._internal_min(), target);
  }

  // optional int64 max = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<6>(
            stream, this_._internal_max(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Int64Metric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int64Metric::ByteSizeLong(const MessageLite& base) {
  const Int64Metric& this_ = static_cast<const Int64Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int64Metric::ByteSizeLong() const {
  const Int64Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Int64Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string description = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // optional string unit = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_unit());
    }
    // uint32 offset = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_offset() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_offset());
      }
    }
    // .abacus.protobuf.Kind kind = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_kind() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_kind());
      }
    }
    // optional int64 min = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_min());
    }
    // optional int64 max = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_max());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int64Metric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int64Metric*>(&to_msg);
  auto& from = static_cast<const Int64Metric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Int64Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_unit(from._internal_unit());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_offset() != 0) {
        _this->_impl_.offset_ = from._impl_.offset_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_kind() != 0) {
        _this->_impl_.kind_ = from._impl_.kind_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.min_ = from._impl_.min_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.max_ = from._impl_.max_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64Metric::CopyFrom(const Int64Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Int64Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int64Metric::InternalSwap(Int64Metric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.max_)
      + sizeof(Int64Metric::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Int64Metric, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata Int64Metric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UInt32Metric::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UInt32Metric>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_._has_bits_);
};

UInt32Metric::UInt32Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UInt32Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.UInt32Metric)
}
PROTOBUF_NDEBUG_INLINE UInt32Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::UInt32Metric& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_),
        unit_(arena, from.unit_) {}

UInt32Metric::UInt32Metric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UInt32Metric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UInt32Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UInt32Metric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.UInt32Metric)
}
PROTOBUF_NDEBUG_INLINE UInt32Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        description_(arena),
        unit_(arena) {}

inline void UInt32Metric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));
}
UInt32Metric::~UInt32Metric() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.UInt32Metric)
  SharedDtor(*this);
}
inline void UInt32Metric::SharedDtor(MessageLite& self) {
  UInt32Metric& this_ = static_cast<UInt32Metric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.unit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UInt32Metric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UInt32Metric(arena);
}
constexpr auto UInt32Metric::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UInt32Metric),
                                            alignof(UInt32Metric));
}
constexpr auto UInt32Metric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UInt32Metric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UInt32Metric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UInt32Metric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UInt32Metric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UInt32Metric>(), &UInt32Metric::ByteSizeLong,
              &UInt32Metric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_._cached_size_),
          false,
      },
      &UInt32Metric::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UInt32Metric_class_data_ =
        UInt32Metric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UInt32Metric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UInt32Metric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UInt32Metric_class_data_.tc_table);
  return UInt32Metric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 52, 2>
UInt32Metric::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UInt32Metric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::UInt32Metric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt32Metric, _impl_.offset_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.offset_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.description_)}},
    // .abacus.protobuf.Kind kind = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt32Metric, _impl_.kind_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.kind_)}},
    // optional string unit = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.unit_)}},
    // optional uint32 min = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt32Metric, _impl_.min_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.min_)}},
    // optional uint32 max = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UInt32Metric, _impl_.max_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.max_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 3;
    {PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.kind_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string unit = 4;
    {PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.unit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional uint32 min = 5;
    {PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.min_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 max = 6;
    {PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.max_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\34\0\13\0\4\0\0\0"
    "abacus.protobuf.UInt32Metric"
    "description"
    "unit"
  }},
};
PROTOBUF_NOINLINE void UInt32Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.UInt32Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.unit_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UInt32Metric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UInt32Metric& this_ = static_cast<const UInt32Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UInt32Metric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UInt32Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.UInt32Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 offset = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_offset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_offset(), target);
    }
  }

  // string description = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.UInt32Metric.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .abacus.protobuf.Kind kind = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_kind() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_kind(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string unit = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.UInt32Metric.unit");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional uint32 min = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_min(), target);
  }

  // optional uint32 max = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_max(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.UInt32Metric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UInt32Metric::ByteSizeLong(const MessageLite& base) {
  const UInt32Metric& this_ = static_cast<const UInt32Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UInt32Metric::ByteSizeLong() const {
  const UInt32Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.UInt32Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string description = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // optional string unit = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_unit());
    }
    // uint32 offset = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_offset() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_offset());
      }
    }
    // .abacus.protobuf.Kind kind = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_kind() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_kind());
      }
    }
    // optional uint32 min = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_min());
    }
    // optional uint32 max = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_max());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UInt32Metric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UInt32Metric*>(&to_msg);
  auto& from = static_cast<const UInt32Metric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.UInt32Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_unit(from._internal_unit());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_offset() != 0) {
        _this->_impl_.offset_ = from._impl_.offset_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_kind() != 0) {
        _this->_impl_.kind_ = from._impl_.kind_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.min_ = from._impl_.min_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.max_ = from._impl_.max_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UInt32Metric::CopyFrom(const UInt32Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.UInt32Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UInt32Metric::InternalSwap(UInt32Metric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.max_)
      + sizeof(UInt32Metric::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(UInt32Metric, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata UInt32Metric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int32Metric::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Int32Metric>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_._has_bits_);
};

Int32Metric::Int32Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int32Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Int32Metric)
}
PROTOBUF_NDEBUG_INLINE Int32Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::Int32Metric& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_),
        unit_(arena, from.unit_) {}

Int32Metric::Int32Metric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Int32Metric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int32Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Int32Metric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Int32Metric)
}
PROTOBUF_NDEBUG_INLINE Int32Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        description_(arena),
        unit_(arena) {}

inline void Int32Metric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));
}
Int32Metric::~Int32Metric() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Int32Metric)
  SharedDtor(*this);
}
inline void Int32Metric::SharedDtor(MessageLite& self) {
  Int32Metric& this_ = static_cast<Int32Metric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.unit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Int32Metric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int32Metric(arena);
}
constexpr auto Int32Metric::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Int32Metric),
                                            alignof(Int32Metric));
}
constexpr auto Int32Metric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int32Metric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int32Metric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int32Metric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int32Metric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int32Metric>(), &Int32Metric::ByteSizeLong,
              &Int32Metric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_._cached_size_),
          false,
      },
      &Int32Metric::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int32Metric_class_data_ =
        Int32Metric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int32Metric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int32Metric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int32Metric_class_data_.tc_table);
  return Int32Metric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 51, 2>
Int32Metric::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Int32Metric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::Int32Metric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int32Metric, _impl_.offset_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.offset_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.description_)}},
    // .abacus.protobuf.Kind kind = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int32Metric, _impl_.kind_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.kind_)}},
    // optional string unit = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.unit_)}},
    // optional int32 min = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int32Metric, _impl_.min_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.min_)}},
    // optional int32 max = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int32Metric, _impl_.max_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.max_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 3;
    {PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.kind_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string unit = 4;
    {PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.unit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 min = 5;
    {PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.min_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 max = 6;
    {PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.max_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\33\0\13\0\4\0\0\0"
    "abacus.protobuf.Int32Metric"
    "description"
    "unit"
  }},
};
PROTOBUF_NOINLINE void Int32Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Int32Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.unit_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int32Metric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int32Metric& this_ = static_cast<const Int32Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int32Metric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int32Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Int32Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 offset = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_offset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_offset(), target);
    }
  }

  // string description = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Int32Metric.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .abacus.protobuf.Kind kind = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_kind() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_kind(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string unit = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Int32Metric.unit");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional int32 min = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
            stream, this_._internal_min(), target);
  }

  // optional int32 max = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
            stream, this_._internal_max(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Int32Metric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int32Metric::ByteSizeLong(const MessageLite& base) {
  const Int32Metric& this_ = static_cast<const Int32Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int32Metric::ByteSizeLong() const {
  const Int32Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Int32Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string description = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // optional string unit = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_unit());
    }
    // uint32 offset = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_offset() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_offset());
      }
    }
    // .abacus.protobuf.Kind kind = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_kind() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_kind());
      }
    }
    // optional int32 min = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_min());
    }
    // optional int32 max = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_max());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int32Metric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int32Metric*>(&to_msg);
  auto& from = static_cast<const Int32Metric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Int32Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_unit(from._internal_unit());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_offset() != 0) {
        _this->_impl_.offset_ = from._impl_.offset_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_kind() != 0) {
        _this->_impl_.kind_ = from._impl_.kind_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.min_ = from._impl_.min_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.max_ = from._impl_.max_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int32Metric::CopyFrom(const Int32Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Int32Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int32Metric::InternalSwap(Int32Metric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.max_)
      + sizeof(Int32Metric::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Int32Metric, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata Int32Metric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Float64Metric::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Float64Metric>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_._has_bits_);
};

Float64Metric::Float64Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Float64Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Float64Metric)
}
PROTOBUF_NDEBUG_INLINE Float64Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::Float64Metric& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_),
        unit_(arena, from.unit_) {}

Float64Metric::Float64Metric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Float64Metric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Float64Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Float64Metric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Float64Metric)
}
PROTOBUF_NDEBUG_INLINE Float64Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        description_(arena),
        unit_(arena) {}

inline void Float64Metric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));
}
Float64Metric::~Float64Metric() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Float64Metric)
  SharedDtor(*this);
}
inline void Float64Metric::SharedDtor(MessageLite& self) {
  Float64Metric& this_ = static_cast<Float64Metric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.unit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Float64Metric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Float64Metric(arena);
}
constexpr auto Float64Metric::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Float64Metric),
                                            alignof(Float64Metric));
}
constexpr auto Float64Metric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Float64Metric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Float64Metric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Float64Metric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Float64Metric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Float64Metric>(), &Float64Metric::ByteSizeLong,
              &Float64Metric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_._cached_size_),
          false,
      },
      &Float64Metric::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Float64Metric_class_data_ =
        Float64Metric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Float64Metric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Float64Metric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Float64Metric_class_data_.tc_table);
  return Float64Metric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 53, 2>
Float64Metric::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Float64Metric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::Float64Metric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Float64Metric, _impl_.offset_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.offset_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.description_)}},
    // .abacus.protobuf.Kind kind = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Float64Metric, _impl_.kind_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.kind_)}},
    // optional string unit = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.unit_)}},
    // optional double min = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 4, 0, PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.min_)}},
    // optional double max = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 5, 0, PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.max_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 3;
    {PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.kind_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string unit = 4;
    {PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.unit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional double min = 5;
    {PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.min_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double max = 6;
    {PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.max_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\35\0\13\0\4\0\0\0"
    "abacus.protobuf.Float64Metric"
    "description"
    "unit"
  }},
};
PROTOBUF_NOINLINE void Float64Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Float64Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.unit_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Float64Metric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Float64Metric& this_ = static_cast<const Float64Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Float64Metric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Float64Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Float64Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 offset = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_offset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_offset(), target);
    }
  }

  // string description = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Float64Metric.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .abacus.protobuf.Kind kind = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_kind() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_kind(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string unit = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Float64Metric.unit");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional double min = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this_._internal_min(), target);
  }

  // optional double max = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this_._internal_max(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Float64Metric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Float64Metric::ByteSizeLong(const MessageLite& base) {
  const Float64Metric& this_ = static_cast<const Float64Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Float64Metric::ByteSizeLong() const {
  const Float64Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Float64Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000030u & cached_has_bits) * 9;
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string description = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // optional string unit = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_unit());
    }
    // uint32 offset = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_offset() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_offset());
      }
    }
    // .abacus.protobuf.Kind kind = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_kind() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_kind());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Float64Metric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Float64Metric*>(&to_msg);
  auto& from = static_cast<const Float64Metric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Float64Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_unit(from._internal_unit());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_offset() != 0) {
        _this->_impl_.offset_ = from._impl_.offset_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_kind() != 0) {
        _this->_impl_.kind_ = from._impl_.kind_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.min_ = from._impl_.min_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.max_ = from._impl_.max_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Float64Metric::CopyFrom(const Float64Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Float64Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Float64Metric::InternalSwap(Float64Metric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.max_)
      + sizeof(Float64Metric::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Float64Metric, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata Float64Metric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Float32Metric::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Float32Metric>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_._has_bits_);
};

Float32Metric::Float32Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Float32Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Float32Metric)
}
PROTOBUF_NDEBUG_INLINE Float32Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::Float32Metric& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_),
        unit_(arena, from.unit_) {}

Float32Metric::Float32Metric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Float32Metric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Float32Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Float32Metric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Float32Metric)
}
PROTOBUF_NDEBUG_INLINE Float32Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        description_(arena),
        unit_(arena) {}

inline void Float32Metric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::max_));
}
Float32Metric::~Float32Metric() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Float32Metric)
  SharedDtor(*this);
}
inline void Float32Metric::SharedDtor(MessageLite& self) {
  Float32Metric& this_ = static_cast<Float32Metric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.unit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Float32Metric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Float32Metric(arena);
}
constexpr auto Float32Metric::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Float32Metric),
                                            alignof(Float32Metric));
}
constexpr auto Float32Metric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Float32Metric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Float32Metric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Float32Metric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Float32Metric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Float32Metric>(), &Float32Metric::ByteSizeLong,
              &Float32Metric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_._cached_size_),
          false,
      },
      &Float32Metric::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Float32Metric_class_data_ =
        Float32Metric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Float32Metric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Float32Metric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Float32Metric_class_data_.tc_table);
  return Float32Metric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 53, 2>
Float32Metric::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Float32Metric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::Float32Metric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Float32Metric, _impl_.offset_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.offset_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.description_)}},
    // .abacus.protobuf.Kind kind = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Float32Metric, _impl_.kind_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.kind_)}},
    // optional string unit = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.unit_)}},
    // optional float min = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.min_)}},
    // optional float max = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.max_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Kind kind = 3;
    {PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.kind_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string unit = 4;
    {PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.unit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional float min = 5;
    {PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.min_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float max = 6;
    {PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.max_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\35\0\13\0\4\0\0\0"
    "abacus.protobuf.Float32Metric"
    "description"
    "unit"
  }},
};
PROTOBUF_NOINLINE void Float32Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Float32Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.unit_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Float32Metric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Float32Metric& this_ = static_cast<const Float32Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Float32Metric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Float32Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Float32Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 offset = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_offset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_offset(), target);
    }
  }

  // string description = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Float32Metric.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .abacus.protobuf.Kind kind = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_kind() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_kind(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string unit = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Float32Metric.unit");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional float min = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this_._internal_min(), target);
  }

  // optional float max = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this_._internal_max(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Float32Metric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Float32Metric::ByteSizeLong(const MessageLite& base) {
  const Float32Metric& this_ = static_cast<const Float32Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Float32Metric::ByteSizeLong() const {
  const Float32Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Float32Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000030u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string description = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // optional string unit = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_unit());
    }
    // uint32 offset = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_offset() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_offset());
      }
    }
    // .abacus.protobuf.Kind kind = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_kind() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_kind());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Float32Metric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Float32Metric*>(&to_msg);
  auto& from = static_cast<const Float32Metric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Float32Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_unit(from._internal_unit());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_offset() != 0) {
        _this->_impl_.offset_ = from._impl_.offset_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_kind() != 0) {
        _this->_impl_.kind_ = from._impl_.kind_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.min_ = from._impl_.min_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.max_ = from._impl_.max_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Float32Metric::CopyFrom(const Float32Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Float32Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Float32Metric::InternalSwap(Float32Metric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.max_)
      + sizeof(Float32Metric::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Float32Metric, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata Float32Metric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BoolMetric::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BoolMetric>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BoolMetric, _impl_._has_bits_);
};

BoolMetric::BoolMetric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BoolMetric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.BoolMetric)
}
PROTOBUF_NDEBUG_INLINE BoolMetric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::BoolMetric& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_),
        unit_(arena, from.unit_) {}

BoolMetric::BoolMetric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BoolMetric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BoolMetric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BoolMetric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.offset_ = from._impl_.offset_;

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.BoolMetric)
}
PROTOBUF_NDEBUG_INLINE BoolMetric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        description_(arena),
        unit_(arena) {}

inline void BoolMetric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offset_ = {};
}
BoolMetric::~BoolMetric() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.BoolMetric)
  SharedDtor(*this);
}
inline void BoolMetric::SharedDtor(MessageLite& self) {
  BoolMetric& this_ = static_cast<BoolMetric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.unit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BoolMetric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BoolMetric(arena);
}
constexpr auto BoolMetric::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BoolMetric),
                                            alignof(BoolMetric));
}
constexpr auto BoolMetric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BoolMetric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BoolMetric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BoolMetric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BoolMetric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BoolMetric>(), &BoolMetric::ByteSizeLong,
              &BoolMetric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BoolMetric, _impl_._cached_size_),
          false,
      },
      &BoolMetric::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BoolMetric_class_data_ =
        BoolMetric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BoolMetric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BoolMetric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BoolMetric_class_data_.tc_table);
  return BoolMetric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 50, 2>
BoolMetric::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BoolMetric, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BoolMetric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::BoolMetric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BoolMetric, _impl_.offset_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(BoolMetric, _impl_.offset_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BoolMetric, _impl_.description_)}},
    // optional string unit = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(BoolMetric, _impl_.unit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(BoolMetric, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(BoolMetric, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string unit = 3;
    {PROTOBUF_FIELD_OFFSET(BoolMetric, _impl_.unit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\13\4\0\0\0\0"
    "abacus.protobuf.BoolMetric"
    "description"
    "unit"
  }},
};
PROTOBUF_NOINLINE void BoolMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.BoolMetric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.unit_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.offset_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BoolMetric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BoolMetric& this_ = static_cast<const BoolMetric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BoolMetric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BoolMetric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.BoolMetric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 offset = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_offset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_offset(), target);
    }
  }

  // string description = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.BoolMetric.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string unit = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.BoolMetric.unit");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.BoolMetric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BoolMetric::ByteSizeLong(const MessageLite& base) {
  const BoolMetric& this_ = static_cast<const BoolMetric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BoolMetric::ByteSizeLong() const {
  const BoolMetric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.BoolMetric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string description = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // optional string unit = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_unit());
    }
    // uint32 offset = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_offset() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_offset());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BoolMetric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BoolMetric*>(&to_msg);
  auto& from = static_cast<const BoolMetric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.BoolMetric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_unit(from._internal_unit());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_offset() != 0) {
        _this->_impl_.offset_ = from._impl_.offset_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BoolMetric::CopyFrom(const BoolMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.BoolMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BoolMetric::InternalSwap(BoolMetric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  swap(_impl_.offset_, other->_impl_.offset_);
}

::google::protobuf::Metadata BoolMetric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Enum8Metric_EnumValue::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Enum8Metric_EnumValue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Enum8Metric_EnumValue, _impl_._has_bits_);
};

Enum8Metric_EnumValue::Enum8Metric_EnumValue(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Enum8Metric_EnumValue_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Enum8Metric.EnumValue)
}
PROTOBUF_NDEBUG_INLINE Enum8Metric_EnumValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::Enum8Metric_EnumValue& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        description_(arena, from.description_) {}

Enum8Metric_EnumValue::Enum8Metric_EnumValue(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Enum8Metric_EnumValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Enum8Metric_EnumValue_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Enum8Metric_EnumValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Enum8Metric.EnumValue)
}
PROTOBUF_NDEBUG_INLINE Enum8Metric_EnumValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        description_(arena) {}

inline void Enum8Metric_EnumValue::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Enum8Metric_EnumValue::~Enum8Metric_EnumValue() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Enum8Metric.EnumValue)
  SharedDtor(*this);
}
inline void Enum8Metric_EnumValue::SharedDtor(MessageLite& self) {
  Enum8Metric_EnumValue& this_ = static_cast<Enum8Metric_EnumValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Enum8Metric_EnumValue::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Enum8Metric_EnumValue(arena);
}
constexpr auto Enum8Metric_EnumValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Enum8Metric_EnumValue),
                                            alignof(Enum8Metric_EnumValue));
}
constexpr auto Enum8Metric_EnumValue::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Enum8Metric_EnumValue_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Enum8Metric_EnumValue::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Enum8Metric_EnumValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Enum8Metric_EnumValue::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Enum8Metric_EnumValue>(), &Enum8Metric_EnumValue::ByteSizeLong,
              &Enum8Metric_EnumValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Enum8Metric_EnumValue, _impl_._cached_size_),
          false,
      },
      &Enum8Metric_EnumValue::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Enum8Metric_EnumValue_class_data_ =
        Enum8Metric_EnumValue::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Enum8Metric_EnumValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Enum8Metric_EnumValue_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Enum8Metric_EnumValue_class_data_.tc_table);
  return Enum8Metric_EnumValue_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2>
Enum8Metric_EnumValue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Enum8Metric_EnumValue, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Enum8Metric_EnumValue_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::Enum8Metric_EnumValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Enum8Metric_EnumValue, _impl_.description_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Enum8Metric_EnumValue, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Enum8Metric_EnumValue, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string description = 2;
    {PROTOBUF_FIELD_OFFSET(Enum8Metric_EnumValue, _impl_.description_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\4\13\0\0\0\0\0"
    "abacus.protobuf.Enum8Metric.EnumValue"
    "name"
    "description"
  }},
};
PROTOBUF_NOINLINE void Enum8Metric_EnumValue::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Enum8Metric.EnumValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Enum8Metric_EnumValue::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Enum8Metric_EnumValue& this_ = static_cast<const Enum8Metric_EnumValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Enum8Metric_EnumValue::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Enum8Metric_EnumValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Enum8Metric.EnumValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Enum8Metric.EnumValue.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string description = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Enum8Metric.EnumValue.description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Enum8Metric.EnumValue)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Enum8Metric_EnumValue::ByteSizeLong(const MessageLite& base) {
  const Enum8Metric_EnumValue& this_ = static_cast<const Enum8Metric_EnumValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Enum8Metric_EnumValue::ByteSizeLong() const {
  const Enum8Metric_EnumValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Enum8Metric.EnumValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // optional string description = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_description());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Enum8Metric_EnumValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Enum8Metric_EnumValue*>(&to_msg);
  auto& from = static_cast<const Enum8Metric_EnumValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Enum8Metric.EnumValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_description(from._internal_description());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Enum8Metric_EnumValue::CopyFrom(const Enum8Metric_EnumValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Enum8Metric.EnumValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Enum8Metric_EnumValue::InternalSwap(Enum8Metric_EnumValue* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
}

::google::protobuf::Metadata Enum8Metric_EnumValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Enum8Metric_ValuesEntry_DoNotUse::Enum8Metric_ValuesEntry_DoNotUse()
    : SuperType(Enum8Metric_ValuesEntry_DoNotUse_class_data_.base()) {}
Enum8Metric_ValuesEntry_DoNotUse::Enum8Metric_ValuesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Enum8Metric_ValuesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Enum8Metric_ValuesEntry_DoNotUse::Enum8Metric_ValuesEntry_DoNotUse() : SuperType() {}
Enum8Metric_ValuesEntry_DoNotUse::Enum8Metric_ValuesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Enum8Metric_ValuesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Enum8Metric_ValuesEntry_DoNotUse(arena);
}
constexpr auto Enum8Metric_ValuesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Enum8Metric_ValuesEntry_DoNotUse),
                                            alignof(Enum8Metric_ValuesEntry_DoNotUse));
}
constexpr auto Enum8Metric_ValuesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Enum8Metric_ValuesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Enum8Metric_ValuesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Enum8Metric_ValuesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Enum8Metric_ValuesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Enum8Metric_ValuesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Enum8Metric_ValuesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Enum8Metric_ValuesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Enum8Metric_ValuesEntry_DoNotUse_class_data_ =
        Enum8Metric_ValuesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Enum8Metric_ValuesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Enum8Metric_ValuesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Enum8Metric_ValuesEntry_DoNotUse_class_data_.tc_table);
  return Enum8Metric_ValuesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
Enum8Metric_ValuesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Enum8Metric_ValuesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Enum8Metric_ValuesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::Enum8Metric_ValuesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .abacus.protobuf.Enum8Metric.EnumValue value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Enum8Metric_ValuesEntry_DoNotUse, _impl_.value_)}},
    // uint32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Enum8Metric_ValuesEntry_DoNotUse, _impl_.key_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Enum8Metric_ValuesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 key = 1;
    {PROTOBUF_FIELD_OFFSET(Enum8Metric_ValuesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .abacus.protobuf.Enum8Metric.EnumValue value = 2;
    {PROTOBUF_FIELD_OFFSET(Enum8Metric_ValuesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::abacus::protobuf::Enum8Metric_EnumValue>()},
  }},
  {{
  }},
};
// ===================================================================

class Enum8Metric::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Enum8Metric>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_._has_bits_);
};

Enum8Metric::Enum8Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Enum8Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Enum8Metric)
}
PROTOBUF_NDEBUG_INLINE Enum8Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::Enum8Metric& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        values_{visibility, arena, from.values_},
        description_(arena, from.description_),
        unit_(arena, from.unit_) {}

Enum8Metric::Enum8Metric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Enum8Metric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Enum8Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Enum8Metric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.offset_ = from._impl_.offset_;

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Enum8Metric)
}
PROTOBUF_NDEBUG_INLINE Enum8Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        values_{visibility, arena},
        description_(arena),
        unit_(arena) {}

inline void Enum8Metric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offset_ = {};
}
Enum8Metric::~Enum8Metric() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Enum8Metric)
  SharedDtor(*this);
}
inline void Enum8Metric::SharedDtor(MessageLite& self) {
  Enum8Metric& this_ = static_cast<Enum8Metric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.unit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Enum8Metric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Enum8Metric(arena);
}
constexpr auto Enum8Metric::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_.values_) +
          decltype(Enum8Metric::_impl_.values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_.values_) +
          decltype(Enum8Metric::_impl_.values_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Enum8Metric), alignof(Enum8Metric), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Enum8Metric::PlacementNew_,
                                 sizeof(Enum8Metric),
                                 alignof(Enum8Metric));
  }
}
constexpr auto Enum8Metric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Enum8Metric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Enum8Metric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Enum8Metric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Enum8Metric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Enum8Metric>(), &Enum8Metric::ByteSizeLong,
              &Enum8Metric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_._cached_size_),
          false,
      },
      &Enum8Metric::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Enum8Metric_class_data_ =
        Enum8Metric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Enum8Metric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Enum8Metric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Enum8Metric_class_data_.tc_table);
  return Enum8Metric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 51, 2>
Enum8Metric::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Enum8Metric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::Enum8Metric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string unit = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_.unit_)}},
    // uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Enum8Metric, _impl_.offset_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_.offset_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<uint32, .abacus.protobuf.Enum8Metric.EnumValue> values = 3;
    {PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_.values_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // optional string unit = 4;
    {PROTOBUF_FIELD_OFFSET(Enum8Metric, _impl_.unit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(0, 0, 0,
                                       13, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::abacus::protobuf::Enum8Metric_EnumValue>()},
  }},
  {{
    "\33\0\13\0\4\0\0\0"
    "abacus.protobuf.Enum8Metric"
    "description"
    "unit"
  }},
};
PROTOBUF_NOINLINE void Enum8Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Enum8Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.unit_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.offset_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Enum8Metric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Enum8Metric& this_ = static_cast<const Enum8Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Enum8Metric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Enum8Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Enum8Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 offset = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_offset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_offset(), target);
    }
  }

  // string description = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Enum8Metric.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // map<uint32, .abacus.protobuf.Enum8Metric.EnumValue> values = 3;
  if (!this_._internal_values().empty()) {
    using MapType = ::google::protobuf::Map<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue>;
    using WireHelper = _pbi::MapEntryFuncs<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue,
                                   _pbi::WireFormatLite::TYPE_UINT32,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_values();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
      }
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string unit = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Enum8Metric.unit");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Enum8Metric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Enum8Metric::ByteSizeLong(const MessageLite& base) {
  const Enum8Metric& this_ = static_cast<const Enum8Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Enum8Metric::ByteSizeLong() const {
  const Enum8Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Enum8Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<uint32, .abacus.protobuf.Enum8Metric.EnumValue> values = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_values_size());
      for (const auto& entry : this_._internal_values()) {
        total_size += _pbi::MapEntryFuncs<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue,
                                       _pbi::WireFormatLite::TYPE_UINT32,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string description = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // optional string unit = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_unit());
    }
    // uint32 offset = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_offset() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_offset());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Enum8Metric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Enum8Metric*>(&to_msg);
  auto& from = static_cast<const Enum8Metric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Enum8Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.values_.MergeFrom(from._impl_.values_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_unit(from._internal_unit());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_offset() != 0) {
        _this->_impl_.offset_ = from._impl_.offset_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Enum8Metric::CopyFrom(const Enum8Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Enum8Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Enum8Metric::InternalSwap(Enum8Metric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  swap(_impl_.offset_, other->_impl_.offset_);
}

::google::protobuf::Metadata Enum8Metric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Constant::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Constant>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Constant, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Constant, _impl_._oneof_case_);
};

Constant::Constant(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Constant_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Constant)
}
PROTOBUF_NDEBUG_INLINE Constant::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::Constant& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_),
        unit_(arena, from.unit_),
        value_{},
        _oneof_case_{from._oneof_case_[0]} {}

Constant::Constant(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Constant& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Constant_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Constant* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kUint64:
        _impl_.value_.uint64_ = from._impl_.value_.uint64_;
        break;
      case kInt64:
        _impl_.value_.int64_ = from._impl_.value_.int64_;
        break;
      case kFloat64:
        _impl_.value_.float64_ = from._impl_.value_.float64_;
        break;
      case kBoolean:
        _impl_.value_.boolean_ = from._impl_.value_.boolean_;
        break;
      case kString:
        new (&_impl_.value_.string_) decltype(_impl_.value_.string_){arena, from._impl_.value_.string_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Constant)
}
PROTOBUF_NDEBUG_INLINE Constant::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        description_(arena),
        unit_(arena),
        value_{},
        _oneof_case_{} {}

inline void Constant::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Constant::~Constant() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Constant)
  SharedDtor(*this);
}
inline void Constant::SharedDtor(MessageLite& self) {
  Constant& this_ = static_cast<Constant&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.unit_.Destroy();
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void Constant::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:abacus.protobuf.Constant)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kUint64: {
      // No need to clear
      break;
    }
    case kInt64: {
      // No need to clear
      break;
    }
    case kFloat64: {
      // No need to clear
      break;
    }
    case kBoolean: {
      // No need to clear
      break;
    }
    case kString: {
      _impl_.value_.string_.Destroy();
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* PROTOBUF_NONNULL Constant::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Constant(arena);
}
constexpr auto Constant::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Constant),
                                            alignof(Constant));
}
constexpr auto Constant::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Constant_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Constant::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Constant>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Constant::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Constant>(), &Constant::ByteSizeLong,
              &Constant::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Constant, _impl_._cached_size_),
          false,
      },
      &Constant::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Constant_class_data_ =
        Constant::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Constant::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Constant_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Constant_class_data_.tc_table);
  return Constant_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 7, 0, 54, 2>
Constant::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Constant, _impl_._has_bits_),
    0, // no _extensions_
    7, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Constant_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::Constant>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string description = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Constant, _impl_.description_)}},
    // optional string unit = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(Constant, _impl_.unit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 uint64 = 1;
    {PROTOBUF_FIELD_OFFSET(Constant, _impl_.value_.uint64_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // int64 int64 = 2;
    {PROTOBUF_FIELD_OFFSET(Constant, _impl_.value_.int64_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // double float64 = 3;
    {PROTOBUF_FIELD_OFFSET(Constant, _impl_.value_.float64_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // bool boolean = 4;
    {PROTOBUF_FIELD_OFFSET(Constant, _impl_.value_.boolean_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // string string = 5;
    {PROTOBUF_FIELD_OFFSET(Constant, _impl_.value_.string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 6;
    {PROTOBUF_FIELD_OFFSET(Constant, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string unit = 7;
    {PROTOBUF_FIELD_OFFSET(Constant, _impl_.unit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\0\0\0\6\13\4"
    "abacus.protobuf.Constant"
    "string"
    "description"
    "unit"
  }},
};
PROTOBUF_NOINLINE void Constant::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Constant)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.unit_.ClearNonDefaultToEmpty();
    }
  }
  clear_value();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Constant::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Constant& this_ = static_cast<const Constant&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Constant::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Constant& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Constant)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.value_case()) {
    case kUint64: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_uint64(), target);
      break;
    }
    case kInt64: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_int64(), target);
      break;
    }
    case kFloat64: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_float64(), target);
      break;
    }
    case kBoolean: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_boolean(), target);
      break;
    }
    case kString: {
      const ::std::string& _s = this_._internal_string();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Constant.string");
      target = stream->WriteStringMaybeAliased(5, _s, target);
      break;
    }
    default:
      break;
  }
  // string description = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Constant.description");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string unit = 7;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_unit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.Constant.unit");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Constant)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Constant::ByteSizeLong(const MessageLite& base) {
  const Constant& this_ = static_cast<const Constant&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Constant::ByteSizeLong() const {
  const Constant& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Constant)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string description = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // optional string unit = 7;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_unit());
    }
  }
  switch (this_.value_case()) {
    // uint64 uint64 = 1;
    case kUint64: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_uint64());
      break;
    }
    // int64 int64 = 2;
    case kInt64: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_int64());
      break;
    }
    // double float64 = 3;
    case kFloat64: {
      total_size += 9;
      break;
    }
    // bool boolean = 4;
    case kBoolean: {
      total_size += 2;
      break;
    }
    // string string = 5;
    case kString: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Constant::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Constant*>(&to_msg);
  auto& from = static_cast<const Constant&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Constant)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_unit(from._internal_unit());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kUint64: {
        _this->_impl_.value_.uint64_ = from._impl_.value_.uint64_;
        break;
      }
      case kInt64: {
        _this->_impl_.value_.int64_ = from._impl_.value_.int64_;
        break;
      }
      case kFloat64: {
        _this->_impl_.value_.float64_ = from._impl_.value_.float64_;
        break;
      }
      case kBoolean: {
        _this->_impl_.value_.boolean_ = from._impl_.value_.boolean_;
        break;
      }
      case kString: {
        if (oneof_needs_init) {
          _this->_impl_.value_.string_.InitDefault();
        }
        _this->_impl_.value_.string_.Set(from._internal_string(), arena);
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Constant::CopyFrom(const Constant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Constant::InternalSwap(Constant* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Constant::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Metric::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::abacus::protobuf::Metric, _impl_._oneof_case_);
};

void Metric::set_allocated_constant(::abacus::protobuf::Constant* PROTOBUF_NULLABLE constant) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (constant) {
    ::google::protobuf::Arena* submessage_arena = constant->GetArena();
    if (message_arena != submessage_arena) {
      constant = ::google::protobuf::internal::GetOwnedMessage(message_arena, constant, submessage_arena);
    }
    set_has_constant();
    _impl_.type_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.constant)
}
void Metric::set_allocated_uint64(::abacus::protobuf::UInt64Metric* PROTOBUF_NULLABLE uint64) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (uint64) {
    ::google::protobuf::Arena* submessage_arena = uint64->GetArena();
    if (message_arena != submessage_arena) {
      uint64 = ::google::protobuf::internal::GetOwnedMessage(message_arena, uint64, submessage_arena);
    }
    set_has_uint64();
    _impl_.type_.uint64_ = uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.uint64)
}
void Metric::set_allocated_int64(::abacus::protobuf::Int64Metric* PROTOBUF_NULLABLE int64) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (int64) {
    ::google::protobuf::Arena* submessage_arena = int64->GetArena();
    if (message_arena != submessage_arena) {
      int64 = ::google::protobuf::internal::GetOwnedMessage(message_arena, int64, submessage_arena);
    }
    set_has_int64();
    _impl_.type_.int64_ = int64;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.int64)
}
void Metric::set_allocated_uint32(::abacus::protobuf::UInt32Metric* PROTOBUF_NULLABLE uint32) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (uint32) {
    ::google::protobuf::Arena* submessage_arena = uint32->GetArena();
    if (message_arena != submessage_arena) {
      uint32 = ::google::protobuf::internal::GetOwnedMessage(message_arena, uint32, submessage_arena);
    }
    set_has_uint32();
    _impl_.type_.uint32_ = uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.uint32)
}
void Metric::set_allocated_int32(::abacus::protobuf::Int32Metric* PROTOBUF_NULLABLE int32) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (int32) {
    ::google::protobuf::Arena* submessage_arena = int32->GetArena();
    if (message_arena != submessage_arena) {
      int32 = ::google::protobuf::internal::GetOwnedMessage(message_arena, int32, submessage_arena);
    }
    set_has_int32();
    _impl_.type_.int32_ = int32;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.int32)
}
void Metric::set_allocated_float64(::abacus::protobuf::Float64Metric* PROTOBUF_NULLABLE float64) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (float64) {
    ::google::protobuf::Arena* submessage_arena = float64->GetArena();
    if (message_arena != submessage_arena) {
      float64 = ::google::protobuf::internal::GetOwnedMessage(message_arena, float64, submessage_arena);
    }
    set_has_float64();
    _impl_.type_.float64_ = float64;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.float64)
}
void Metric::set_allocated_float32(::abacus::protobuf::Float32Metric* PROTOBUF_NULLABLE float32) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (float32) {
    ::google::protobuf::Arena* submessage_arena = float32->GetArena();
    if (message_arena != submessage_arena) {
      float32 = ::google::protobuf::internal::GetOwnedMessage(message_arena, float32, submessage_arena);
    }
    set_has_float32();
    _impl_.type_.float32_ = float32;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.float32)
}
void Metric::set_allocated_boolean(::abacus::protobuf::BoolMetric* PROTOBUF_NULLABLE boolean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = boolean->GetArena();
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    _impl_.type_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.boolean)
}
void Metric::set_allocated_enum8(::abacus::protobuf::Enum8Metric* PROTOBUF_NULLABLE enum8) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (enum8) {
    ::google::protobuf::Arena* submessage_arena = enum8->GetArena();
    if (message_arena != submessage_arena) {
      enum8 = ::google::protobuf::internal::GetOwnedMessage(message_arena, enum8, submessage_arena);
    }
    set_has_enum8();
    _impl_.type_.enum8_ = enum8;
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Metric.enum8)
}
Metric::Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.Metric)
}
PROTOBUF_NDEBUG_INLINE Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::Metric& from_msg)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Metric::Metric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Metric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Metric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kConstant:
        _impl_.type_.constant_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.constant_);
        break;
      case kUint64:
        _impl_.type_.uint64_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.uint64_);
        break;
      case kInt64:
        _impl_.type_.int64_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.int64_);
        break;
      case kUint32:
        _impl_.type_.uint32_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.uint32_);
        break;
      case kInt32:
        _impl_.type_.int32_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.int32_);
        break;
      case kFloat64:
        _impl_.type_.float64_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.float64_);
        break;
      case kFloat32:
        _impl_.type_.float32_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.float32_);
        break;
      case kBoolean:
        _impl_.type_.boolean_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.boolean_);
        break;
      case kEnum8:
        _impl_.type_.enum8_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.enum8_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.Metric)
}
PROTOBUF_NDEBUG_INLINE Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Metric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Metric::~Metric() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.Metric)
  SharedDtor(*this);
}
inline void Metric::SharedDtor(MessageLite& self) {
  Metric& this_ = static_cast<Metric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void Metric::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:abacus.protobuf.Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kConstant: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.constant_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.constant_);
      }
      break;
    }
    case kUint64: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.uint64_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.uint64_);
      }
      break;
    }
    case kInt64: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.int64_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.int64_);
      }
      break;
    }
    case kUint32: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.uint32_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.uint32_);
      }
      break;
    }
    case kInt32: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.int32_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.int32_);
      }
      break;
    }
    case kFloat64: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.float64_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.float64_);
      }
      break;
    }
    case kFloat32: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.float32_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.float32_);
      }
      break;
    }
    case kBoolean: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.boolean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.boolean_);
      }
      break;
    }
    case kEnum8: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.enum8_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.enum8_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* PROTOBUF_NONNULL Metric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Metric(arena);
}
constexpr auto Metric::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Metric),
                                            alignof(Metric));
}
constexpr auto Metric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Metric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Metric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Metric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Metric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Metric>(), &Metric::ByteSizeLong,
              &Metric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Metric, _impl_._cached_size_),
          false,
      },
      &Metric::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Metric_class_data_ =
        Metric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Metric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Metric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Metric_class_data_.tc_table);
  return Metric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 9, 9, 0, 2>
Metric::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Metric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::Metric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .abacus.protobuf.Constant constant = 1;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.constant_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.UInt64Metric uint64 = 2;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.uint64_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.Int64Metric int64 = 3;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.int64_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.UInt32Metric uint32 = 4;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.uint32_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.Int32Metric int32 = 5;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.int32_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.Float64Metric float64 = 6;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.float64_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.Float32Metric float32 = 7;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.float32_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.BoolMetric boolean = 8;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.boolean_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .abacus.protobuf.Enum8Metric enum8 = 9;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.type_.enum8_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::abacus::protobuf::Constant>()},
      {::_pbi::TcParser::GetTable<::abacus::protobuf::UInt64Metric>()},
      {::_pbi::TcParser::GetTable<::abacus::protobuf::Int64Metric>()},
      {::_pbi::TcParser::GetTable<::abacus::protobuf::UInt32Metric>()},
      {::_pbi::TcParser::GetTable<::abacus::protobuf::Int32Metric>()},
      {::_pbi::TcParser::GetTable<::abacus::protobuf::Float64Metric>()},
      {::_pbi::TcParser::GetTable<::abacus::protobuf::Float32Metric>()},
      {::_pbi::TcParser::GetTable<::abacus::protobuf::BoolMetric>()},
      {::_pbi::TcParser::GetTable<::abacus::protobuf::Enum8Metric>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Metric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Metric& this_ = static_cast<const Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Metric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.type_case()) {
    case kConstant: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.type_.constant_, this_._impl_.type_.constant_->GetCachedSize(), target,
          stream);
      break;
    }
    case kUint64: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.type_.uint64_, this_._impl_.type_.uint64_->GetCachedSize(), target,
          stream);
      break;
    }
    case kInt64: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.type_.int64_, this_._impl_.type_.int64_->GetCachedSize(), target,
          stream);
      break;
    }
    case kUint32: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.type_.uint32_, this_._impl_.type_.uint32_->GetCachedSize(), target,
          stream);
      break;
    }
    case kInt32: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.type_.int32_, this_._impl_.type_.int32_->GetCachedSize(), target,
          stream);
      break;
    }
    case kFloat64: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.type_.float64_, this_._impl_.type_.float64_->GetCachedSize(), target,
          stream);
      break;
    }
    case kFloat32: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.type_.float32_, this_._impl_.type_.float32_->GetCachedSize(), target,
          stream);
      break;
    }
    case kBoolean: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *this_._impl_.type_.boolean_, this_._impl_.type_.boolean_->GetCachedSize(), target,
          stream);
      break;
    }
    case kEnum8: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *this_._impl_.type_.enum8_, this_._impl_.type_.enum8_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.Metric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Metric::ByteSizeLong(const MessageLite& base) {
  const Metric& this_ = static_cast<const Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Metric::ByteSizeLong() const {
  const Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.type_case()) {
    // .abacus.protobuf.Constant constant = 1;
    case kConstant: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.constant_);
      break;
    }
    // .abacus.protobuf.UInt64Metric uint64 = 2;
    case kUint64: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.uint64_);
      break;
    }
    // .abacus.protobuf.Int64Metric int64 = 3;
    case kInt64: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.int64_);
      break;
    }
    // .abacus.protobuf.UInt32Metric uint32 = 4;
    case kUint32: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.uint32_);
      break;
    }
    // .abacus.protobuf.Int32Metric int32 = 5;
    case kInt32: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.int32_);
      break;
    }
    // .abacus.protobuf.Float64Metric float64 = 6;
    case kFloat64: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.float64_);
      break;
    }
    // .abacus.protobuf.Float32Metric float32 = 7;
    case kFloat32: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.float32_);
      break;
    }
    // .abacus.protobuf.BoolMetric boolean = 8;
    case kBoolean: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.boolean_);
      break;
    }
    // .abacus.protobuf.Enum8Metric enum8 = 9;
    case kEnum8: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.enum8_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Metric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Metric*>(&to_msg);
  auto& from = static_cast<const Metric&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kConstant: {
        if (oneof_needs_init) {
          _this->_impl_.type_.constant_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.constant_);
        } else {
          _this->_impl_.type_.constant_->MergeFrom(*from._impl_.type_.constant_);
        }
        break;
      }
      case kUint64: {
        if (oneof_needs_init) {
          _this->_impl_.type_.uint64_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.uint64_);
        } else {
          _this->_impl_.type_.uint64_->MergeFrom(*from._impl_.type_.uint64_);
        }
        break;
      }
      case kInt64: {
        if (oneof_needs_init) {
          _this->_impl_.type_.int64_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.int64_);
        } else {
          _this->_impl_.type_.int64_->MergeFrom(*from._impl_.type_.int64_);
        }
        break;
      }
      case kUint32: {
        if (oneof_needs_init) {
          _this->_impl_.type_.uint32_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.uint32_);
        } else {
          _this->_impl_.type_.uint32_->MergeFrom(*from._impl_.type_.uint32_);
        }
        break;
      }
      case kInt32: {
        if (oneof_needs_init) {
          _this->_impl_.type_.int32_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.int32_);
        } else {
          _this->_impl_.type_.int32_->MergeFrom(*from._impl_.type_.int32_);
        }
        break;
      }
      case kFloat64: {
        if (oneof_needs_init) {
          _this->_impl_.type_.float64_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.float64_);
        } else {
          _this->_impl_.type_.float64_->MergeFrom(*from._impl_.type_.float64_);
        }
        break;
      }
      case kFloat32: {
        if (oneof_needs_init) {
          _this->_impl_.type_.float32_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.float32_);
        } else {
          _this->_impl_.type_.float32_->MergeFrom(*from._impl_.type_.float32_);
        }
        break;
      }
      case kBoolean: {
        if (oneof_needs_init) {
          _this->_impl_.type_.boolean_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.boolean_);
        } else {
          _this->_impl_.type_.boolean_->MergeFrom(*from._impl_.type_.boolean_);
        }
        break;
      }
      case kEnum8: {
        if (oneof_needs_init) {
          _this->_impl_.type_.enum8_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.enum8_);
        } else {
          _this->_impl_.type_.enum8_->MergeFrom(*from._impl_.type_.enum8_);
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Metric::CopyFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Metric::InternalSwap(Metric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Metric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
MetricsMetadata_MetricsEntry_DoNotUse::MetricsMetadata_MetricsEntry_DoNotUse()
    : SuperType(MetricsMetadata_MetricsEntry_DoNotUse_class_data_.base()) {}
MetricsMetadata_MetricsEntry_DoNotUse::MetricsMetadata_MetricsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, MetricsMetadata_MetricsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
MetricsMetadata_MetricsEntry_DoNotUse::MetricsMetadata_MetricsEntry_DoNotUse() : SuperType() {}
MetricsMetadata_MetricsEntry_DoNotUse::MetricsMetadata_MetricsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL MetricsMetadata_MetricsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MetricsMetadata_MetricsEntry_DoNotUse(arena);
}
constexpr auto MetricsMetadata_MetricsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MetricsMetadata_MetricsEntry_DoNotUse),
                                            alignof(MetricsMetadata_MetricsEntry_DoNotUse));
}
constexpr auto MetricsMetadata_MetricsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MetricsMetadata_MetricsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MetricsMetadata_MetricsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MetricsMetadata_MetricsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MetricsMetadata_MetricsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&MetricsMetadata_MetricsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MetricsMetadata_MetricsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &MetricsMetadata_MetricsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MetricsMetadata_MetricsEntry_DoNotUse_class_data_ =
        MetricsMetadata_MetricsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MetricsMetadata_MetricsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MetricsMetadata_MetricsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MetricsMetadata_MetricsEntry_DoNotUse_class_data_.tc_table);
  return MetricsMetadata_MetricsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 56, 2>
MetricsMetadata_MetricsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MetricsMetadata_MetricsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MetricsMetadata_MetricsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::MetricsMetadata_MetricsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .abacus.protobuf.Metric value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(MetricsMetadata_MetricsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MetricsMetadata_MetricsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(MetricsMetadata_MetricsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .abacus.protobuf.Metric value = 2;
    {PROTOBUF_FIELD_OFFSET(MetricsMetadata_MetricsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::abacus::protobuf::Metric>()},
  }},
  {{
    "\54\3\0\0\0\0\0\0"
    "abacus.protobuf.MetricsMetadata.MetricsEntry"
    "key"
  }},
};
// ===================================================================

class MetricsMetadata::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MetricsMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_._has_bits_);
};

MetricsMetadata::MetricsMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MetricsMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abacus.protobuf.MetricsMetadata)
}
PROTOBUF_NDEBUG_INLINE MetricsMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::abacus::protobuf::MetricsMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        metrics_{visibility, arena, from.metrics_} {}

MetricsMetadata::MetricsMetadata(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MetricsMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MetricsMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MetricsMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, protocol_version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, protocol_version_),
           offsetof(Impl_, sync_value_) -
               offsetof(Impl_, protocol_version_) +
               sizeof(Impl_::sync_value_));

  // @@protoc_insertion_point(copy_constructor:abacus.protobuf.MetricsMetadata)
}
PROTOBUF_NDEBUG_INLINE MetricsMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        metrics_{visibility, arena} {}

inline void MetricsMetadata::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, protocol_version_),
           0,
           offsetof(Impl_, sync_value_) -
               offsetof(Impl_, protocol_version_) +
               sizeof(Impl_::sync_value_));
}
MetricsMetadata::~MetricsMetadata() {
  // @@protoc_insertion_point(destructor:abacus.protobuf.MetricsMetadata)
  SharedDtor(*this);
}
inline void MetricsMetadata::SharedDtor(MessageLite& self) {
  MetricsMetadata& this_ = static_cast<MetricsMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MetricsMetadata::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MetricsMetadata(arena);
}
constexpr auto MetricsMetadata::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.metrics_) +
          decltype(MetricsMetadata::_impl_.metrics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.metrics_) +
          decltype(MetricsMetadata::_impl_.metrics_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MetricsMetadata), alignof(MetricsMetadata), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MetricsMetadata::PlacementNew_,
                                 sizeof(MetricsMetadata),
                                 alignof(MetricsMetadata));
  }
}
constexpr auto MetricsMetadata::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MetricsMetadata_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MetricsMetadata::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MetricsMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MetricsMetadata::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MetricsMetadata>(), &MetricsMetadata::ByteSizeLong,
              &MetricsMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_._cached_size_),
          false,
      },
      &MetricsMetadata::kDescriptorMethods,
      &descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MetricsMetadata_class_data_ =
        MetricsMetadata::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MetricsMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MetricsMetadata_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MetricsMetadata_class_data_.tc_table);
  return MetricsMetadata_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 47, 2>
MetricsMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MetricsMetadata_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abacus::protobuf::MetricsMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 protocol_version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MetricsMetadata, _impl_.protocol_version_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.protocol_version_)}},
    // .abacus.protobuf.Endianness endianness = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MetricsMetadata, _impl_.endianness_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.endianness_)}},
    // fixed32 sync_value = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.sync_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 protocol_version = 1;
    {PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.protocol_version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .abacus.protobuf.Endianness endianness = 2;
    {PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.endianness_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // fixed32 sync_value = 3;
    {PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.sync_value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // map<string, .abacus.protobuf.Metric> metrics = 4;
    {PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.metrics_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::abacus::protobuf::Metric>()},
  }},
  {{
    "\37\0\0\0\7\0\0\0"
    "abacus.protobuf.MetricsMetadata"
    "metrics"
  }},
};
PROTOBUF_NOINLINE void MetricsMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:abacus.protobuf.MetricsMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metrics_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.protocol_version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sync_value_) -
        reinterpret_cast<char*>(&_impl_.protocol_version_)) + sizeof(_impl_.sync_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MetricsMetadata::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MetricsMetadata& this_ = static_cast<const MetricsMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MetricsMetadata::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MetricsMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:abacus.protobuf.MetricsMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 protocol_version = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_protocol_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_protocol_version(), target);
    }
  }

  // .abacus.protobuf.Endianness endianness = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_endianness() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_endianness(), target);
    }
  }

  // fixed32 sync_value = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_sync_value() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
          3, this_._internal_sync_value(), target);
    }
  }

  // map<string, .abacus.protobuf.Metric> metrics = 4;
  if (!this_._internal_metrics().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::abacus::protobuf::Metric>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::abacus::protobuf::Metric,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_metrics();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.MetricsMetadata.metrics");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abacus.protobuf.MetricsMetadata.metrics");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:abacus.protobuf.MetricsMetadata)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MetricsMetadata::ByteSizeLong(const MessageLite& base) {
  const MetricsMetadata& this_ = static_cast<const MetricsMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MetricsMetadata::ByteSizeLong() const {
  const MetricsMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:abacus.protobuf.MetricsMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, .abacus.protobuf.Metric> metrics = 4;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_metrics_size());
      for (const auto& entry : this_._internal_metrics()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::abacus::protobuf::Metric,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // uint32 protocol_version = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_protocol_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_protocol_version());
      }
    }
    // .abacus.protobuf.Endianness endianness = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_endianness() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_endianness());
      }
    }
    // fixed32 sync_value = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_sync_value() != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MetricsMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MetricsMetadata*>(&to_msg);
  auto& from = static_cast<const MetricsMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abacus.protobuf.MetricsMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metrics_.MergeFrom(from._impl_.metrics_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_protocol_version() != 0) {
        _this->_impl_.protocol_version_ = from._impl_.protocol_version_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_endianness() != 0) {
        _this->_impl_.endianness_ = from._impl_.endianness_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_sync_value() != 0) {
        _this->_impl_.sync_value_ = from._impl_.sync_value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetricsMetadata::CopyFrom(const MetricsMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abacus.protobuf.MetricsMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MetricsMetadata::InternalSwap(MetricsMetadata* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.metrics_.InternalSwap(&other->_impl_.metrics_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.sync_value_)
      + sizeof(MetricsMetadata::_impl_.sync_value_)
      - PROTOBUF_FIELD_OFFSET(MetricsMetadata, _impl_.protocol_version_)>(
          reinterpret_cast<char*>(&_impl_.protocol_version_),
          reinterpret_cast<char*>(&other->_impl_.protocol_version_));
}

::google::protobuf::Metadata MetricsMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace abacus
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
