// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: abacus/protobuf/metrics.proto
// Protobuf C++ Version: 6.31.0

#ifndef abacus_2fprotobuf_2fmetrics_2eproto_2epb_2eh
#define abacus_2fprotobuf_2fmetrics_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_abacus_2fprotobuf_2fmetrics_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_abacus_2fprotobuf_2fmetrics_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_abacus_2fprotobuf_2fmetrics_2eproto;
}  // extern "C"
namespace abacus {
namespace protobuf {
enum Endianness : int;
extern const uint32_t Endianness_internal_data_[];
enum Kind : int;
extern const uint32_t Kind_internal_data_[];
class BoolMetric;
struct BoolMetricDefaultTypeInternal;
extern BoolMetricDefaultTypeInternal _BoolMetric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BoolMetric_class_data_;
class Constant;
struct ConstantDefaultTypeInternal;
extern ConstantDefaultTypeInternal _Constant_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Constant_class_data_;
class Enum8Metric;
struct Enum8MetricDefaultTypeInternal;
extern Enum8MetricDefaultTypeInternal _Enum8Metric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Enum8Metric_class_data_;
class Enum8Metric_EnumValue;
struct Enum8Metric_EnumValueDefaultTypeInternal;
extern Enum8Metric_EnumValueDefaultTypeInternal _Enum8Metric_EnumValue_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Enum8Metric_EnumValue_class_data_;
class Enum8Metric_ValuesEntry_DoNotUse;
struct Enum8Metric_ValuesEntry_DoNotUseDefaultTypeInternal;
extern Enum8Metric_ValuesEntry_DoNotUseDefaultTypeInternal _Enum8Metric_ValuesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Enum8Metric_ValuesEntry_DoNotUse_class_data_;
class Float32Metric;
struct Float32MetricDefaultTypeInternal;
extern Float32MetricDefaultTypeInternal _Float32Metric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Float32Metric_class_data_;
class Float64Metric;
struct Float64MetricDefaultTypeInternal;
extern Float64MetricDefaultTypeInternal _Float64Metric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Float64Metric_class_data_;
class Int32Metric;
struct Int32MetricDefaultTypeInternal;
extern Int32MetricDefaultTypeInternal _Int32Metric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Int32Metric_class_data_;
class Int64Metric;
struct Int64MetricDefaultTypeInternal;
extern Int64MetricDefaultTypeInternal _Int64Metric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Int64Metric_class_data_;
class Metric;
struct MetricDefaultTypeInternal;
extern MetricDefaultTypeInternal _Metric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Metric_class_data_;
class MetricsMetadata;
struct MetricsMetadataDefaultTypeInternal;
extern MetricsMetadataDefaultTypeInternal _MetricsMetadata_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MetricsMetadata_class_data_;
class MetricsMetadata_MetricsEntry_DoNotUse;
struct MetricsMetadata_MetricsEntry_DoNotUseDefaultTypeInternal;
extern MetricsMetadata_MetricsEntry_DoNotUseDefaultTypeInternal _MetricsMetadata_MetricsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MetricsMetadata_MetricsEntry_DoNotUse_class_data_;
class UInt32Metric;
struct UInt32MetricDefaultTypeInternal;
extern UInt32MetricDefaultTypeInternal _UInt32Metric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UInt32Metric_class_data_;
class UInt64Metric;
struct UInt64MetricDefaultTypeInternal;
extern UInt64MetricDefaultTypeInternal _UInt64Metric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UInt64Metric_class_data_;
}  // namespace protobuf
}  // namespace abacus
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::abacus::protobuf::Endianness_internal_data_>
    internal::EnumTraitsImpl::value<::abacus::protobuf::Endianness>;
template <>
internal::EnumTraitsT<::abacus::protobuf::Kind_internal_data_>
    internal::EnumTraitsImpl::value<::abacus::protobuf::Kind>;
}  // namespace protobuf
}  // namespace google

namespace abacus {
namespace protobuf {
enum Endianness : int {
  LITTLE = 0,
  BIG = 1,
  Endianness_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  Endianness_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Endianness_internal_data_[];
inline constexpr Endianness Endianness_MIN =
    static_cast<Endianness>(0);
inline constexpr Endianness Endianness_MAX =
    static_cast<Endianness>(1);
inline bool Endianness_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int Endianness_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Endianness_descriptor();
template <typename T>
const ::std::string& Endianness_Name(T value) {
  static_assert(::std::is_same<T, Endianness>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Endianness_Name().");
  return Endianness_Name(static_cast<Endianness>(value));
}
template <>
inline const ::std::string& Endianness_Name(Endianness value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Endianness_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool Endianness_Parse(
    ::absl::string_view name, Endianness* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Endianness>(Endianness_descriptor(), name,
                                           value);
}
enum Kind : int {
  GAUGE = 0,
  COUNTER = 1,
  Kind_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  Kind_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Kind_internal_data_[];
inline constexpr Kind Kind_MIN =
    static_cast<Kind>(0);
inline constexpr Kind Kind_MAX =
    static_cast<Kind>(1);
inline bool Kind_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int Kind_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Kind_descriptor();
template <typename T>
const ::std::string& Kind_Name(T value) {
  static_assert(::std::is_same<T, Kind>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Kind_Name().");
  return Kind_Name(static_cast<Kind>(value));
}
template <>
inline const ::std::string& Kind_Name(Kind value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Kind_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool Kind_Parse(
    ::absl::string_view name, Kind* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Kind>(Kind_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class UInt64Metric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.UInt64Metric) */ {
 public:
  inline UInt64Metric() : UInt64Metric(nullptr) {}
  ~UInt64Metric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UInt64Metric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UInt64Metric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UInt64Metric(::google::protobuf::internal::ConstantInitialized);

  inline UInt64Metric(const UInt64Metric& from) : UInt64Metric(nullptr, from) {}
  inline UInt64Metric(UInt64Metric&& from) noexcept
      : UInt64Metric(nullptr, ::std::move(from)) {}
  inline UInt64Metric& operator=(const UInt64Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline UInt64Metric& operator=(UInt64Metric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UInt64Metric& default_instance() {
    return *reinterpret_cast<const UInt64Metric*>(
        &_UInt64Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(UInt64Metric& a, UInt64Metric& b) { a.Swap(&b); }
  inline void Swap(UInt64Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UInt64Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UInt64Metric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UInt64Metric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UInt64Metric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UInt64Metric& from) { UInt64Metric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UInt64Metric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.UInt64Metric"; }

 protected:
  explicit UInt64Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UInt64Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UInt64Metric& from);
  UInt64Metric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UInt64Metric&& from) noexcept
      : UInt64Metric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
    kUnitFieldNumber = 4,
    kOffsetFieldNumber = 1,
    kKindFieldNumber = 3,
    kMinFieldNumber = 5,
    kMaxFieldNumber = 6,
  };
  // string description = 2;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // optional string unit = 4;
  bool has_unit() const;
  void clear_unit() ;
  const ::std::string& unit() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_unit();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_unit();
  void set_allocated_unit(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_unit() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_unit(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_unit();

  public:
  // uint32 offset = 1;
  void clear_offset() ;
  ::uint32_t offset() const;
  void set_offset(::uint32_t value);

  private:
  ::uint32_t _internal_offset() const;
  void _internal_set_offset(::uint32_t value);

  public:
  // .abacus.protobuf.Kind kind = 3;
  void clear_kind() ;
  ::abacus::protobuf::Kind kind() const;
  void set_kind(::abacus::protobuf::Kind value);

  private:
  ::abacus::protobuf::Kind _internal_kind() const;
  void _internal_set_kind(::abacus::protobuf::Kind value);

  public:
  // optional uint64 min = 5;
  bool has_min() const;
  void clear_min() ;
  ::uint64_t min() const;
  void set_min(::uint64_t value);

  private:
  ::uint64_t _internal_min() const;
  void _internal_set_min(::uint64_t value);

  public:
  // optional uint64 max = 6;
  bool has_max() const;
  void clear_max() ;
  ::uint64_t max() const;
  void set_max(::uint64_t value);

  private:
  ::uint64_t _internal_max() const;
  void _internal_set_max(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:abacus.protobuf.UInt64Metric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UInt64Metric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    ::uint32_t offset_;
    int kind_;
    ::uint64_t min_;
    ::uint64_t max_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UInt64Metric_class_data_;
// -------------------------------------------------------------------

class UInt32Metric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.UInt32Metric) */ {
 public:
  inline UInt32Metric() : UInt32Metric(nullptr) {}
  ~UInt32Metric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UInt32Metric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UInt32Metric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UInt32Metric(::google::protobuf::internal::ConstantInitialized);

  inline UInt32Metric(const UInt32Metric& from) : UInt32Metric(nullptr, from) {}
  inline UInt32Metric(UInt32Metric&& from) noexcept
      : UInt32Metric(nullptr, ::std::move(from)) {}
  inline UInt32Metric& operator=(const UInt32Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline UInt32Metric& operator=(UInt32Metric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UInt32Metric& default_instance() {
    return *reinterpret_cast<const UInt32Metric*>(
        &_UInt32Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(UInt32Metric& a, UInt32Metric& b) { a.Swap(&b); }
  inline void Swap(UInt32Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UInt32Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UInt32Metric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UInt32Metric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UInt32Metric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UInt32Metric& from) { UInt32Metric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UInt32Metric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.UInt32Metric"; }

 protected:
  explicit UInt32Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UInt32Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UInt32Metric& from);
  UInt32Metric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UInt32Metric&& from) noexcept
      : UInt32Metric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
    kUnitFieldNumber = 4,
    kOffsetFieldNumber = 1,
    kKindFieldNumber = 3,
    kMinFieldNumber = 5,
    kMaxFieldNumber = 6,
  };
  // string description = 2;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // optional string unit = 4;
  bool has_unit() const;
  void clear_unit() ;
  const ::std::string& unit() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_unit();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_unit();
  void set_allocated_unit(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_unit() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_unit(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_unit();

  public:
  // uint32 offset = 1;
  void clear_offset() ;
  ::uint32_t offset() const;
  void set_offset(::uint32_t value);

  private:
  ::uint32_t _internal_offset() const;
  void _internal_set_offset(::uint32_t value);

  public:
  // .abacus.protobuf.Kind kind = 3;
  void clear_kind() ;
  ::abacus::protobuf::Kind kind() const;
  void set_kind(::abacus::protobuf::Kind value);

  private:
  ::abacus::protobuf::Kind _internal_kind() const;
  void _internal_set_kind(::abacus::protobuf::Kind value);

  public:
  // optional uint32 min = 5;
  bool has_min() const;
  void clear_min() ;
  ::uint32_t min() const;
  void set_min(::uint32_t value);

  private:
  ::uint32_t _internal_min() const;
  void _internal_set_min(::uint32_t value);

  public:
  // optional uint32 max = 6;
  bool has_max() const;
  void clear_max() ;
  ::uint32_t max() const;
  void set_max(::uint32_t value);

  private:
  ::uint32_t _internal_max() const;
  void _internal_set_max(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:abacus.protobuf.UInt32Metric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UInt32Metric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    ::uint32_t offset_;
    int kind_;
    ::uint32_t min_;
    ::uint32_t max_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UInt32Metric_class_data_;
// -------------------------------------------------------------------

class Int64Metric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.Int64Metric) */ {
 public:
  inline Int64Metric() : Int64Metric(nullptr) {}
  ~Int64Metric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Int64Metric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Int64Metric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Int64Metric(::google::protobuf::internal::ConstantInitialized);

  inline Int64Metric(const Int64Metric& from) : Int64Metric(nullptr, from) {}
  inline Int64Metric(Int64Metric&& from) noexcept
      : Int64Metric(nullptr, ::std::move(from)) {}
  inline Int64Metric& operator=(const Int64Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline Int64Metric& operator=(Int64Metric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Int64Metric& default_instance() {
    return *reinterpret_cast<const Int64Metric*>(
        &_Int64Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Int64Metric& a, Int64Metric& b) { a.Swap(&b); }
  inline void Swap(Int64Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Int64Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Int64Metric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Int64Metric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Int64Metric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Int64Metric& from) { Int64Metric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Int64Metric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.Int64Metric"; }

 protected:
  explicit Int64Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Int64Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Int64Metric& from);
  Int64Metric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Int64Metric&& from) noexcept
      : Int64Metric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
    kUnitFieldNumber = 4,
    kOffsetFieldNumber = 1,
    kKindFieldNumber = 3,
    kMinFieldNumber = 5,
    kMaxFieldNumber = 6,
  };
  // string description = 2;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // optional string unit = 4;
  bool has_unit() const;
  void clear_unit() ;
  const ::std::string& unit() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_unit();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_unit();
  void set_allocated_unit(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_unit() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_unit(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_unit();

  public:
  // uint32 offset = 1;
  void clear_offset() ;
  ::uint32_t offset() const;
  void set_offset(::uint32_t value);

  private:
  ::uint32_t _internal_offset() const;
  void _internal_set_offset(::uint32_t value);

  public:
  // .abacus.protobuf.Kind kind = 3;
  void clear_kind() ;
  ::abacus::protobuf::Kind kind() const;
  void set_kind(::abacus::protobuf::Kind value);

  private:
  ::abacus::protobuf::Kind _internal_kind() const;
  void _internal_set_kind(::abacus::protobuf::Kind value);

  public:
  // optional int64 min = 5;
  bool has_min() const;
  void clear_min() ;
  ::int64_t min() const;
  void set_min(::int64_t value);

  private:
  ::int64_t _internal_min() const;
  void _internal_set_min(::int64_t value);

  public:
  // optional int64 max = 6;
  bool has_max() const;
  void clear_max() ;
  ::int64_t max() const;
  void set_max(::int64_t value);

  private:
  ::int64_t _internal_max() const;
  void _internal_set_max(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:abacus.protobuf.Int64Metric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 51,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Int64Metric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    ::uint32_t offset_;
    int kind_;
    ::int64_t min_;
    ::int64_t max_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Int64Metric_class_data_;
// -------------------------------------------------------------------

class Int32Metric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.Int32Metric) */ {
 public:
  inline Int32Metric() : Int32Metric(nullptr) {}
  ~Int32Metric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Int32Metric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Int32Metric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Int32Metric(::google::protobuf::internal::ConstantInitialized);

  inline Int32Metric(const Int32Metric& from) : Int32Metric(nullptr, from) {}
  inline Int32Metric(Int32Metric&& from) noexcept
      : Int32Metric(nullptr, ::std::move(from)) {}
  inline Int32Metric& operator=(const Int32Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline Int32Metric& operator=(Int32Metric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Int32Metric& default_instance() {
    return *reinterpret_cast<const Int32Metric*>(
        &_Int32Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Int32Metric& a, Int32Metric& b) { a.Swap(&b); }
  inline void Swap(Int32Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Int32Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Int32Metric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Int32Metric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Int32Metric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Int32Metric& from) { Int32Metric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Int32Metric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.Int32Metric"; }

 protected:
  explicit Int32Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Int32Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Int32Metric& from);
  Int32Metric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Int32Metric&& from) noexcept
      : Int32Metric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
    kUnitFieldNumber = 4,
    kOffsetFieldNumber = 1,
    kKindFieldNumber = 3,
    kMinFieldNumber = 5,
    kMaxFieldNumber = 6,
  };
  // string description = 2;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // optional string unit = 4;
  bool has_unit() const;
  void clear_unit() ;
  const ::std::string& unit() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_unit();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_unit();
  void set_allocated_unit(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_unit() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_unit(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_unit();

  public:
  // uint32 offset = 1;
  void clear_offset() ;
  ::uint32_t offset() const;
  void set_offset(::uint32_t value);

  private:
  ::uint32_t _internal_offset() const;
  void _internal_set_offset(::uint32_t value);

  public:
  // .abacus.protobuf.Kind kind = 3;
  void clear_kind() ;
  ::abacus::protobuf::Kind kind() const;
  void set_kind(::abacus::protobuf::Kind value);

  private:
  ::abacus::protobuf::Kind _internal_kind() const;
  void _internal_set_kind(::abacus::protobuf::Kind value);

  public:
  // optional int32 min = 5;
  bool has_min() const;
  void clear_min() ;
  ::int32_t min() const;
  void set_min(::int32_t value);

  private:
  ::int32_t _internal_min() const;
  void _internal_set_min(::int32_t value);

  public:
  // optional int32 max = 6;
  bool has_max() const;
  void clear_max() ;
  ::int32_t max() const;
  void set_max(::int32_t value);

  private:
  ::int32_t _internal_max() const;
  void _internal_set_max(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:abacus.protobuf.Int32Metric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 51,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Int32Metric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    ::uint32_t offset_;
    int kind_;
    ::int32_t min_;
    ::int32_t max_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Int32Metric_class_data_;
// -------------------------------------------------------------------

class Float64Metric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.Float64Metric) */ {
 public:
  inline Float64Metric() : Float64Metric(nullptr) {}
  ~Float64Metric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Float64Metric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Float64Metric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Float64Metric(::google::protobuf::internal::ConstantInitialized);

  inline Float64Metric(const Float64Metric& from) : Float64Metric(nullptr, from) {}
  inline Float64Metric(Float64Metric&& from) noexcept
      : Float64Metric(nullptr, ::std::move(from)) {}
  inline Float64Metric& operator=(const Float64Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline Float64Metric& operator=(Float64Metric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Float64Metric& default_instance() {
    return *reinterpret_cast<const Float64Metric*>(
        &_Float64Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Float64Metric& a, Float64Metric& b) { a.Swap(&b); }
  inline void Swap(Float64Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Float64Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Float64Metric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Float64Metric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Float64Metric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Float64Metric& from) { Float64Metric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Float64Metric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.Float64Metric"; }

 protected:
  explicit Float64Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Float64Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Float64Metric& from);
  Float64Metric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Float64Metric&& from) noexcept
      : Float64Metric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
    kUnitFieldNumber = 4,
    kOffsetFieldNumber = 1,
    kKindFieldNumber = 3,
    kMinFieldNumber = 5,
    kMaxFieldNumber = 6,
  };
  // string description = 2;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // optional string unit = 4;
  bool has_unit() const;
  void clear_unit() ;
  const ::std::string& unit() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_unit();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_unit();
  void set_allocated_unit(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_unit() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_unit(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_unit();

  public:
  // uint32 offset = 1;
  void clear_offset() ;
  ::uint32_t offset() const;
  void set_offset(::uint32_t value);

  private:
  ::uint32_t _internal_offset() const;
  void _internal_set_offset(::uint32_t value);

  public:
  // .abacus.protobuf.Kind kind = 3;
  void clear_kind() ;
  ::abacus::protobuf::Kind kind() const;
  void set_kind(::abacus::protobuf::Kind value);

  private:
  ::abacus::protobuf::Kind _internal_kind() const;
  void _internal_set_kind(::abacus::protobuf::Kind value);

  public:
  // optional double min = 5;
  bool has_min() const;
  void clear_min() ;
  double min() const;
  void set_min(double value);

  private:
  double _internal_min() const;
  void _internal_set_min(double value);

  public:
  // optional double max = 6;
  bool has_max() const;
  void clear_max() ;
  double max() const;
  void set_max(double value);

  private:
  double _internal_max() const;
  void _internal_set_max(double value);

  public:
  // @@protoc_insertion_point(class_scope:abacus.protobuf.Float64Metric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Float64Metric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    ::uint32_t offset_;
    int kind_;
    double min_;
    double max_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Float64Metric_class_data_;
// -------------------------------------------------------------------

class Float32Metric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.Float32Metric) */ {
 public:
  inline Float32Metric() : Float32Metric(nullptr) {}
  ~Float32Metric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Float32Metric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Float32Metric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Float32Metric(::google::protobuf::internal::ConstantInitialized);

  inline Float32Metric(const Float32Metric& from) : Float32Metric(nullptr, from) {}
  inline Float32Metric(Float32Metric&& from) noexcept
      : Float32Metric(nullptr, ::std::move(from)) {}
  inline Float32Metric& operator=(const Float32Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline Float32Metric& operator=(Float32Metric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Float32Metric& default_instance() {
    return *reinterpret_cast<const Float32Metric*>(
        &_Float32Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Float32Metric& a, Float32Metric& b) { a.Swap(&b); }
  inline void Swap(Float32Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Float32Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Float32Metric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Float32Metric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Float32Metric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Float32Metric& from) { Float32Metric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Float32Metric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.Float32Metric"; }

 protected:
  explicit Float32Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Float32Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Float32Metric& from);
  Float32Metric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Float32Metric&& from) noexcept
      : Float32Metric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
    kUnitFieldNumber = 4,
    kOffsetFieldNumber = 1,
    kKindFieldNumber = 3,
    kMinFieldNumber = 5,
    kMaxFieldNumber = 6,
  };
  // string description = 2;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // optional string unit = 4;
  bool has_unit() const;
  void clear_unit() ;
  const ::std::string& unit() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_unit();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_unit();
  void set_allocated_unit(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_unit() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_unit(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_unit();

  public:
  // uint32 offset = 1;
  void clear_offset() ;
  ::uint32_t offset() const;
  void set_offset(::uint32_t value);

  private:
  ::uint32_t _internal_offset() const;
  void _internal_set_offset(::uint32_t value);

  public:
  // .abacus.protobuf.Kind kind = 3;
  void clear_kind() ;
  ::abacus::protobuf::Kind kind() const;
  void set_kind(::abacus::protobuf::Kind value);

  private:
  ::abacus::protobuf::Kind _internal_kind() const;
  void _internal_set_kind(::abacus::protobuf::Kind value);

  public:
  // optional float min = 5;
  bool has_min() const;
  void clear_min() ;
  float min() const;
  void set_min(float value);

  private:
  float _internal_min() const;
  void _internal_set_min(float value);

  public:
  // optional float max = 6;
  bool has_max() const;
  void clear_max() ;
  float max() const;
  void set_max(float value);

  private:
  float _internal_max() const;
  void _internal_set_max(float value);

  public:
  // @@protoc_insertion_point(class_scope:abacus.protobuf.Float32Metric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Float32Metric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    ::uint32_t offset_;
    int kind_;
    float min_;
    float max_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Float32Metric_class_data_;
// -------------------------------------------------------------------

class Enum8Metric_EnumValue final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.Enum8Metric.EnumValue) */ {
 public:
  inline Enum8Metric_EnumValue() : Enum8Metric_EnumValue(nullptr) {}
  ~Enum8Metric_EnumValue() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Enum8Metric_EnumValue* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Enum8Metric_EnumValue));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Enum8Metric_EnumValue(::google::protobuf::internal::ConstantInitialized);

  inline Enum8Metric_EnumValue(const Enum8Metric_EnumValue& from) : Enum8Metric_EnumValue(nullptr, from) {}
  inline Enum8Metric_EnumValue(Enum8Metric_EnumValue&& from) noexcept
      : Enum8Metric_EnumValue(nullptr, ::std::move(from)) {}
  inline Enum8Metric_EnumValue& operator=(const Enum8Metric_EnumValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline Enum8Metric_EnumValue& operator=(Enum8Metric_EnumValue&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Enum8Metric_EnumValue& default_instance() {
    return *reinterpret_cast<const Enum8Metric_EnumValue*>(
        &_Enum8Metric_EnumValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(Enum8Metric_EnumValue& a, Enum8Metric_EnumValue& b) { a.Swap(&b); }
  inline void Swap(Enum8Metric_EnumValue* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Enum8Metric_EnumValue* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Enum8Metric_EnumValue* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Enum8Metric_EnumValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Enum8Metric_EnumValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Enum8Metric_EnumValue& from) { Enum8Metric_EnumValue::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Enum8Metric_EnumValue* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.Enum8Metric.EnumValue"; }

 protected:
  explicit Enum8Metric_EnumValue(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Enum8Metric_EnumValue(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Enum8Metric_EnumValue& from);
  Enum8Metric_EnumValue(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Enum8Metric_EnumValue&& from) noexcept
      : Enum8Metric_EnumValue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // optional string description = 2;
  bool has_description() const;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:abacus.protobuf.Enum8Metric.EnumValue)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 61,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Enum8Metric_EnumValue& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Enum8Metric_EnumValue_class_data_;
// -------------------------------------------------------------------

class Constant final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.Constant) */ {
 public:
  inline Constant() : Constant(nullptr) {}
  ~Constant() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Constant* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Constant));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Constant(::google::protobuf::internal::ConstantInitialized);

  inline Constant(const Constant& from) : Constant(nullptr, from) {}
  inline Constant(Constant&& from) noexcept
      : Constant(nullptr, ::std::move(from)) {}
  inline Constant& operator=(const Constant& from) {
    CopyFrom(from);
    return *this;
  }
  inline Constant& operator=(Constant&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Constant& default_instance() {
    return *reinterpret_cast<const Constant*>(
        &_Constant_default_instance_);
  }
  enum ValueCase {
    kUint64 = 1,
    kInt64 = 2,
    kFloat64 = 3,
    kBoolean = 4,
    kString = 5,
    VALUE_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Constant& a, Constant& b) { a.Swap(&b); }
  inline void Swap(Constant* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Constant* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Constant* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Constant>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Constant& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Constant& from) { Constant::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Constant* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.Constant"; }

 protected:
  explicit Constant(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Constant(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Constant& from);
  Constant(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Constant&& from) noexcept
      : Constant(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 6,
    kUnitFieldNumber = 7,
    kUint64FieldNumber = 1,
    kInt64FieldNumber = 2,
    kFloat64FieldNumber = 3,
    kBooleanFieldNumber = 4,
    kStringFieldNumber = 5,
  };
  // string description = 6;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // optional string unit = 7;
  bool has_unit() const;
  void clear_unit() ;
  const ::std::string& unit() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_unit();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_unit();
  void set_allocated_unit(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_unit() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_unit(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_unit();

  public:
  // uint64 uint64 = 1;
  bool has_uint64() const;
  void clear_uint64() ;
  ::uint64_t uint64() const;
  void set_uint64(::uint64_t value);

  private:
  ::uint64_t _internal_uint64() const;
  void _internal_set_uint64(::uint64_t value);

  public:
  // int64 int64 = 2;
  bool has_int64() const;
  void clear_int64() ;
  ::int64_t int64() const;
  void set_int64(::int64_t value);

  private:
  ::int64_t _internal_int64() const;
  void _internal_set_int64(::int64_t value);

  public:
  // double float64 = 3;
  bool has_float64() const;
  void clear_float64() ;
  double float64() const;
  void set_float64(double value);

  private:
  double _internal_float64() const;
  void _internal_set_float64(double value);

  public:
  // bool boolean = 4;
  bool has_boolean() const;
  void clear_boolean() ;
  bool boolean() const;
  void set_boolean(bool value);

  private:
  bool _internal_boolean() const;
  void _internal_set_boolean(bool value);

  public:
  // string string = 5;
  bool has_string() const;
  void clear_string() ;
  const ::std::string& string() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_string(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_string();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_string();
  void set_allocated_string(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_string() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_string(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_string();

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:abacus.protobuf.Constant)
 private:
  class _Internal;
  void set_has_uint64();
  void set_has_int64();
  void set_has_float64();
  void set_has_boolean();
  void set_has_string();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 7,
                                   0, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Constant& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::uint64_t uint64_;
      ::int64_t int64_;
      double float64_;
      bool boolean_;
      ::google::protobuf::internal::ArenaStringPtr string_;
    } value_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Constant_class_data_;
// -------------------------------------------------------------------

class BoolMetric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.BoolMetric) */ {
 public:
  inline BoolMetric() : BoolMetric(nullptr) {}
  ~BoolMetric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BoolMetric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BoolMetric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BoolMetric(::google::protobuf::internal::ConstantInitialized);

  inline BoolMetric(const BoolMetric& from) : BoolMetric(nullptr, from) {}
  inline BoolMetric(BoolMetric&& from) noexcept
      : BoolMetric(nullptr, ::std::move(from)) {}
  inline BoolMetric& operator=(const BoolMetric& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoolMetric& operator=(BoolMetric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BoolMetric& default_instance() {
    return *reinterpret_cast<const BoolMetric*>(
        &_BoolMetric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(BoolMetric& a, BoolMetric& b) { a.Swap(&b); }
  inline void Swap(BoolMetric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoolMetric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BoolMetric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BoolMetric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BoolMetric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BoolMetric& from) { BoolMetric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BoolMetric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.BoolMetric"; }

 protected:
  explicit BoolMetric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BoolMetric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BoolMetric& from);
  BoolMetric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BoolMetric&& from) noexcept
      : BoolMetric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
    kUnitFieldNumber = 3,
    kOffsetFieldNumber = 1,
  };
  // string description = 2;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // optional string unit = 3;
  bool has_unit() const;
  void clear_unit() ;
  const ::std::string& unit() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_unit();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_unit();
  void set_allocated_unit(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_unit() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_unit(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_unit();

  public:
  // uint32 offset = 1;
  void clear_offset() ;
  ::uint32_t offset() const;
  void set_offset(::uint32_t value);

  private:
  ::uint32_t _internal_offset() const;
  void _internal_set_offset(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:abacus.protobuf.BoolMetric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BoolMetric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    ::uint32_t offset_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BoolMetric_class_data_;
// -------------------------------------------------------------------

class Enum8Metric_ValuesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<::uint32_t, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<::uint32_t, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Enum8Metric_ValuesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Enum8Metric_ValuesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit Enum8Metric_ValuesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_Enum8Metric_ValuesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull Enum8Metric_ValuesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class Enum8Metric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.Enum8Metric) */ {
 public:
  inline Enum8Metric() : Enum8Metric(nullptr) {}
  ~Enum8Metric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Enum8Metric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Enum8Metric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Enum8Metric(::google::protobuf::internal::ConstantInitialized);

  inline Enum8Metric(const Enum8Metric& from) : Enum8Metric(nullptr, from) {}
  inline Enum8Metric(Enum8Metric&& from) noexcept
      : Enum8Metric(nullptr, ::std::move(from)) {}
  inline Enum8Metric& operator=(const Enum8Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline Enum8Metric& operator=(Enum8Metric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Enum8Metric& default_instance() {
    return *reinterpret_cast<const Enum8Metric*>(
        &_Enum8Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Enum8Metric& a, Enum8Metric& b) { a.Swap(&b); }
  inline void Swap(Enum8Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Enum8Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Enum8Metric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Enum8Metric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Enum8Metric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Enum8Metric& from) { Enum8Metric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Enum8Metric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.Enum8Metric"; }

 protected:
  explicit Enum8Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Enum8Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Enum8Metric& from);
  Enum8Metric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Enum8Metric&& from) noexcept
      : Enum8Metric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using EnumValue = Enum8Metric_EnumValue;

  // accessors -------------------------------------------------------
  enum : int {
    kValuesFieldNumber = 3,
    kDescriptionFieldNumber = 2,
    kUnitFieldNumber = 4,
    kOffsetFieldNumber = 1,
  };
  // map<uint32, .abacus.protobuf.Enum8Metric.EnumValue> values = 3;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  const ::google::protobuf::Map<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue>& values() const;
  ::google::protobuf::Map<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue>* PROTOBUF_NONNULL mutable_values();

  private:
  const ::google::protobuf::Map<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue>& _internal_values() const;
  ::google::protobuf::Map<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue>* PROTOBUF_NONNULL _internal_mutable_values();

  public:
  // string description = 2;
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // optional string unit = 4;
  bool has_unit() const;
  void clear_unit() ;
  const ::std::string& unit() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_unit();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_unit();
  void set_allocated_unit(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_unit() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_unit(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_unit();

  public:
  // uint32 offset = 1;
  void clear_offset() ;
  ::uint32_t offset() const;
  void set_offset(::uint32_t value);

  private:
  ::uint32_t _internal_offset() const;
  void _internal_set_offset(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:abacus.protobuf.Enum8Metric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 51,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Enum8Metric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Enum8Metric_ValuesEntry_DoNotUse, ::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        values_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    ::uint32_t offset_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Enum8Metric_class_data_;
// -------------------------------------------------------------------

class Metric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.Metric) */ {
 public:
  inline Metric() : Metric(nullptr) {}
  ~Metric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Metric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Metric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Metric(::google::protobuf::internal::ConstantInitialized);

  inline Metric(const Metric& from) : Metric(nullptr, from) {}
  inline Metric(Metric&& from) noexcept
      : Metric(nullptr, ::std::move(from)) {}
  inline Metric& operator=(const Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline Metric& operator=(Metric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Metric& default_instance() {
    return *reinterpret_cast<const Metric*>(
        &_Metric_default_instance_);
  }
  enum TypeCase {
    kConstant = 1,
    kUint64 = 2,
    kInt64 = 3,
    kUint32 = 4,
    kInt32 = 5,
    kFloat64 = 6,
    kFloat32 = 7,
    kBoolean = 8,
    kEnum8 = 9,
    TYPE_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Metric& a, Metric& b) { a.Swap(&b); }
  inline void Swap(Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Metric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Metric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Metric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Metric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Metric& from) { Metric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Metric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.Metric"; }

 protected:
  explicit Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Metric& from);
  Metric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Metric&& from) noexcept
      : Metric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConstantFieldNumber = 1,
    kUint64FieldNumber = 2,
    kInt64FieldNumber = 3,
    kUint32FieldNumber = 4,
    kInt32FieldNumber = 5,
    kFloat64FieldNumber = 6,
    kFloat32FieldNumber = 7,
    kBooleanFieldNumber = 8,
    kEnum8FieldNumber = 9,
  };
  // .abacus.protobuf.Constant constant = 1;
  bool has_constant() const;
  private:
  bool _internal_has_constant() const;

  public:
  void clear_constant() ;
  const ::abacus::protobuf::Constant& constant() const;
  [[nodiscard]] ::abacus::protobuf::Constant* PROTOBUF_NULLABLE release_constant();
  ::abacus::protobuf::Constant* PROTOBUF_NONNULL mutable_constant();
  void set_allocated_constant(::abacus::protobuf::Constant* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_constant(::abacus::protobuf::Constant* PROTOBUF_NULLABLE value);
  ::abacus::protobuf::Constant* PROTOBUF_NULLABLE unsafe_arena_release_constant();

  private:
  const ::abacus::protobuf::Constant& _internal_constant() const;
  ::abacus::protobuf::Constant* PROTOBUF_NONNULL _internal_mutable_constant();

  public:
  // .abacus.protobuf.UInt64Metric uint64 = 2;
  bool has_uint64() const;
  private:
  bool _internal_has_uint64() const;

  public:
  void clear_uint64() ;
  const ::abacus::protobuf::UInt64Metric& uint64() const;
  [[nodiscard]] ::abacus::protobuf::UInt64Metric* PROTOBUF_NULLABLE release_uint64();
  ::abacus::protobuf::UInt64Metric* PROTOBUF_NONNULL mutable_uint64();
  void set_allocated_uint64(::abacus::protobuf::UInt64Metric* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_uint64(::abacus::protobuf::UInt64Metric* PROTOBUF_NULLABLE value);
  ::abacus::protobuf::UInt64Metric* PROTOBUF_NULLABLE unsafe_arena_release_uint64();

  private:
  const ::abacus::protobuf::UInt64Metric& _internal_uint64() const;
  ::abacus::protobuf::UInt64Metric* PROTOBUF_NONNULL _internal_mutable_uint64();

  public:
  // .abacus.protobuf.Int64Metric int64 = 3;
  bool has_int64() const;
  private:
  bool _internal_has_int64() const;

  public:
  void clear_int64() ;
  const ::abacus::protobuf::Int64Metric& int64() const;
  [[nodiscard]] ::abacus::protobuf::Int64Metric* PROTOBUF_NULLABLE release_int64();
  ::abacus::protobuf::Int64Metric* PROTOBUF_NONNULL mutable_int64();
  void set_allocated_int64(::abacus::protobuf::Int64Metric* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_int64(::abacus::protobuf::Int64Metric* PROTOBUF_NULLABLE value);
  ::abacus::protobuf::Int64Metric* PROTOBUF_NULLABLE unsafe_arena_release_int64();

  private:
  const ::abacus::protobuf::Int64Metric& _internal_int64() const;
  ::abacus::protobuf::Int64Metric* PROTOBUF_NONNULL _internal_mutable_int64();

  public:
  // .abacus.protobuf.UInt32Metric uint32 = 4;
  bool has_uint32() const;
  private:
  bool _internal_has_uint32() const;

  public:
  void clear_uint32() ;
  const ::abacus::protobuf::UInt32Metric& uint32() const;
  [[nodiscard]] ::abacus::protobuf::UInt32Metric* PROTOBUF_NULLABLE release_uint32();
  ::abacus::protobuf::UInt32Metric* PROTOBUF_NONNULL mutable_uint32();
  void set_allocated_uint32(::abacus::protobuf::UInt32Metric* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_uint32(::abacus::protobuf::UInt32Metric* PROTOBUF_NULLABLE value);
  ::abacus::protobuf::UInt32Metric* PROTOBUF_NULLABLE unsafe_arena_release_uint32();

  private:
  const ::abacus::protobuf::UInt32Metric& _internal_uint32() const;
  ::abacus::protobuf::UInt32Metric* PROTOBUF_NONNULL _internal_mutable_uint32();

  public:
  // .abacus.protobuf.Int32Metric int32 = 5;
  bool has_int32() const;
  private:
  bool _internal_has_int32() const;

  public:
  void clear_int32() ;
  const ::abacus::protobuf::Int32Metric& int32() const;
  [[nodiscard]] ::abacus::protobuf::Int32Metric* PROTOBUF_NULLABLE release_int32();
  ::abacus::protobuf::Int32Metric* PROTOBUF_NONNULL mutable_int32();
  void set_allocated_int32(::abacus::protobuf::Int32Metric* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_int32(::abacus::protobuf::Int32Metric* PROTOBUF_NULLABLE value);
  ::abacus::protobuf::Int32Metric* PROTOBUF_NULLABLE unsafe_arena_release_int32();

  private:
  const ::abacus::protobuf::Int32Metric& _internal_int32() const;
  ::abacus::protobuf::Int32Metric* PROTOBUF_NONNULL _internal_mutable_int32();

  public:
  // .abacus.protobuf.Float64Metric float64 = 6;
  bool has_float64() const;
  private:
  bool _internal_has_float64() const;

  public:
  void clear_float64() ;
  const ::abacus::protobuf::Float64Metric& float64() const;
  [[nodiscard]] ::abacus::protobuf::Float64Metric* PROTOBUF_NULLABLE release_float64();
  ::abacus::protobuf::Float64Metric* PROTOBUF_NONNULL mutable_float64();
  void set_allocated_float64(::abacus::protobuf::Float64Metric* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_float64(::abacus::protobuf::Float64Metric* PROTOBUF_NULLABLE value);
  ::abacus::protobuf::Float64Metric* PROTOBUF_NULLABLE unsafe_arena_release_float64();

  private:
  const ::abacus::protobuf::Float64Metric& _internal_float64() const;
  ::abacus::protobuf::Float64Metric* PROTOBUF_NONNULL _internal_mutable_float64();

  public:
  // .abacus.protobuf.Float32Metric float32 = 7;
  bool has_float32() const;
  private:
  bool _internal_has_float32() const;

  public:
  void clear_float32() ;
  const ::abacus::protobuf::Float32Metric& float32() const;
  [[nodiscard]] ::abacus::protobuf::Float32Metric* PROTOBUF_NULLABLE release_float32();
  ::abacus::protobuf::Float32Metric* PROTOBUF_NONNULL mutable_float32();
  void set_allocated_float32(::abacus::protobuf::Float32Metric* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_float32(::abacus::protobuf::Float32Metric* PROTOBUF_NULLABLE value);
  ::abacus::protobuf::Float32Metric* PROTOBUF_NULLABLE unsafe_arena_release_float32();

  private:
  const ::abacus::protobuf::Float32Metric& _internal_float32() const;
  ::abacus::protobuf::Float32Metric* PROTOBUF_NONNULL _internal_mutable_float32();

  public:
  // .abacus.protobuf.BoolMetric boolean = 8;
  bool has_boolean() const;
  private:
  bool _internal_has_boolean() const;

  public:
  void clear_boolean() ;
  const ::abacus::protobuf::BoolMetric& boolean() const;
  [[nodiscard]] ::abacus::protobuf::BoolMetric* PROTOBUF_NULLABLE release_boolean();
  ::abacus::protobuf::BoolMetric* PROTOBUF_NONNULL mutable_boolean();
  void set_allocated_boolean(::abacus::protobuf::BoolMetric* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_boolean(::abacus::protobuf::BoolMetric* PROTOBUF_NULLABLE value);
  ::abacus::protobuf::BoolMetric* PROTOBUF_NULLABLE unsafe_arena_release_boolean();

  private:
  const ::abacus::protobuf::BoolMetric& _internal_boolean() const;
  ::abacus::protobuf::BoolMetric* PROTOBUF_NONNULL _internal_mutable_boolean();

  public:
  // .abacus.protobuf.Enum8Metric enum8 = 9;
  bool has_enum8() const;
  private:
  bool _internal_has_enum8() const;

  public:
  void clear_enum8() ;
  const ::abacus::protobuf::Enum8Metric& enum8() const;
  [[nodiscard]] ::abacus::protobuf::Enum8Metric* PROTOBUF_NULLABLE release_enum8();
  ::abacus::protobuf::Enum8Metric* PROTOBUF_NONNULL mutable_enum8();
  void set_allocated_enum8(::abacus::protobuf::Enum8Metric* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_enum8(::abacus::protobuf::Enum8Metric* PROTOBUF_NULLABLE value);
  ::abacus::protobuf::Enum8Metric* PROTOBUF_NULLABLE unsafe_arena_release_enum8();

  private:
  const ::abacus::protobuf::Enum8Metric& _internal_enum8() const;
  ::abacus::protobuf::Enum8Metric* PROTOBUF_NONNULL _internal_mutable_enum8();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:abacus.protobuf.Metric)
 private:
  class _Internal;
  void set_has_constant();
  void set_has_uint64();
  void set_has_int64();
  void set_has_uint32();
  void set_has_int32();
  void set_has_float64();
  void set_has_float32();
  void set_has_boolean();
  void set_has_enum8();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 9,
                                   9, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Metric& from_msg);
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE constant_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE uint64_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE int64_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE uint32_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE int32_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE float64_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE float32_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE boolean_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE enum8_;
    } type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Metric_class_data_;
// -------------------------------------------------------------------

class MetricsMetadata_MetricsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  MetricsMetadata_MetricsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MetricsMetadata_MetricsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit MetricsMetadata_MetricsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_MetricsMetadata_MetricsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 56,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull MetricsMetadata_MetricsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class MetricsMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:abacus.protobuf.MetricsMetadata) */ {
 public:
  inline MetricsMetadata() : MetricsMetadata(nullptr) {}
  ~MetricsMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MetricsMetadata* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MetricsMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MetricsMetadata(::google::protobuf::internal::ConstantInitialized);

  inline MetricsMetadata(const MetricsMetadata& from) : MetricsMetadata(nullptr, from) {}
  inline MetricsMetadata(MetricsMetadata&& from) noexcept
      : MetricsMetadata(nullptr, ::std::move(from)) {}
  inline MetricsMetadata& operator=(const MetricsMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricsMetadata& operator=(MetricsMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetricsMetadata& default_instance() {
    return *reinterpret_cast<const MetricsMetadata*>(
        &_MetricsMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(MetricsMetadata& a, MetricsMetadata& b) { a.Swap(&b); }
  inline void Swap(MetricsMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetricsMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetricsMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MetricsMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MetricsMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MetricsMetadata& from) { MetricsMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MetricsMetadata* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "abacus.protobuf.MetricsMetadata"; }

 protected:
  explicit MetricsMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MetricsMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MetricsMetadata& from);
  MetricsMetadata(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MetricsMetadata&& from) noexcept
      : MetricsMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetricsFieldNumber = 4,
    kProtocolVersionFieldNumber = 1,
    kEndiannessFieldNumber = 2,
    kSyncValueFieldNumber = 3,
  };
  // map<string, .abacus.protobuf.Metric> metrics = 4;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;

  public:
  void clear_metrics() ;
  const ::google::protobuf::Map<std::string, ::abacus::protobuf::Metric>& metrics() const;
  ::google::protobuf::Map<std::string, ::abacus::protobuf::Metric>* PROTOBUF_NONNULL mutable_metrics();

  private:
  const ::google::protobuf::Map<std::string, ::abacus::protobuf::Metric>& _internal_metrics() const;
  ::google::protobuf::Map<std::string, ::abacus::protobuf::Metric>* PROTOBUF_NONNULL _internal_mutable_metrics();

  public:
  // uint32 protocol_version = 1;
  void clear_protocol_version() ;
  ::uint32_t protocol_version() const;
  void set_protocol_version(::uint32_t value);

  private:
  ::uint32_t _internal_protocol_version() const;
  void _internal_set_protocol_version(::uint32_t value);

  public:
  // .abacus.protobuf.Endianness endianness = 2;
  void clear_endianness() ;
  ::abacus::protobuf::Endianness endianness() const;
  void set_endianness(::abacus::protobuf::Endianness value);

  private:
  ::abacus::protobuf::Endianness _internal_endianness() const;
  void _internal_set_endianness(::abacus::protobuf::Endianness value);

  public:
  // fixed32 sync_value = 3;
  void clear_sync_value() ;
  ::uint32_t sync_value() const;
  void set_sync_value(::uint32_t value);

  private:
  ::uint32_t _internal_sync_value() const;
  void _internal_set_sync_value(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:abacus.protobuf.MetricsMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MetricsMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<MetricsMetadata_MetricsEntry_DoNotUse, std::string, ::abacus::protobuf::Metric,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        metrics_;
    ::uint32_t protocol_version_;
    int endianness_;
    ::uint32_t sync_value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_abacus_2fprotobuf_2fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MetricsMetadata_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// UInt64Metric

// uint32 offset = 1;
inline void UInt64Metric::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t UInt64Metric::offset() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt64Metric.offset)
  return _internal_offset();
}
inline void UInt64Metric::set_offset(::uint32_t value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt64Metric.offset)
}
inline ::uint32_t UInt64Metric::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void UInt64Metric::_internal_set_offset(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// string description = 2;
inline void UInt64Metric::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& UInt64Metric::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt64Metric.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UInt64Metric::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt64Metric.description)
}
inline ::std::string* PROTOBUF_NONNULL UInt64Metric::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.UInt64Metric.description)
  return _s;
}
inline const ::std::string& UInt64Metric::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void UInt64Metric::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL UInt64Metric::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE UInt64Metric::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.UInt64Metric.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void UInt64Metric::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.UInt64Metric.description)
}

// .abacus.protobuf.Kind kind = 3;
inline void UInt64Metric::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::abacus::protobuf::Kind UInt64Metric::kind() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt64Metric.kind)
  return _internal_kind();
}
inline void UInt64Metric::set_kind(::abacus::protobuf::Kind value) {
  _internal_set_kind(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt64Metric.kind)
}
inline ::abacus::protobuf::Kind UInt64Metric::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::abacus::protobuf::Kind>(_impl_.kind_);
}
inline void UInt64Metric::_internal_set_kind(::abacus::protobuf::Kind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = value;
}

// optional string unit = 4;
inline bool UInt64Metric::has_unit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UInt64Metric::clear_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& UInt64Metric::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt64Metric.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UInt64Metric::set_unit(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt64Metric.unit)
}
inline ::std::string* PROTOBUF_NONNULL UInt64Metric::mutable_unit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.UInt64Metric.unit)
  return _s;
}
inline const ::std::string& UInt64Metric::_internal_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unit_.Get();
}
inline void UInt64Metric::_internal_set_unit(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL UInt64Metric::_internal_mutable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.unit_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE UInt64Metric::release_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.UInt64Metric.unit)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.unit_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.unit_.Set("", GetArena());
  }
  return released;
}
inline void UInt64Metric::set_allocated_unit(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.unit_.IsDefault()) {
    _impl_.unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.UInt64Metric.unit)
}

// optional uint64 min = 5;
inline bool UInt64Metric::has_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void UInt64Metric::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t UInt64Metric::min() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt64Metric.min)
  return _internal_min();
}
inline void UInt64Metric::set_min(::uint64_t value) {
  _internal_set_min(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt64Metric.min)
}
inline ::uint64_t UInt64Metric::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void UInt64Metric::_internal_set_min(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// optional uint64 max = 6;
inline bool UInt64Metric::has_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void UInt64Metric::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t UInt64Metric::max() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt64Metric.max)
  return _internal_max();
}
inline void UInt64Metric::set_max(::uint64_t value) {
  _internal_set_max(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt64Metric.max)
}
inline ::uint64_t UInt64Metric::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void UInt64Metric::_internal_set_max(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// Int64Metric

// uint32 offset = 1;
inline void Int64Metric::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Int64Metric::offset() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int64Metric.offset)
  return _internal_offset();
}
inline void Int64Metric::set_offset(::uint32_t value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int64Metric.offset)
}
inline ::uint32_t Int64Metric::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void Int64Metric::_internal_set_offset(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// string description = 2;
inline void Int64Metric::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Int64Metric::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int64Metric.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Int64Metric::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int64Metric.description)
}
inline ::std::string* PROTOBUF_NONNULL Int64Metric::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Int64Metric.description)
  return _s;
}
inline const ::std::string& Int64Metric::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Int64Metric::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Int64Metric::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Int64Metric::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Int64Metric.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void Int64Metric::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Int64Metric.description)
}

// .abacus.protobuf.Kind kind = 3;
inline void Int64Metric::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::abacus::protobuf::Kind Int64Metric::kind() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int64Metric.kind)
  return _internal_kind();
}
inline void Int64Metric::set_kind(::abacus::protobuf::Kind value) {
  _internal_set_kind(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int64Metric.kind)
}
inline ::abacus::protobuf::Kind Int64Metric::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::abacus::protobuf::Kind>(_impl_.kind_);
}
inline void Int64Metric::_internal_set_kind(::abacus::protobuf::Kind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = value;
}

// optional string unit = 4;
inline bool Int64Metric::has_unit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Int64Metric::clear_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Int64Metric::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int64Metric.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Int64Metric::set_unit(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int64Metric.unit)
}
inline ::std::string* PROTOBUF_NONNULL Int64Metric::mutable_unit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Int64Metric.unit)
  return _s;
}
inline const ::std::string& Int64Metric::_internal_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unit_.Get();
}
inline void Int64Metric::_internal_set_unit(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Int64Metric::_internal_mutable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.unit_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Int64Metric::release_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Int64Metric.unit)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.unit_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.unit_.Set("", GetArena());
  }
  return released;
}
inline void Int64Metric::set_allocated_unit(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.unit_.IsDefault()) {
    _impl_.unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Int64Metric.unit)
}

// optional int64 min = 5;
inline bool Int64Metric::has_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Int64Metric::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t Int64Metric::min() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int64Metric.min)
  return _internal_min();
}
inline void Int64Metric::set_min(::int64_t value) {
  _internal_set_min(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int64Metric.min)
}
inline ::int64_t Int64Metric::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void Int64Metric::_internal_set_min(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// optional int64 max = 6;
inline bool Int64Metric::has_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Int64Metric::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t Int64Metric::max() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int64Metric.max)
  return _internal_max();
}
inline void Int64Metric::set_max(::int64_t value) {
  _internal_set_max(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int64Metric.max)
}
inline ::int64_t Int64Metric::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void Int64Metric::_internal_set_max(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// UInt32Metric

// uint32 offset = 1;
inline void UInt32Metric::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t UInt32Metric::offset() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt32Metric.offset)
  return _internal_offset();
}
inline void UInt32Metric::set_offset(::uint32_t value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt32Metric.offset)
}
inline ::uint32_t UInt32Metric::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void UInt32Metric::_internal_set_offset(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// string description = 2;
inline void UInt32Metric::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& UInt32Metric::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt32Metric.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UInt32Metric::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt32Metric.description)
}
inline ::std::string* PROTOBUF_NONNULL UInt32Metric::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.UInt32Metric.description)
  return _s;
}
inline const ::std::string& UInt32Metric::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void UInt32Metric::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL UInt32Metric::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE UInt32Metric::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.UInt32Metric.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void UInt32Metric::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.UInt32Metric.description)
}

// .abacus.protobuf.Kind kind = 3;
inline void UInt32Metric::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::abacus::protobuf::Kind UInt32Metric::kind() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt32Metric.kind)
  return _internal_kind();
}
inline void UInt32Metric::set_kind(::abacus::protobuf::Kind value) {
  _internal_set_kind(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt32Metric.kind)
}
inline ::abacus::protobuf::Kind UInt32Metric::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::abacus::protobuf::Kind>(_impl_.kind_);
}
inline void UInt32Metric::_internal_set_kind(::abacus::protobuf::Kind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = value;
}

// optional string unit = 4;
inline bool UInt32Metric::has_unit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UInt32Metric::clear_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& UInt32Metric::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt32Metric.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UInt32Metric::set_unit(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt32Metric.unit)
}
inline ::std::string* PROTOBUF_NONNULL UInt32Metric::mutable_unit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.UInt32Metric.unit)
  return _s;
}
inline const ::std::string& UInt32Metric::_internal_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unit_.Get();
}
inline void UInt32Metric::_internal_set_unit(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL UInt32Metric::_internal_mutable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.unit_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE UInt32Metric::release_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.UInt32Metric.unit)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.unit_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.unit_.Set("", GetArena());
  }
  return released;
}
inline void UInt32Metric::set_allocated_unit(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.unit_.IsDefault()) {
    _impl_.unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.UInt32Metric.unit)
}

// optional uint32 min = 5;
inline bool UInt32Metric::has_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void UInt32Metric::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t UInt32Metric::min() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt32Metric.min)
  return _internal_min();
}
inline void UInt32Metric::set_min(::uint32_t value) {
  _internal_set_min(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt32Metric.min)
}
inline ::uint32_t UInt32Metric::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void UInt32Metric::_internal_set_min(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// optional uint32 max = 6;
inline bool UInt32Metric::has_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void UInt32Metric::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t UInt32Metric::max() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.UInt32Metric.max)
  return _internal_max();
}
inline void UInt32Metric::set_max(::uint32_t value) {
  _internal_set_max(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.UInt32Metric.max)
}
inline ::uint32_t UInt32Metric::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void UInt32Metric::_internal_set_max(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// Int32Metric

// uint32 offset = 1;
inline void Int32Metric::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Int32Metric::offset() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int32Metric.offset)
  return _internal_offset();
}
inline void Int32Metric::set_offset(::uint32_t value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int32Metric.offset)
}
inline ::uint32_t Int32Metric::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void Int32Metric::_internal_set_offset(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// string description = 2;
inline void Int32Metric::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Int32Metric::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int32Metric.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Int32Metric::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int32Metric.description)
}
inline ::std::string* PROTOBUF_NONNULL Int32Metric::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Int32Metric.description)
  return _s;
}
inline const ::std::string& Int32Metric::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Int32Metric::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Int32Metric::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Int32Metric::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Int32Metric.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void Int32Metric::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Int32Metric.description)
}

// .abacus.protobuf.Kind kind = 3;
inline void Int32Metric::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::abacus::protobuf::Kind Int32Metric::kind() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int32Metric.kind)
  return _internal_kind();
}
inline void Int32Metric::set_kind(::abacus::protobuf::Kind value) {
  _internal_set_kind(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int32Metric.kind)
}
inline ::abacus::protobuf::Kind Int32Metric::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::abacus::protobuf::Kind>(_impl_.kind_);
}
inline void Int32Metric::_internal_set_kind(::abacus::protobuf::Kind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = value;
}

// optional string unit = 4;
inline bool Int32Metric::has_unit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Int32Metric::clear_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Int32Metric::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int32Metric.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Int32Metric::set_unit(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int32Metric.unit)
}
inline ::std::string* PROTOBUF_NONNULL Int32Metric::mutable_unit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Int32Metric.unit)
  return _s;
}
inline const ::std::string& Int32Metric::_internal_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unit_.Get();
}
inline void Int32Metric::_internal_set_unit(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Int32Metric::_internal_mutable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.unit_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Int32Metric::release_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Int32Metric.unit)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.unit_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.unit_.Set("", GetArena());
  }
  return released;
}
inline void Int32Metric::set_allocated_unit(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.unit_.IsDefault()) {
    _impl_.unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Int32Metric.unit)
}

// optional int32 min = 5;
inline bool Int32Metric::has_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Int32Metric::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t Int32Metric::min() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int32Metric.min)
  return _internal_min();
}
inline void Int32Metric::set_min(::int32_t value) {
  _internal_set_min(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int32Metric.min)
}
inline ::int32_t Int32Metric::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void Int32Metric::_internal_set_min(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// optional int32 max = 6;
inline bool Int32Metric::has_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Int32Metric::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t Int32Metric::max() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Int32Metric.max)
  return _internal_max();
}
inline void Int32Metric::set_max(::int32_t value) {
  _internal_set_max(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Int32Metric.max)
}
inline ::int32_t Int32Metric::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void Int32Metric::_internal_set_max(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// Float64Metric

// uint32 offset = 1;
inline void Float64Metric::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Float64Metric::offset() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float64Metric.offset)
  return _internal_offset();
}
inline void Float64Metric::set_offset(::uint32_t value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float64Metric.offset)
}
inline ::uint32_t Float64Metric::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void Float64Metric::_internal_set_offset(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// string description = 2;
inline void Float64Metric::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Float64Metric::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float64Metric.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Float64Metric::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float64Metric.description)
}
inline ::std::string* PROTOBUF_NONNULL Float64Metric::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Float64Metric.description)
  return _s;
}
inline const ::std::string& Float64Metric::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Float64Metric::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Float64Metric::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Float64Metric::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Float64Metric.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void Float64Metric::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Float64Metric.description)
}

// .abacus.protobuf.Kind kind = 3;
inline void Float64Metric::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::abacus::protobuf::Kind Float64Metric::kind() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float64Metric.kind)
  return _internal_kind();
}
inline void Float64Metric::set_kind(::abacus::protobuf::Kind value) {
  _internal_set_kind(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float64Metric.kind)
}
inline ::abacus::protobuf::Kind Float64Metric::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::abacus::protobuf::Kind>(_impl_.kind_);
}
inline void Float64Metric::_internal_set_kind(::abacus::protobuf::Kind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = value;
}

// optional string unit = 4;
inline bool Float64Metric::has_unit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Float64Metric::clear_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Float64Metric::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float64Metric.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Float64Metric::set_unit(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float64Metric.unit)
}
inline ::std::string* PROTOBUF_NONNULL Float64Metric::mutable_unit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Float64Metric.unit)
  return _s;
}
inline const ::std::string& Float64Metric::_internal_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unit_.Get();
}
inline void Float64Metric::_internal_set_unit(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Float64Metric::_internal_mutable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.unit_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Float64Metric::release_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Float64Metric.unit)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.unit_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.unit_.Set("", GetArena());
  }
  return released;
}
inline void Float64Metric::set_allocated_unit(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.unit_.IsDefault()) {
    _impl_.unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Float64Metric.unit)
}

// optional double min = 5;
inline bool Float64Metric::has_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Float64Metric::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double Float64Metric::min() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float64Metric.min)
  return _internal_min();
}
inline void Float64Metric::set_min(double value) {
  _internal_set_min(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float64Metric.min)
}
inline double Float64Metric::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void Float64Metric::_internal_set_min(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// optional double max = 6;
inline bool Float64Metric::has_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Float64Metric::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double Float64Metric::max() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float64Metric.max)
  return _internal_max();
}
inline void Float64Metric::set_max(double value) {
  _internal_set_max(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float64Metric.max)
}
inline double Float64Metric::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void Float64Metric::_internal_set_max(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// Float32Metric

// uint32 offset = 1;
inline void Float32Metric::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Float32Metric::offset() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float32Metric.offset)
  return _internal_offset();
}
inline void Float32Metric::set_offset(::uint32_t value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float32Metric.offset)
}
inline ::uint32_t Float32Metric::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void Float32Metric::_internal_set_offset(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// string description = 2;
inline void Float32Metric::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Float32Metric::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float32Metric.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Float32Metric::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float32Metric.description)
}
inline ::std::string* PROTOBUF_NONNULL Float32Metric::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Float32Metric.description)
  return _s;
}
inline const ::std::string& Float32Metric::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Float32Metric::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Float32Metric::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Float32Metric::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Float32Metric.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void Float32Metric::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Float32Metric.description)
}

// .abacus.protobuf.Kind kind = 3;
inline void Float32Metric::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::abacus::protobuf::Kind Float32Metric::kind() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float32Metric.kind)
  return _internal_kind();
}
inline void Float32Metric::set_kind(::abacus::protobuf::Kind value) {
  _internal_set_kind(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float32Metric.kind)
}
inline ::abacus::protobuf::Kind Float32Metric::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::abacus::protobuf::Kind>(_impl_.kind_);
}
inline void Float32Metric::_internal_set_kind(::abacus::protobuf::Kind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = value;
}

// optional string unit = 4;
inline bool Float32Metric::has_unit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Float32Metric::clear_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Float32Metric::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float32Metric.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Float32Metric::set_unit(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float32Metric.unit)
}
inline ::std::string* PROTOBUF_NONNULL Float32Metric::mutable_unit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Float32Metric.unit)
  return _s;
}
inline const ::std::string& Float32Metric::_internal_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unit_.Get();
}
inline void Float32Metric::_internal_set_unit(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Float32Metric::_internal_mutable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.unit_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Float32Metric::release_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Float32Metric.unit)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.unit_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.unit_.Set("", GetArena());
  }
  return released;
}
inline void Float32Metric::set_allocated_unit(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.unit_.IsDefault()) {
    _impl_.unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Float32Metric.unit)
}

// optional float min = 5;
inline bool Float32Metric::has_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Float32Metric::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float Float32Metric::min() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float32Metric.min)
  return _internal_min();
}
inline void Float32Metric::set_min(float value) {
  _internal_set_min(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float32Metric.min)
}
inline float Float32Metric::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void Float32Metric::_internal_set_min(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// optional float max = 6;
inline bool Float32Metric::has_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Float32Metric::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float Float32Metric::max() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Float32Metric.max)
  return _internal_max();
}
inline void Float32Metric::set_max(float value) {
  _internal_set_max(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Float32Metric.max)
}
inline float Float32Metric::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void Float32Metric::_internal_set_max(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// BoolMetric

// uint32 offset = 1;
inline void BoolMetric::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t BoolMetric::offset() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.BoolMetric.offset)
  return _internal_offset();
}
inline void BoolMetric::set_offset(::uint32_t value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.BoolMetric.offset)
}
inline ::uint32_t BoolMetric::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void BoolMetric::_internal_set_offset(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// string description = 2;
inline void BoolMetric::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& BoolMetric::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.BoolMetric.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BoolMetric::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.BoolMetric.description)
}
inline ::std::string* PROTOBUF_NONNULL BoolMetric::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.BoolMetric.description)
  return _s;
}
inline const ::std::string& BoolMetric::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void BoolMetric::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BoolMetric::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BoolMetric::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.BoolMetric.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void BoolMetric::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.BoolMetric.description)
}

// optional string unit = 3;
inline bool BoolMetric::has_unit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BoolMetric::clear_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& BoolMetric::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.BoolMetric.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BoolMetric::set_unit(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.BoolMetric.unit)
}
inline ::std::string* PROTOBUF_NONNULL BoolMetric::mutable_unit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.BoolMetric.unit)
  return _s;
}
inline const ::std::string& BoolMetric::_internal_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unit_.Get();
}
inline void BoolMetric::_internal_set_unit(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BoolMetric::_internal_mutable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.unit_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BoolMetric::release_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.BoolMetric.unit)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.unit_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.unit_.Set("", GetArena());
  }
  return released;
}
inline void BoolMetric::set_allocated_unit(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.unit_.IsDefault()) {
    _impl_.unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.BoolMetric.unit)
}

// -------------------------------------------------------------------

// Enum8Metric_EnumValue

// string name = 1;
inline void Enum8Metric_EnumValue::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Enum8Metric_EnumValue::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Enum8Metric.EnumValue.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Enum8Metric_EnumValue::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Enum8Metric.EnumValue.name)
}
inline ::std::string* PROTOBUF_NONNULL Enum8Metric_EnumValue::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Enum8Metric.EnumValue.name)
  return _s;
}
inline const ::std::string& Enum8Metric_EnumValue::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Enum8Metric_EnumValue::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Enum8Metric_EnumValue::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Enum8Metric_EnumValue::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Enum8Metric.EnumValue.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Enum8Metric_EnumValue::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Enum8Metric.EnumValue.name)
}

// optional string description = 2;
inline bool Enum8Metric_EnumValue::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Enum8Metric_EnumValue::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Enum8Metric_EnumValue::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Enum8Metric.EnumValue.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Enum8Metric_EnumValue::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Enum8Metric.EnumValue.description)
}
inline ::std::string* PROTOBUF_NONNULL Enum8Metric_EnumValue::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Enum8Metric.EnumValue.description)
  return _s;
}
inline const ::std::string& Enum8Metric_EnumValue::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Enum8Metric_EnumValue::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Enum8Metric_EnumValue::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Enum8Metric_EnumValue::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Enum8Metric.EnumValue.description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void Enum8Metric_EnumValue::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Enum8Metric.EnumValue.description)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Enum8Metric

// uint32 offset = 1;
inline void Enum8Metric::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Enum8Metric::offset() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Enum8Metric.offset)
  return _internal_offset();
}
inline void Enum8Metric::set_offset(::uint32_t value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Enum8Metric.offset)
}
inline ::uint32_t Enum8Metric::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void Enum8Metric::_internal_set_offset(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// string description = 2;
inline void Enum8Metric::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Enum8Metric::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Enum8Metric.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Enum8Metric::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Enum8Metric.description)
}
inline ::std::string* PROTOBUF_NONNULL Enum8Metric::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Enum8Metric.description)
  return _s;
}
inline const ::std::string& Enum8Metric::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Enum8Metric::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Enum8Metric::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Enum8Metric::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Enum8Metric.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void Enum8Metric::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Enum8Metric.description)
}

// map<uint32, .abacus.protobuf.Enum8Metric.EnumValue> values = 3;
inline int Enum8Metric::_internal_values_size() const {
  return _internal_values().size();
}
inline int Enum8Metric::values_size() const {
  return _internal_values_size();
}
inline void Enum8Metric::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue>& Enum8Metric::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue>& Enum8Metric::values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:abacus.protobuf.Enum8Metric.values)
  return _internal_values();
}
inline ::google::protobuf::Map<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue>* PROTOBUF_NONNULL Enum8Metric::_internal_mutable_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.values_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::abacus::protobuf::Enum8Metric_EnumValue>* PROTOBUF_NONNULL Enum8Metric::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:abacus.protobuf.Enum8Metric.values)
  return _internal_mutable_values();
}

// optional string unit = 4;
inline bool Enum8Metric::has_unit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Enum8Metric::clear_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Enum8Metric::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Enum8Metric.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Enum8Metric::set_unit(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Enum8Metric.unit)
}
inline ::std::string* PROTOBUF_NONNULL Enum8Metric::mutable_unit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Enum8Metric.unit)
  return _s;
}
inline const ::std::string& Enum8Metric::_internal_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unit_.Get();
}
inline void Enum8Metric::_internal_set_unit(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Enum8Metric::_internal_mutable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.unit_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Enum8Metric::release_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Enum8Metric.unit)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.unit_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.unit_.Set("", GetArena());
  }
  return released;
}
inline void Enum8Metric::set_allocated_unit(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.unit_.IsDefault()) {
    _impl_.unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Enum8Metric.unit)
}

// -------------------------------------------------------------------

// Constant

// uint64 uint64 = 1;
inline bool Constant::has_uint64() const {
  return value_case() == kUint64;
}
inline void Constant::set_has_uint64() {
  _impl_._oneof_case_[0] = kUint64;
}
inline void Constant::clear_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kUint64) {
    _impl_.value_.uint64_ = ::uint64_t{0u};
    clear_has_value();
  }
}
inline ::uint64_t Constant::uint64() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Constant.uint64)
  return _internal_uint64();
}
inline void Constant::set_uint64(::uint64_t value) {
  if (value_case() != kUint64) {
    clear_value();
    set_has_uint64();
  }
  _impl_.value_.uint64_ = value;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Constant.uint64)
}
inline ::uint64_t Constant::_internal_uint64() const {
  if (value_case() == kUint64) {
    return _impl_.value_.uint64_;
  }
  return ::uint64_t{0u};
}

// int64 int64 = 2;
inline bool Constant::has_int64() const {
  return value_case() == kInt64;
}
inline void Constant::set_has_int64() {
  _impl_._oneof_case_[0] = kInt64;
}
inline void Constant::clear_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kInt64) {
    _impl_.value_.int64_ = ::int64_t{0};
    clear_has_value();
  }
}
inline ::int64_t Constant::int64() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Constant.int64)
  return _internal_int64();
}
inline void Constant::set_int64(::int64_t value) {
  if (value_case() != kInt64) {
    clear_value();
    set_has_int64();
  }
  _impl_.value_.int64_ = value;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Constant.int64)
}
inline ::int64_t Constant::_internal_int64() const {
  if (value_case() == kInt64) {
    return _impl_.value_.int64_;
  }
  return ::int64_t{0};
}

// double float64 = 3;
inline bool Constant::has_float64() const {
  return value_case() == kFloat64;
}
inline void Constant::set_has_float64() {
  _impl_._oneof_case_[0] = kFloat64;
}
inline void Constant::clear_float64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kFloat64) {
    _impl_.value_.float64_ = 0;
    clear_has_value();
  }
}
inline double Constant::float64() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Constant.float64)
  return _internal_float64();
}
inline void Constant::set_float64(double value) {
  if (value_case() != kFloat64) {
    clear_value();
    set_has_float64();
  }
  _impl_.value_.float64_ = value;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Constant.float64)
}
inline double Constant::_internal_float64() const {
  if (value_case() == kFloat64) {
    return _impl_.value_.float64_;
  }
  return 0;
}

// bool boolean = 4;
inline bool Constant::has_boolean() const {
  return value_case() == kBoolean;
}
inline void Constant::set_has_boolean() {
  _impl_._oneof_case_[0] = kBoolean;
}
inline void Constant::clear_boolean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kBoolean) {
    _impl_.value_.boolean_ = false;
    clear_has_value();
  }
}
inline bool Constant::boolean() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Constant.boolean)
  return _internal_boolean();
}
inline void Constant::set_boolean(bool value) {
  if (value_case() != kBoolean) {
    clear_value();
    set_has_boolean();
  }
  _impl_.value_.boolean_ = value;
  // @@protoc_insertion_point(field_set:abacus.protobuf.Constant.boolean)
}
inline bool Constant::_internal_boolean() const {
  if (value_case() == kBoolean) {
    return _impl_.value_.boolean_;
  }
  return false;
}

// string string = 5;
inline bool Constant::has_string() const {
  return value_case() == kString;
}
inline void Constant::set_has_string() {
  _impl_._oneof_case_[0] = kString;
}
inline void Constant::clear_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kString) {
    _impl_.value_.string_.Destroy();
    clear_has_value();
  }
}
inline const ::std::string& Constant::string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Constant.string)
  return _internal_string();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Constant::set_string(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kString) {
    clear_value();

    set_has_string();
    _impl_.value_.string_.InitDefault();
  }
  _impl_.value_.string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Constant.string)
}
inline ::std::string* PROTOBUF_NONNULL Constant::mutable_string()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_string();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Constant.string)
  return _s;
}
inline const ::std::string& Constant::_internal_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kString) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.string_.Get();
}
inline void Constant::_internal_set_string(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kString) {
    clear_value();

    set_has_string();
    _impl_.value_.string_.InitDefault();
  }
  _impl_.value_.string_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Constant::_internal_mutable_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kString) {
    clear_value();

    set_has_string();
    _impl_.value_.string_.InitDefault();
  }
  return _impl_.value_.string_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Constant::release_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Constant.string)
  if (value_case() != kString) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.string_.Release();
}
inline void Constant::set_allocated_string(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_string();
    _impl_.value_.string_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Constant.string)
}

// string description = 6;
inline void Constant::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Constant::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Constant.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Constant::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Constant.description)
}
inline ::std::string* PROTOBUF_NONNULL Constant::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Constant.description)
  return _s;
}
inline const ::std::string& Constant::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Constant::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Constant::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Constant::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Constant.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void Constant::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Constant.description)
}

// optional string unit = 7;
inline bool Constant::has_unit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Constant::clear_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Constant::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Constant.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Constant::set_unit(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:abacus.protobuf.Constant.unit)
}
inline ::std::string* PROTOBUF_NONNULL Constant::mutable_unit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Constant.unit)
  return _s;
}
inline const ::std::string& Constant::_internal_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unit_.Get();
}
inline void Constant::_internal_set_unit(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unit_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Constant::_internal_mutable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.unit_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Constant::release_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:abacus.protobuf.Constant.unit)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.unit_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.unit_.Set("", GetArena());
  }
  return released;
}
inline void Constant::set_allocated_unit(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.unit_.IsDefault()) {
    _impl_.unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:abacus.protobuf.Constant.unit)
}

inline bool Constant::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Constant::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline Constant::ValueCase Constant::value_case() const {
  return Constant::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Metric

// .abacus.protobuf.Constant constant = 1;
inline bool Metric::has_constant() const {
  return type_case() == kConstant;
}
inline bool Metric::_internal_has_constant() const {
  return type_case() == kConstant;
}
inline void Metric::set_has_constant() {
  _impl_._oneof_case_[0] = kConstant;
}
inline void Metric::clear_constant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kConstant) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.constant_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.constant_);
    }
    clear_has_type();
  }
}
inline ::abacus::protobuf::Constant* PROTOBUF_NULLABLE Metric::release_constant() {
  // @@protoc_insertion_point(field_release:abacus.protobuf.Metric.constant)
  if (type_case() == kConstant) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Constant*>(_impl_.type_.constant_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::abacus::protobuf::Constant& Metric::_internal_constant() const {
  return type_case() == kConstant ? *reinterpret_cast<::abacus::protobuf::Constant*>(_impl_.type_.constant_) : reinterpret_cast<::abacus::protobuf::Constant&>(::abacus::protobuf::_Constant_default_instance_);
}
inline const ::abacus::protobuf::Constant& Metric::constant() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Metric.constant)
  return _internal_constant();
}
inline ::abacus::protobuf::Constant* PROTOBUF_NULLABLE Metric::unsafe_arena_release_constant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:abacus.protobuf.Metric.constant)
  if (type_case() == kConstant) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Constant*>(_impl_.type_.constant_);
    _impl_.type_.constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Metric::unsafe_arena_set_allocated_constant(
    ::abacus::protobuf::Constant* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_constant();
    _impl_.type_.constant_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:abacus.protobuf.Metric.constant)
}
inline ::abacus::protobuf::Constant* PROTOBUF_NONNULL Metric::_internal_mutable_constant() {
  if (type_case() != kConstant) {
    clear_type();
    set_has_constant();
    _impl_.type_.constant_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::abacus::protobuf::Constant>(GetArena()));
  }
  return reinterpret_cast<::abacus::protobuf::Constant*>(_impl_.type_.constant_);
}
inline ::abacus::protobuf::Constant* PROTOBUF_NONNULL Metric::mutable_constant()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::abacus::protobuf::Constant* _msg = _internal_mutable_constant();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Metric.constant)
  return _msg;
}

// .abacus.protobuf.UInt64Metric uint64 = 2;
inline bool Metric::has_uint64() const {
  return type_case() == kUint64;
}
inline bool Metric::_internal_has_uint64() const {
  return type_case() == kUint64;
}
inline void Metric::set_has_uint64() {
  _impl_._oneof_case_[0] = kUint64;
}
inline void Metric::clear_uint64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kUint64) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.uint64_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.uint64_);
    }
    clear_has_type();
  }
}
inline ::abacus::protobuf::UInt64Metric* PROTOBUF_NULLABLE Metric::release_uint64() {
  // @@protoc_insertion_point(field_release:abacus.protobuf.Metric.uint64)
  if (type_case() == kUint64) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::UInt64Metric*>(_impl_.type_.uint64_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.uint64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::abacus::protobuf::UInt64Metric& Metric::_internal_uint64() const {
  return type_case() == kUint64 ? *reinterpret_cast<::abacus::protobuf::UInt64Metric*>(_impl_.type_.uint64_) : reinterpret_cast<::abacus::protobuf::UInt64Metric&>(::abacus::protobuf::_UInt64Metric_default_instance_);
}
inline const ::abacus::protobuf::UInt64Metric& Metric::uint64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Metric.uint64)
  return _internal_uint64();
}
inline ::abacus::protobuf::UInt64Metric* PROTOBUF_NULLABLE Metric::unsafe_arena_release_uint64() {
  // @@protoc_insertion_point(field_unsafe_arena_release:abacus.protobuf.Metric.uint64)
  if (type_case() == kUint64) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::UInt64Metric*>(_impl_.type_.uint64_);
    _impl_.type_.uint64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Metric::unsafe_arena_set_allocated_uint64(
    ::abacus::protobuf::UInt64Metric* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_uint64();
    _impl_.type_.uint64_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:abacus.protobuf.Metric.uint64)
}
inline ::abacus::protobuf::UInt64Metric* PROTOBUF_NONNULL Metric::_internal_mutable_uint64() {
  if (type_case() != kUint64) {
    clear_type();
    set_has_uint64();
    _impl_.type_.uint64_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::abacus::protobuf::UInt64Metric>(GetArena()));
  }
  return reinterpret_cast<::abacus::protobuf::UInt64Metric*>(_impl_.type_.uint64_);
}
inline ::abacus::protobuf::UInt64Metric* PROTOBUF_NONNULL Metric::mutable_uint64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::abacus::protobuf::UInt64Metric* _msg = _internal_mutable_uint64();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Metric.uint64)
  return _msg;
}

// .abacus.protobuf.Int64Metric int64 = 3;
inline bool Metric::has_int64() const {
  return type_case() == kInt64;
}
inline bool Metric::_internal_has_int64() const {
  return type_case() == kInt64;
}
inline void Metric::set_has_int64() {
  _impl_._oneof_case_[0] = kInt64;
}
inline void Metric::clear_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kInt64) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.int64_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.int64_);
    }
    clear_has_type();
  }
}
inline ::abacus::protobuf::Int64Metric* PROTOBUF_NULLABLE Metric::release_int64() {
  // @@protoc_insertion_point(field_release:abacus.protobuf.Metric.int64)
  if (type_case() == kInt64) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Int64Metric*>(_impl_.type_.int64_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.int64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::abacus::protobuf::Int64Metric& Metric::_internal_int64() const {
  return type_case() == kInt64 ? *reinterpret_cast<::abacus::protobuf::Int64Metric*>(_impl_.type_.int64_) : reinterpret_cast<::abacus::protobuf::Int64Metric&>(::abacus::protobuf::_Int64Metric_default_instance_);
}
inline const ::abacus::protobuf::Int64Metric& Metric::int64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Metric.int64)
  return _internal_int64();
}
inline ::abacus::protobuf::Int64Metric* PROTOBUF_NULLABLE Metric::unsafe_arena_release_int64() {
  // @@protoc_insertion_point(field_unsafe_arena_release:abacus.protobuf.Metric.int64)
  if (type_case() == kInt64) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Int64Metric*>(_impl_.type_.int64_);
    _impl_.type_.int64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Metric::unsafe_arena_set_allocated_int64(
    ::abacus::protobuf::Int64Metric* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_int64();
    _impl_.type_.int64_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:abacus.protobuf.Metric.int64)
}
inline ::abacus::protobuf::Int64Metric* PROTOBUF_NONNULL Metric::_internal_mutable_int64() {
  if (type_case() != kInt64) {
    clear_type();
    set_has_int64();
    _impl_.type_.int64_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::abacus::protobuf::Int64Metric>(GetArena()));
  }
  return reinterpret_cast<::abacus::protobuf::Int64Metric*>(_impl_.type_.int64_);
}
inline ::abacus::protobuf::Int64Metric* PROTOBUF_NONNULL Metric::mutable_int64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::abacus::protobuf::Int64Metric* _msg = _internal_mutable_int64();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Metric.int64)
  return _msg;
}

// .abacus.protobuf.UInt32Metric uint32 = 4;
inline bool Metric::has_uint32() const {
  return type_case() == kUint32;
}
inline bool Metric::_internal_has_uint32() const {
  return type_case() == kUint32;
}
inline void Metric::set_has_uint32() {
  _impl_._oneof_case_[0] = kUint32;
}
inline void Metric::clear_uint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kUint32) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.uint32_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.uint32_);
    }
    clear_has_type();
  }
}
inline ::abacus::protobuf::UInt32Metric* PROTOBUF_NULLABLE Metric::release_uint32() {
  // @@protoc_insertion_point(field_release:abacus.protobuf.Metric.uint32)
  if (type_case() == kUint32) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::UInt32Metric*>(_impl_.type_.uint32_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.uint32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::abacus::protobuf::UInt32Metric& Metric::_internal_uint32() const {
  return type_case() == kUint32 ? *reinterpret_cast<::abacus::protobuf::UInt32Metric*>(_impl_.type_.uint32_) : reinterpret_cast<::abacus::protobuf::UInt32Metric&>(::abacus::protobuf::_UInt32Metric_default_instance_);
}
inline const ::abacus::protobuf::UInt32Metric& Metric::uint32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Metric.uint32)
  return _internal_uint32();
}
inline ::abacus::protobuf::UInt32Metric* PROTOBUF_NULLABLE Metric::unsafe_arena_release_uint32() {
  // @@protoc_insertion_point(field_unsafe_arena_release:abacus.protobuf.Metric.uint32)
  if (type_case() == kUint32) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::UInt32Metric*>(_impl_.type_.uint32_);
    _impl_.type_.uint32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Metric::unsafe_arena_set_allocated_uint32(
    ::abacus::protobuf::UInt32Metric* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_uint32();
    _impl_.type_.uint32_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:abacus.protobuf.Metric.uint32)
}
inline ::abacus::protobuf::UInt32Metric* PROTOBUF_NONNULL Metric::_internal_mutable_uint32() {
  if (type_case() != kUint32) {
    clear_type();
    set_has_uint32();
    _impl_.type_.uint32_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::abacus::protobuf::UInt32Metric>(GetArena()));
  }
  return reinterpret_cast<::abacus::protobuf::UInt32Metric*>(_impl_.type_.uint32_);
}
inline ::abacus::protobuf::UInt32Metric* PROTOBUF_NONNULL Metric::mutable_uint32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::abacus::protobuf::UInt32Metric* _msg = _internal_mutable_uint32();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Metric.uint32)
  return _msg;
}

// .abacus.protobuf.Int32Metric int32 = 5;
inline bool Metric::has_int32() const {
  return type_case() == kInt32;
}
inline bool Metric::_internal_has_int32() const {
  return type_case() == kInt32;
}
inline void Metric::set_has_int32() {
  _impl_._oneof_case_[0] = kInt32;
}
inline void Metric::clear_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kInt32) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.int32_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.int32_);
    }
    clear_has_type();
  }
}
inline ::abacus::protobuf::Int32Metric* PROTOBUF_NULLABLE Metric::release_int32() {
  // @@protoc_insertion_point(field_release:abacus.protobuf.Metric.int32)
  if (type_case() == kInt32) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Int32Metric*>(_impl_.type_.int32_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.int32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::abacus::protobuf::Int32Metric& Metric::_internal_int32() const {
  return type_case() == kInt32 ? *reinterpret_cast<::abacus::protobuf::Int32Metric*>(_impl_.type_.int32_) : reinterpret_cast<::abacus::protobuf::Int32Metric&>(::abacus::protobuf::_Int32Metric_default_instance_);
}
inline const ::abacus::protobuf::Int32Metric& Metric::int32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Metric.int32)
  return _internal_int32();
}
inline ::abacus::protobuf::Int32Metric* PROTOBUF_NULLABLE Metric::unsafe_arena_release_int32() {
  // @@protoc_insertion_point(field_unsafe_arena_release:abacus.protobuf.Metric.int32)
  if (type_case() == kInt32) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Int32Metric*>(_impl_.type_.int32_);
    _impl_.type_.int32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Metric::unsafe_arena_set_allocated_int32(
    ::abacus::protobuf::Int32Metric* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_int32();
    _impl_.type_.int32_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:abacus.protobuf.Metric.int32)
}
inline ::abacus::protobuf::Int32Metric* PROTOBUF_NONNULL Metric::_internal_mutable_int32() {
  if (type_case() != kInt32) {
    clear_type();
    set_has_int32();
    _impl_.type_.int32_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::abacus::protobuf::Int32Metric>(GetArena()));
  }
  return reinterpret_cast<::abacus::protobuf::Int32Metric*>(_impl_.type_.int32_);
}
inline ::abacus::protobuf::Int32Metric* PROTOBUF_NONNULL Metric::mutable_int32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::abacus::protobuf::Int32Metric* _msg = _internal_mutable_int32();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Metric.int32)
  return _msg;
}

// .abacus.protobuf.Float64Metric float64 = 6;
inline bool Metric::has_float64() const {
  return type_case() == kFloat64;
}
inline bool Metric::_internal_has_float64() const {
  return type_case() == kFloat64;
}
inline void Metric::set_has_float64() {
  _impl_._oneof_case_[0] = kFloat64;
}
inline void Metric::clear_float64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kFloat64) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.float64_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.float64_);
    }
    clear_has_type();
  }
}
inline ::abacus::protobuf::Float64Metric* PROTOBUF_NULLABLE Metric::release_float64() {
  // @@protoc_insertion_point(field_release:abacus.protobuf.Metric.float64)
  if (type_case() == kFloat64) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Float64Metric*>(_impl_.type_.float64_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.float64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::abacus::protobuf::Float64Metric& Metric::_internal_float64() const {
  return type_case() == kFloat64 ? *reinterpret_cast<::abacus::protobuf::Float64Metric*>(_impl_.type_.float64_) : reinterpret_cast<::abacus::protobuf::Float64Metric&>(::abacus::protobuf::_Float64Metric_default_instance_);
}
inline const ::abacus::protobuf::Float64Metric& Metric::float64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Metric.float64)
  return _internal_float64();
}
inline ::abacus::protobuf::Float64Metric* PROTOBUF_NULLABLE Metric::unsafe_arena_release_float64() {
  // @@protoc_insertion_point(field_unsafe_arena_release:abacus.protobuf.Metric.float64)
  if (type_case() == kFloat64) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Float64Metric*>(_impl_.type_.float64_);
    _impl_.type_.float64_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Metric::unsafe_arena_set_allocated_float64(
    ::abacus::protobuf::Float64Metric* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_float64();
    _impl_.type_.float64_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:abacus.protobuf.Metric.float64)
}
inline ::abacus::protobuf::Float64Metric* PROTOBUF_NONNULL Metric::_internal_mutable_float64() {
  if (type_case() != kFloat64) {
    clear_type();
    set_has_float64();
    _impl_.type_.float64_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::abacus::protobuf::Float64Metric>(GetArena()));
  }
  return reinterpret_cast<::abacus::protobuf::Float64Metric*>(_impl_.type_.float64_);
}
inline ::abacus::protobuf::Float64Metric* PROTOBUF_NONNULL Metric::mutable_float64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::abacus::protobuf::Float64Metric* _msg = _internal_mutable_float64();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Metric.float64)
  return _msg;
}

// .abacus.protobuf.Float32Metric float32 = 7;
inline bool Metric::has_float32() const {
  return type_case() == kFloat32;
}
inline bool Metric::_internal_has_float32() const {
  return type_case() == kFloat32;
}
inline void Metric::set_has_float32() {
  _impl_._oneof_case_[0] = kFloat32;
}
inline void Metric::clear_float32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kFloat32) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.float32_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.float32_);
    }
    clear_has_type();
  }
}
inline ::abacus::protobuf::Float32Metric* PROTOBUF_NULLABLE Metric::release_float32() {
  // @@protoc_insertion_point(field_release:abacus.protobuf.Metric.float32)
  if (type_case() == kFloat32) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Float32Metric*>(_impl_.type_.float32_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.float32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::abacus::protobuf::Float32Metric& Metric::_internal_float32() const {
  return type_case() == kFloat32 ? *reinterpret_cast<::abacus::protobuf::Float32Metric*>(_impl_.type_.float32_) : reinterpret_cast<::abacus::protobuf::Float32Metric&>(::abacus::protobuf::_Float32Metric_default_instance_);
}
inline const ::abacus::protobuf::Float32Metric& Metric::float32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Metric.float32)
  return _internal_float32();
}
inline ::abacus::protobuf::Float32Metric* PROTOBUF_NULLABLE Metric::unsafe_arena_release_float32() {
  // @@protoc_insertion_point(field_unsafe_arena_release:abacus.protobuf.Metric.float32)
  if (type_case() == kFloat32) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Float32Metric*>(_impl_.type_.float32_);
    _impl_.type_.float32_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Metric::unsafe_arena_set_allocated_float32(
    ::abacus::protobuf::Float32Metric* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_float32();
    _impl_.type_.float32_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:abacus.protobuf.Metric.float32)
}
inline ::abacus::protobuf::Float32Metric* PROTOBUF_NONNULL Metric::_internal_mutable_float32() {
  if (type_case() != kFloat32) {
    clear_type();
    set_has_float32();
    _impl_.type_.float32_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::abacus::protobuf::Float32Metric>(GetArena()));
  }
  return reinterpret_cast<::abacus::protobuf::Float32Metric*>(_impl_.type_.float32_);
}
inline ::abacus::protobuf::Float32Metric* PROTOBUF_NONNULL Metric::mutable_float32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::abacus::protobuf::Float32Metric* _msg = _internal_mutable_float32();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Metric.float32)
  return _msg;
}

// .abacus.protobuf.BoolMetric boolean = 8;
inline bool Metric::has_boolean() const {
  return type_case() == kBoolean;
}
inline bool Metric::_internal_has_boolean() const {
  return type_case() == kBoolean;
}
inline void Metric::set_has_boolean() {
  _impl_._oneof_case_[0] = kBoolean;
}
inline void Metric::clear_boolean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kBoolean) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.boolean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.boolean_);
    }
    clear_has_type();
  }
}
inline ::abacus::protobuf::BoolMetric* PROTOBUF_NULLABLE Metric::release_boolean() {
  // @@protoc_insertion_point(field_release:abacus.protobuf.Metric.boolean)
  if (type_case() == kBoolean) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::BoolMetric*>(_impl_.type_.boolean_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.boolean_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::abacus::protobuf::BoolMetric& Metric::_internal_boolean() const {
  return type_case() == kBoolean ? *reinterpret_cast<::abacus::protobuf::BoolMetric*>(_impl_.type_.boolean_) : reinterpret_cast<::abacus::protobuf::BoolMetric&>(::abacus::protobuf::_BoolMetric_default_instance_);
}
inline const ::abacus::protobuf::BoolMetric& Metric::boolean() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Metric.boolean)
  return _internal_boolean();
}
inline ::abacus::protobuf::BoolMetric* PROTOBUF_NULLABLE Metric::unsafe_arena_release_boolean() {
  // @@protoc_insertion_point(field_unsafe_arena_release:abacus.protobuf.Metric.boolean)
  if (type_case() == kBoolean) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::BoolMetric*>(_impl_.type_.boolean_);
    _impl_.type_.boolean_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Metric::unsafe_arena_set_allocated_boolean(
    ::abacus::protobuf::BoolMetric* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_boolean();
    _impl_.type_.boolean_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:abacus.protobuf.Metric.boolean)
}
inline ::abacus::protobuf::BoolMetric* PROTOBUF_NONNULL Metric::_internal_mutable_boolean() {
  if (type_case() != kBoolean) {
    clear_type();
    set_has_boolean();
    _impl_.type_.boolean_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::abacus::protobuf::BoolMetric>(GetArena()));
  }
  return reinterpret_cast<::abacus::protobuf::BoolMetric*>(_impl_.type_.boolean_);
}
inline ::abacus::protobuf::BoolMetric* PROTOBUF_NONNULL Metric::mutable_boolean()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::abacus::protobuf::BoolMetric* _msg = _internal_mutable_boolean();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Metric.boolean)
  return _msg;
}

// .abacus.protobuf.Enum8Metric enum8 = 9;
inline bool Metric::has_enum8() const {
  return type_case() == kEnum8;
}
inline bool Metric::_internal_has_enum8() const {
  return type_case() == kEnum8;
}
inline void Metric::set_has_enum8() {
  _impl_._oneof_case_[0] = kEnum8;
}
inline void Metric::clear_enum8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kEnum8) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.enum8_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.enum8_);
    }
    clear_has_type();
  }
}
inline ::abacus::protobuf::Enum8Metric* PROTOBUF_NULLABLE Metric::release_enum8() {
  // @@protoc_insertion_point(field_release:abacus.protobuf.Metric.enum8)
  if (type_case() == kEnum8) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Enum8Metric*>(_impl_.type_.enum8_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.enum8_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::abacus::protobuf::Enum8Metric& Metric::_internal_enum8() const {
  return type_case() == kEnum8 ? *reinterpret_cast<::abacus::protobuf::Enum8Metric*>(_impl_.type_.enum8_) : reinterpret_cast<::abacus::protobuf::Enum8Metric&>(::abacus::protobuf::_Enum8Metric_default_instance_);
}
inline const ::abacus::protobuf::Enum8Metric& Metric::enum8() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:abacus.protobuf.Metric.enum8)
  return _internal_enum8();
}
inline ::abacus::protobuf::Enum8Metric* PROTOBUF_NULLABLE Metric::unsafe_arena_release_enum8() {
  // @@protoc_insertion_point(field_unsafe_arena_release:abacus.protobuf.Metric.enum8)
  if (type_case() == kEnum8) {
    clear_has_type();
    auto* temp = reinterpret_cast<::abacus::protobuf::Enum8Metric*>(_impl_.type_.enum8_);
    _impl_.type_.enum8_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Metric::unsafe_arena_set_allocated_enum8(
    ::abacus::protobuf::Enum8Metric* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_enum8();
    _impl_.type_.enum8_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:abacus.protobuf.Metric.enum8)
}
inline ::abacus::protobuf::Enum8Metric* PROTOBUF_NONNULL Metric::_internal_mutable_enum8() {
  if (type_case() != kEnum8) {
    clear_type();
    set_has_enum8();
    _impl_.type_.enum8_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::abacus::protobuf::Enum8Metric>(GetArena()));
  }
  return reinterpret_cast<::abacus::protobuf::Enum8Metric*>(_impl_.type_.enum8_);
}
inline ::abacus::protobuf::Enum8Metric* PROTOBUF_NONNULL Metric::mutable_enum8()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::abacus::protobuf::Enum8Metric* _msg = _internal_mutable_enum8();
  // @@protoc_insertion_point(field_mutable:abacus.protobuf.Metric.enum8)
  return _msg;
}

inline bool Metric::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void Metric::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline Metric::TypeCase Metric::type_case() const {
  return Metric::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MetricsMetadata

// uint32 protocol_version = 1;
inline void MetricsMetadata::clear_protocol_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t MetricsMetadata::protocol_version() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.MetricsMetadata.protocol_version)
  return _internal_protocol_version();
}
inline void MetricsMetadata::set_protocol_version(::uint32_t value) {
  _internal_set_protocol_version(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.MetricsMetadata.protocol_version)
}
inline ::uint32_t MetricsMetadata::_internal_protocol_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_version_;
}
inline void MetricsMetadata::_internal_set_protocol_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_version_ = value;
}

// .abacus.protobuf.Endianness endianness = 2;
inline void MetricsMetadata::clear_endianness() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endianness_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::abacus::protobuf::Endianness MetricsMetadata::endianness() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.MetricsMetadata.endianness)
  return _internal_endianness();
}
inline void MetricsMetadata::set_endianness(::abacus::protobuf::Endianness value) {
  _internal_set_endianness(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.MetricsMetadata.endianness)
}
inline ::abacus::protobuf::Endianness MetricsMetadata::_internal_endianness() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::abacus::protobuf::Endianness>(_impl_.endianness_);
}
inline void MetricsMetadata::_internal_set_endianness(::abacus::protobuf::Endianness value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endianness_ = value;
}

// fixed32 sync_value = 3;
inline void MetricsMetadata::clear_sync_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t MetricsMetadata::sync_value() const {
  // @@protoc_insertion_point(field_get:abacus.protobuf.MetricsMetadata.sync_value)
  return _internal_sync_value();
}
inline void MetricsMetadata::set_sync_value(::uint32_t value) {
  _internal_set_sync_value(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:abacus.protobuf.MetricsMetadata.sync_value)
}
inline ::uint32_t MetricsMetadata::_internal_sync_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sync_value_;
}
inline void MetricsMetadata::_internal_set_sync_value(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_value_ = value;
}

// map<string, .abacus.protobuf.Metric> metrics = 4;
inline int MetricsMetadata::_internal_metrics_size() const {
  return _internal_metrics().size();
}
inline int MetricsMetadata::metrics_size() const {
  return _internal_metrics_size();
}
inline void MetricsMetadata::clear_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::abacus::protobuf::Metric>& MetricsMetadata::_internal_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metrics_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::abacus::protobuf::Metric>& MetricsMetadata::metrics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:abacus.protobuf.MetricsMetadata.metrics)
  return _internal_metrics();
}
inline ::google::protobuf::Map<std::string, ::abacus::protobuf::Metric>* PROTOBUF_NONNULL MetricsMetadata::_internal_mutable_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metrics_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::abacus::protobuf::Metric>* PROTOBUF_NONNULL MetricsMetadata::mutable_metrics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:abacus.protobuf.MetricsMetadata.metrics)
  return _internal_mutable_metrics();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace abacus


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::abacus::protobuf::Endianness> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::abacus::protobuf::Endianness>() {
  return ::abacus::protobuf::Endianness_descriptor();
}
template <>
struct is_proto_enum<::abacus::protobuf::Kind> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::abacus::protobuf::Kind>() {
  return ::abacus::protobuf::Kind_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // abacus_2fprotobuf_2fmetrics_2eproto_2epb_2eh
